var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/Account.html",[0,1.76,1,1.623]],["body/entities/Account.html",[0,1.434,1,2.868,2,1.268,3,0.059,4,0.029,5,0.024,6,1.869,7,0.23,8,0.786,9,2.333,10,3.515,11,3.515,12,3.515,13,3.515,14,3.515,15,3.515,16,2.948,17,3.024,18,3.515,19,1.996,20,1.535,21,3.515,22,1.069,23,3.515,24,3.515,25,0.005,26,0.99,27,2.318,28,4.813,29,4.016,30,0.959,31,2.368,32,3.02,33,4.037,34,4.364,35,2.368,36,2.137,37,5.389,38,2.368,39,2.368,40,2.286,41,2.368,42,1.081,43,3.789,44,2.368,45,2.368,46,4.583,47,1.618,48,2.795,49,2.368,50,2.368,51,2.368,52,3.02,53,3.02,54,2.368,55,2.368,56,2.061,57,2.193,58,2.347,59,2.368,60,1.865,61,2.368,62,2.092,63,2.368,64,2.858,65,1.671,66,1.525,67,2.368,68,2.899,69,2.368,70,2.7,71,2.615,72,2.368,73,0.277,74,3.914,75,2.899,76,1.571,77,3.879,78,3.879,79,2.468,80,0.875,81,3.8,82,0.887,83,1.34,84,1.671,85,1.869,86,1.794,87,3.188,88,1.794,89,2.125,90,1.794,91,3.188,92,1.794,93,2.183,94,1.869,95,1.671,96,3.542,97,1.487,98,0.074,99,0.317,100,1.148,101,1.268,102,1.886,103,1.869,104,1.869,105,1.729,106,1.729,107,1.729,108,1.729,109,1.729,110,1.869,111,1.618,112,4.364,113,2.649,114,1.869,115,1.869,116,1.671,117,1.869,118,1.869,119,1.618,120,1.869,121,1.869,122,1.618,123,1.869,124,0.002,125,0.002]],["title/classes/Account-1.html",[1,1.36,99,0.206,126,1.735]],["body/classes/Account-1.html",[0,1.434,1,2.868,3,0.059,4,0.029,5,0.024,6,1.869,7,0.23,8,0.786,9,2.333,10,3.515,11,3.515,12,3.515,13,3.515,14,3.515,15,3.515,16,2.948,17,3.024,18,3.515,19,1.996,20,1.535,21,3.515,22,1.069,23,3.515,24,3.515,25,0.005,26,0.99,27,2.318,28,4.813,29,4.016,30,0.959,31,2.368,32,3.02,33,4.037,34,4.364,35,2.368,36,2.137,37,5.389,38,2.368,39,2.368,40,2.286,41,2.368,42,1.081,43,3.789,44,2.368,45,2.368,46,4.583,47,1.618,48,2.795,49,2.368,50,2.368,51,2.368,52,3.02,53,3.02,54,2.368,55,2.368,56,2.061,57,2.193,58,2.347,59,2.368,60,1.865,61,2.368,62,2.092,63,2.368,64,2.858,65,1.671,66,1.525,67,2.368,68,2.899,69,2.368,70,2.7,71,2.615,72,2.368,73,0.277,74,3.914,75,2.899,76,1.571,77,3.879,78,3.879,79,2.468,80,0.875,81,3.8,82,0.887,83,1.34,84,1.671,85,1.869,86,1.794,87,3.188,88,1.794,89,2.125,90,1.794,91,3.188,92,1.794,93,2.183,94,1.869,95,1.671,96,3.542,97,1.487,98,0.074,99,0.317,100,1.148,101,1.268,102,1.886,103,1.869,104,1.869,105,1.729,106,1.729,107,1.729,108,1.729,109,1.729,110,1.869,111,1.618,112,4.364,113,2.649,114,1.869,115,1.869,116,1.671,117,1.869,118,1.869,119,1.618,120,1.869,121,1.869,122,1.618,123,1.869,124,0.002,125,0.002,127,0.417]],["title/injectables/AccountService.html",[128,1.011,129,3.88]],["body/injectables/AccountService.html",[3,0.071,4,0.071,5,0.059,7,0.562,9,1.598,20,1.369,22,0.716,25,0.005,30,0.846,73,0.31,80,2.14,98,0.071,99,0.303,124,0.003,125,0.003,128,1.577,129,6.052,130,2.17,131,6.445,132,2.174,133,4.585,134,7.818,135,3.229,136,6.445,137,7.35,138,6.445,139,2.2,140,8.153,141,6.445,142,1.761,143,3.958,144,5.362,145,4.085,146,1.108,147,3.958,148,6.445,149,6.445,150,4.085,151,2.727,152,1.74,153,6.445,154,1.577]],["title/classes/AdminGateway.html",[99,0.245,155,4.349]],["body/classes/AdminGateway.html",[3,0.068,4,0.068,5,0.056,7,0.536,9,1.96,20,1.68,22,0.879,25,0.005,27,1.542,30,0.821,73,0.304,98,0.068,99,0.288,124,0.003,125,0.003,127,0.972,132,2.108,133,4.483,135,2.434,139,2.7,142,1.679,151,2.599,152,1.659,155,6.579,156,6.145,157,6.579,158,6.145,159,7.259,160,6.145,161,5.112,162,2.303,163,6.579,164,6.145,165,4.856,166,4.713,167,6.579,168,5.112,169,5.112,170,4.806,171,5.522,172,5.112,173,5.112,174,6.579,175,5.112,176,5.112,177,6.145,178,2.74,179,5.112,180,6.145,181,5.112]],["title/modules/AdminModule.html",[182,1.561,183,3.88]],["body/modules/AdminModule.html",[3,0.076,4,0.076,5,0.063,25,0.004,73,0.304,98,0.076,99,0.323,124,0.004,125,0.004,146,1.184,155,7.07,159,7.472,171,6.19,182,2.752,183,7.472,184,2.865,185,2.914,186,3.071,187,3.071,188,3.017,189,4.037,190,3.071,191,6.19,192,6.19,193,3.789,194,2.964,195,3.071,196,6.887,197,6.887]],["title/injectables/AdminService.html",[128,1.011,159,3.88]],["body/injectables/AdminService.html",[3,0.086,4,0.086,5,0.072,25,0.004,73,0.258,98,0.086,99,0.368,124,0.004,125,0.004,128,1.776,130,2.638,146,1.347,159,6.816,198,7.834]],["title/classes/Announcement.html",[99,0.245,199,2.419]],["body/classes/Announcement.html",[1,2.597,3,0.027,4,0.027,5,0.022,7,0.211,8,0.733,19,0.9,20,0.843,22,1.018,25,0.005,26,0.834,30,0.916,36,1.072,42,1.283,64,2.474,66,1.601,73,0.213,83,2.184,89,2.409,93,2.474,97,1.796,98,0.107,99,0.445,100,1.598,102,0.741,113,1.041,124,0.002,125,0.002,127,0.383,154,0.768,162,2.089,199,2.706,200,1.141,201,3.418,202,3.275,203,2.989,204,2.431,205,2.986,206,3.108,207,2.431,208,2.212,209,1.501,210,1.375,211,1.415,212,2.418,213,2.431,214,2.418,215,2.418,216,3.366,217,1.401,218,2.353,219,1.401,220,1.401,221,1.401,222,1.401,223,1.401,224,2.383,225,1.401,226,1.098,227,1.91,228,1.059,229,1.059,230,1.059,231,1.006,232,0.887,233,2.274,234,0.914,235,1.023,236,1.023,237,2.706,238,2.989,239,3.544,240,2.338,241,3.394,242,2.706,243,1.164,244,1.164,245,3.946,246,2.951,247,1.141,248,1.164,249,1.141,250,1.164,251,1.141,252,1.164,253,1.141,254,1.164,255,1.141,256,1.141,257,1.141,258,1.141,259,2.383,260,1.141,261,1.141,262,1.141,263,1.873,264,1.119,265,1.059,266,1.164,267,2.431,268,1.164,269,1.006,270,1.164,271,0.973,272,0.741,273,3.047,274,1.098,275,1.164,276,1.164,277,1.164,278,1.164,279,1.164,280,1.838,281,1.164,282,1.873,283,1.164,284,1.119,285,1.573,286,1.164,287,1.164,288,0.958,289,1.164,290,1.164,291,1.164,292,1.911,293,1.119,294,3.354,295,1.119,296,1.164,297,1.119,298,1.119,299,1.164,300,1.873,301,1.164,302,1.873,303,1.164,304,1.006,305,1.078,306,1.141,307,1.164,308,1.164,309,1.164,310,1.164,311,1.164,312,1.141,313,1.141,314,1.141,315,1.141,316,1.164,317,1.164,318,1.098,319,1.164,320,1.119,321,1.164,322,1.141,323,1.164,324,1.141,325,1.164]],["title/modules/ApiModule.html",[182,1.561,326,4.088]],["body/modules/ApiModule.html",[3,0.056,4,0.056,5,0.047,25,0.005,73,0.296,98,0.056,99,0.239,124,0.003,125,0.003,146,0.876,182,2.378,184,2.118,185,2.154,186,2.271,187,2.271,188,2.23,189,2.23,190,2.271,193,3.112,194,2.191,195,2.271,322,2.402,326,8.298,327,4.576,328,4.576,329,6.881,330,6.881,331,6.574,332,6.574,333,6.881,334,6.881,335,6.881,336,6.881,337,6.881,338,6.881,339,6.881,340,5.092,341,3.66,342,4.576,343,6.979,344,5.092,345,5.092,346,4.236,347,3.779,348,3.779]],["title/modules/AppModule.html",[182,1.561,349,4.088]],["body/modules/AppModule.html",[3,0.063,4,0.063,5,0.052,25,0.005,73,0.339,97,1.254,98,0.063,99,0.267,124,0.003,125,0.003,146,0.98,182,2.517,184,2.369,185,2.41,186,2.54,187,2.54,188,2.495,189,2.495,190,2.54,193,3.357,194,2.452,195,2.54,331,6.613,341,3.947,342,5.12,349,7.492,350,5.12,351,5.697,352,5.697,353,2.721,354,5.978,355,5.978,356,5.978,357,6.593,358,6.593,359,6.593,360,6.593,361,4.229,362,5.697,363,5.697,364,5.697,365,5.697,366,5.697,367,5.697,368,5.697,369,5.697,370,5.697,371,5.697,372,5.697,373,5.697]],["title/classes/AssociateUser.html",[99,0.245,374,3.313]],["body/classes/AssociateUser.html",[3,0.089,4,0.071,5,0.059,19,2.393,25,0.005,26,0.94,36,1.734,42,2.066,60,2.814,62,3.156,66,1.593,73,0.212,89,2.022,93,2.076,96,3.369,97,1.414,98,0.11,99,0.464,124,0.003,125,0.003,127,1.017,154,1.243,210,2.225,211,2.289,232,2.985,246,2.586,304,2.673,374,5.158,375,4.557,376,5.163,377,4.073,378,4.073,379,3.945,380,3.945,381,4.557,382,3.945,383,4.073,384,4.073]],["title/classes/AssociateUser-1.html",[99,0.206,126,1.735,374,2.776]],["body/classes/AssociateUser-1.html",[3,0.082,4,0.082,5,0.069,25,0.005,73,0.315,76,4.454,80,2.482,97,1.965,98,0.082,99,0.351,100,1.27,124,0.004,125,0.004,127,1.182,232,2.742,374,5.66,385,7.473,386,5.087,387,5.3,388,5.3,389,7.473]],["title/entities/AuthAccount.html",[0,1.76,147,3.21]],["body/entities/AuthAccount.html",[0,2.43,2,2.575,3,0.059,4,0.059,5,0.049,7,0.466,8,1.332,22,1.015,25,0.005,27,2.194,30,0.907,43,2.905,46,4.824,65,3.391,66,2.168,73,0.31,74,4.182,80,1.776,97,2.116,98,0.059,99,0.251,100,0.909,101,3.474,124,0.003,125,0.003,147,4.432,232,3.35,376,5.289,378,5.178,390,5.35,391,7.341,392,5.358,393,7.218,394,5.35,395,3.188,396,5.35,397,5.645,398,7.218,399,5.35,400,3.285,401,5.35,402,5.35,403,7.218,404,5.561,405,5.35,406,4.914,407,3.971,408,5.645,409,5.35,410,3.794,411,4.184,412,5.35,413,4.808]],["title/controllers/AuthController.html",[355,3.707,414,1.862]],["body/controllers/AuthController.html",[3,0.07,4,0.07,5,0.058,7,0.555,9,1.578,20,1.353,22,0.708,25,0.005,27,1.597,30,0.661,73,0.293,97,1.78,98,0.07,99,0.299,124,0.003,125,0.003,132,2.157,133,4.559,139,2.174,142,1.74,146,1.095,151,2.694,178,2.84,353,2.302,355,5.737,414,2.882,415,6.368,416,8.09,417,6.368,418,9.356,419,6.368,420,6.368,421,5.737,422,6.053,423,6.368,424,6.368,425,8.09,426,3.795,427,5.722,428,6.368,429,5.128,430,4.515,431,6.368,432,4.98,433,6.368,434,6.368,435,6.368]],["title/controllers/AuthController-1.html",[126,1.735,355,3.105,414,1.56]],["body/controllers/AuthController-1.html",[3,0.084,4,0.084,5,0.071,25,0.004,73,0.253,98,0.084,99,0.361,124,0.004,125,0.004,135,3.046,146,1.323,353,2.78,355,6.441,377,4.875,414,2.74,436,7.691,437,5.236,438,7.691]],["title/guards/AuthGuard.html",[439,3.88,440,3.558]],["body/guards/AuthGuard.html",[3,0.052,4,0.052,5,0.044,7,0.414,9,1.902,20,1.63,22,0.972,25,0.005,26,0.7,30,0.796,58,2.079,73,0.253,98,0.052,99,0.223,124,0.003,125,0.003,128,1.286,132,1.773,133,3.934,135,1.88,139,2.62,142,1.817,146,0.816,150,4.864,151,2.008,152,2.071,166,3.963,178,2.117,288,2.634,318,2.156,395,4.573,421,4.715,429,5.27,440,4.526,441,3.367,442,4.748,443,6.171,444,6.649,445,4.267,446,7.546,447,4.748,448,4.935,449,6.171,450,4.748,451,6.649,452,7.262,453,4.748,454,5.2,455,3.524,456,4.267,457,2.332,458,4.267,459,3.713,460,6.739,461,3.95,462,4.748,463,5.532,464,4.267,465,4.267,466,4.526,467,4.267,468,4.267,469,5.453,470,4.267,471,3.713,472,4.267,473,5.2,474,4.267,475,4.267,476,4.267,477,3.524,478,4.267,479,4.267,480,4.267,481,4.267,482,4.267,483,3.95,484,4.267,485,4.748]],["title/guards/AuthGuard-1.html",[126,1.735,439,3.251,440,2.981]],["body/guards/AuthGuard-1.html",[3,0.069,4,0.069,5,0.058,7,0.55,9,1.564,20,1.341,22,0.701,25,0.005,30,0.655,36,2.171,58,2.764,73,0.265,98,0.069,99,0.296,124,0.003,125,0.003,128,1.556,132,2.145,139,2.154,142,1.725,146,1.085,152,2.171,166,4.794,421,5.704,429,4,440,5.476,441,4.475,443,7.149,448,4.684,449,6.922,452,4.684,457,3.1,459,4.935,486,5.671,487,6.31,488,7.958,489,4.935,490,7.229,491,6.31,492,6.31,493,5.671,494,5.671,495,5.671,496,6.31,497,6.31,498,6.31,499,4.475]],["title/classes/AuthMetadata.html",[99,0.245,406,3.558]],["body/classes/AuthMetadata.html",[3,0.073,4,0.073,5,0.061,7,0.576,8,1.528,22,1.005,25,0.005,26,0.871,27,2.269,30,0.939,42,2.408,60,3.627,73,0.218,80,2.194,98,0.073,99,0.31,124,0.004,125,0.004,127,1.045,154,1.749,210,3.132,211,3.222,272,2.025,406,5.637,500,6.607,501,6.714,502,6.607,503,5.249,504,6.607,505,6.714,506,6.607,507,3.828]],["title/modules/AuthModule.html",[182,1.561,329,3.88]],["body/modules/AuthModule.html",[2,2.433,3,0.056,4,0.056,5,0.046,20,1.074,25,0.005,58,2.214,73,0.335,98,0.056,99,0.237,124,0.003,125,0.003,129,6.866,145,3.204,146,0.869,147,3.104,182,2.369,184,2.103,185,2.138,186,2.254,187,2.254,188,2.214,189,3.475,190,2.254,193,3.097,194,2.175,195,2.254,329,7.585,341,2.651,353,2.51,355,5.626,376,3.819,408,5.431,426,3.013,455,3.752,473,5.431,508,4.543,509,4.543,510,6.866,511,6.866,512,6.866,513,6.866,514,5.055,515,5.055,516,3.752,517,6.945,518,3.104,519,3.953,520,5.431,521,4.543,522,5.055,523,4.555,524,3.204,525,4.543,526,4.543,527,4.543,528,5.055,529,5.055,530,3.953,531,3.953,532,5.055,533,5.055]],["title/interfaces/AuthOptions.html",[534,2.104,535,4.349]],["body/interfaces/AuthOptions.html",[3,0.069,4,0.069,5,0.058,7,0.548,8,1.482,9,1.99,22,0.892,25,0.005,73,0.324,82,2.118,98,0.069,102,1.928,124,0.003,125,0.003,146,1.082,152,1.698,232,3.417,410,4.462,440,5.466,454,6.279,460,4.462,499,4.462,534,2.532,535,7.356,536,3.75,537,5.654,538,7.749,539,6.292,540,6.292,541,6.279,542,6.292,543,8.029,544,6.292,545,6.292,546,6.292,547,6.292,548,5.654,549,6.292,550,6.292,551,6.292,552,6.292,553,6.292,554,6.292]],["title/injectables/AuthService.html",[128,1.011,422,3.558]],["body/injectables/AuthService.html",[3,0.086,4,0.086,5,0.072,25,0.004,73,0.258,98,0.086,99,0.368,124,0.004,125,0.004,128,1.776,130,2.638,146,1.347,422,6.251,555,7.834]],["title/injectables/AuthService-1.html",[126,1.735,128,0.847,422,2.981]],["body/injectables/AuthService-1.html",[3,0.085,4,0.085,5,0.071,25,0.004,73,0.255,98,0.085,99,0.364,124,0.004,125,0.004,128,1.765,130,2.608,135,3.069,146,1.332,422,6.21,556,7.748]],["title/classes/BackLine.html",[99,0.245,557,3.88]],["body/classes/BackLine.html",[3,0.08,4,0.08,5,0.067,25,0.004,66,1.814,73,0.241,83,2.774,98,0.108,99,0.444,100,1.244,124,0.004,125,0.004,127,1.158,162,1.927,231,3.044,457,3.595,557,6.545,558,5.723,559,4.623,560,4.981,561,3.671,562,4.025,563,5.432]],["title/entities/Band.html",[0,1.76,87,2.466]],["body/entities/Band.html",[0,2.521,1,2.887,2,2.72,3,0.062,4,0.062,5,0.052,7,0.493,8,1.382,9,1.856,22,0.993,25,0.005,26,0.941,27,2.243,30,0.928,43,3.379,46,4.212,47,3.47,73,0.306,74,4.338,78,4.019,79,4.338,80,1.876,81,3.114,82,1.902,87,3.533,91,4.51,92,3.847,98,0.062,99,0.265,100,0.96,116,4.746,124,0.003,125,0.003,154,1.624,246,3.013,274,3.814,400,3.47,503,4.746,507,3.274,564,5.651,565,8.397,566,5.651,567,5.651,568,5.651,569,5.651,570,5.651,571,5.651,572,4.419,573,5.078,574,5.651,575,5.651]],["title/classes/BandAccount.html",[99,0.245,116,3.313]],["body/classes/BandAccount.html",[0,1.759,1,2.812,3,0.057,4,0.038,5,0.031,6,2.423,7,0.298,8,0.964,10,2.241,11,2.241,12,2.241,13,2.241,14,2.241,15,2.241,16,1.879,17,1.928,18,2.241,19,1.272,20,1.347,21,2.241,22,0.85,23,2.241,24,2.241,25,0.005,26,0.934,27,1.311,29,3.759,30,0.542,32,2.423,33,3.427,34,3.705,36,1.917,40,1.834,42,0.868,43,3.943,46,4.879,48,2.881,52,2.423,53,2.423,58,2.288,60,1.497,62,1.678,64,2.683,66,1.295,68,2.326,70,2.166,71,2.098,73,0.298,74,4.434,75,3.556,76,2.036,77,4.332,78,4.332,79,3.027,80,1.135,81,4.012,82,1.15,83,1.644,84,2.166,85,2.423,86,2.326,87,4.086,88,2.326,89,2.408,90,2.326,91,3.611,92,2.326,93,2.473,94,2.423,95,2.166,96,4.013,97,1.776,98,0.084,99,0.359,100,1.301,101,1.645,102,2.176,103,2.423,104,2.423,105,2.241,106,2.241,107,2.241,108,2.241,109,2.241,110,2.423,111,2.098,112,5.427,113,3.473,114,2.423,115,2.423,116,3.311,117,3.705,118,2.423,119,2.098,120,2.423,121,2.423,122,2.098,123,2.423,124,0.002,125,0.002,127,0.541,400,2.098,576,3.417,577,2.241,578,3.417]],["title/controllers/BandsController.html",[360,4.088,414,1.862]],["body/controllers/BandsController.html",[3,0.055,4,0.055,5,0.046,7,0.434,9,2.104,20,1.804,22,0.943,25,0.005,26,1.073,27,2.235,30,0.924,73,0.164,87,4.006,98,0.055,99,0.234,124,0.003,125,0.003,132,1.833,135,1.974,139,2.898,142,2.434,146,0.857,152,2.404,154,1.946,165,3.06,201,2.805,353,1.801,360,5.378,414,1.775,437,3.392,579,4.983,580,4.098,581,2.96,582,4.259,583,3.45,584,3.691,585,3.45,586,4.478,587,4.983,588,5.845,589,4.983,590,2.675,591,4.681,592,4.983,593,2.675,594,4.681,595,4.983,596,2.675,597,6.64,598,4.681,599,4.983,600,4.681,601,3.269,602,3.392,603,2.97,604,4.983,605,3.392,606,3.392,607,3.534,608,4.877,609,3.392,610,4.877,611,3.392,612,2.741,613,3.392,614,3.534]],["title/modules/BandsModule.html",[182,1.561,330,3.88]],["body/modules/BandsModule.html",[3,0.075,4,0.075,5,0.063,25,0.004,73,0.302,98,0.075,99,0.32,124,0.004,125,0.004,146,1.173,182,2.74,184,2.837,185,2.885,186,3.042,187,3.042,188,2.987,189,4.019,190,3.042,193,3.767,194,2.935,195,3.042,330,7.455,353,3.053,360,7.176,615,6.13,616,6.13,617,7.854,618,6.821,619,6.821,620,6.821]],["title/injectables/BandsService.html",[128,1.011,617,4.088]],["body/injectables/BandsService.html",[3,0.058,4,0.058,5,0.048,7,0.459,9,2.154,20,1.846,22,0.966,25,0.005,26,0.956,30,0.943,73,0.235,87,4.101,98,0.058,99,0.247,124,0.003,125,0.003,128,1.382,130,1.774,132,1.905,139,2.967,142,2.618,146,0.906,152,2.452,154,1.812,162,2.602,288,2.087,580,3.141,581,3.075,582,4.36,583,3.584,584,3.835,585,3.584,586,6.421,588,6.743,590,3.835,593,3.835,596,3.835,597,7.492,612,2.898,617,5.588,621,5.27,622,5.27,623,5.27,624,5.27,625,5.27,626,5.27,627,3.236,628,6.184,629,3.587,630,3.587]],["title/classes/BannedUser.html",[99,0.245,631,3.21]],["body/classes/BannedUser.html",[3,0.059,4,0.059,5,0.049,25,0.005,26,0.759,36,1.948,42,2.319,66,1.326,73,0.269,97,1.924,98,0.11,99,0.465,100,1.634,124,0.003,125,0.003,127,0.846,154,1.035,201,2.91,205,2.086,218,3.288,233,2.864,271,2.153,272,2.212,631,4.432,632,3.285,633,5.777,634,5.016,635,3.285,636,3.285,637,3.285,638,3.285,639,3.285,640,3.285,641,3.285,642,3.285,643,3.285,644,5.369,645,3.391,646,3.391,647,3.391,648,3.391,649,3.391,650,3.391,651,3.391,652,3.391,653,3.391,654,3.391,655,3.285,656,3.285,657,3.285,658,3.285,659,3.285,660,3.285,661,3.391,662,3.391,663,2.743]],["title/classes/BaseEvent.html",[99,0.245,664,4.088]],["body/classes/BaseEvent.html",[3,0.079,4,0.032,5,0.027,7,0.258,8,0.862,9,2.236,17,3.264,22,1.114,25,0.005,26,0.894,27,2.395,30,1.041,36,2.597,42,2.209,43,4.037,56,6.643,58,2.045,60,2.045,62,2.294,73,0.191,77,3.106,78,3.527,79,3.808,80,0.982,83,2.067,84,1.874,97,2.083,98,0.032,99,0.139,100,0.793,101,4.088,102,1.773,124,0.002,125,0.002,127,0.468,154,0.903,162,1.524,208,2.534,209,1.765,210,1.617,211,1.663,216,2.645,226,1.343,227,2.187,228,1.295,229,1.295,230,1.295,233,1.529,663,2.394,664,3.652,665,2.957,666,4.525,667,3.939,668,4.525,669,4.525,670,4.525,671,4.525,672,4.525,673,4.525,674,4.525,675,3.939,676,4.525,677,4.525,678,4.525,679,3.939,680,3.939,681,4.525,682,4.525,683,4.525,684,4.525,685,2.957,686,3.652,687,7.025,688,2.957,689,2.957,690,2.957,691,2.957,692,2.957,693,2.957,694,2.957,695,2.957,696,2.957,697,2.957,698,2.957,699,2.957,700,2.957,701,2.957,702,2.957,703,2.957,704,2.957,705,3.311,706,2.957,707,2.957,708,2.957,709,2.957,710,2.46,711,7.155,712,2.957,713,2.957,714,2.957,715,2.957,716,2.957]],["title/classes/Broadcast.html",[99,0.245,241,2.419]],["body/classes/Broadcast.html",[1,2.458,3,0.026,4,0.026,5,0.022,7,0.21,8,0.73,19,0.896,20,0.84,22,1.017,25,0.005,26,0.833,30,0.915,36,1.068,42,1.279,64,1.673,66,1.597,73,0.212,83,2.179,89,2.405,93,2.47,97,1.794,98,0.107,99,0.444,100,1.597,102,1.212,113,1.036,124,0.002,125,0.002,127,0.381,154,0.765,162,2.085,199,2.33,200,1.136,201,3.435,202,2.376,203,2.982,204,2.423,205,2.98,206,3.101,207,2.423,208,2.205,209,1.495,210,1.369,211,1.409,213,1.904,216,3.361,217,1.395,218,2.347,219,1.395,220,1.395,221,1.395,222,1.395,223,1.395,224,2.376,225,1.395,226,1.093,227,1.903,228,1.054,229,1.054,230,1.054,231,1.001,232,0.883,233,2.269,234,0.91,235,1.018,236,1.018,237,2.699,238,2.982,239,3.538,240,2.33,241,3.664,242,2.699,243,1.158,244,1.158,245,3.941,246,2.946,247,1.136,248,1.158,249,1.136,250,1.158,251,1.136,252,1.158,253,1.136,254,1.158,255,1.136,256,1.136,257,1.136,258,1.136,259,3.268,260,1.136,261,1.136,262,1.136,263,2.376,264,1.831,265,2.205,266,2.423,267,2.423,268,1.158,269,1.001,270,1.158,271,0.969,272,0.738,273,3.04,274,1.093,275,1.158,276,1.158,277,1.158,278,1.158,279,1.158,280,1.831,281,1.158,282,1.866,283,1.158,284,1.114,285,1.567,286,1.158,287,1.158,288,0.953,289,1.158,290,1.158,291,1.158,292,1.904,293,1.114,294,3.348,295,1.114,296,1.158,297,1.114,298,1.114,299,1.158,300,1.866,301,1.158,302,1.866,303,1.158,304,1.001,305,1.073,306,1.136,307,1.158,308,1.158,309,1.158,310,1.158,311,1.158,312,1.136,313,1.136,314,1.136,315,1.136,316,1.158,317,1.158,318,1.093,319,1.158,320,1.114,321,1.158,322,1.136,323,1.158,324,1.136,325,1.158,717,2.407,718,2.407,719,2.407]],["title/classes/Bulletin.html",[99,0.245,242,2.419]],["body/classes/Bulletin.html",[1,2.456,3,0.026,4,0.026,5,0.022,7,0.209,8,0.729,19,0.894,20,0.839,22,1.016,25,0.005,26,0.832,30,0.914,36,1.066,42,1.277,64,1.67,66,1.595,73,0.212,83,2.177,89,2.403,93,2.468,97,1.792,98,0.107,99,0.444,100,1.596,102,0.736,113,1.033,124,0.002,125,0.002,127,0.38,154,0.764,162,2.083,199,2.327,200,1.133,201,3.393,202,2.372,203,2.978,204,2.42,205,2.977,206,3.097,207,2.42,208,2.202,209,1.492,210,1.367,211,1.407,213,1.9,216,3.547,217,1.391,218,2.344,219,1.391,220,1.391,221,1.391,222,1.391,223,1.391,224,2.372,225,1.391,226,1.091,227,1.9,228,1.052,229,1.052,230,1.052,231,0.999,232,0.881,233,2.266,234,0.908,235,1.016,236,1.016,237,2.695,238,2.978,239,3.534,240,2.327,241,3.863,242,2.978,243,1.156,244,1.156,245,3.938,246,2.943,247,1.133,248,1.156,249,1.133,250,1.156,251,1.133,252,1.156,253,1.133,254,1.156,255,1.133,256,1.133,257,1.133,258,1.133,259,3.264,260,1.133,261,1.133,262,1.133,263,2.372,264,1.111,265,2.202,266,2.42,267,2.42,268,1.156,269,0.999,270,1.156,271,0.967,272,0.736,273,3.036,274,1.091,275,1.156,276,1.156,277,1.156,278,1.156,279,1.156,280,1.827,281,1.156,282,1.863,283,1.156,284,1.111,285,1.564,286,1.156,287,1.156,288,0.951,289,1.156,290,1.156,291,1.156,292,1.9,293,1.111,294,3.345,295,1.111,296,1.156,297,1.111,298,1.111,299,1.156,300,1.863,301,1.156,302,1.863,303,1.156,304,0.999,305,1.071,306,1.133,307,1.156,308,1.156,309,1.156,310,1.156,311,1.156,312,1.133,313,1.133,314,1.133,315,1.133,316,1.156,317,1.156,318,1.091,319,1.156,320,1.111,321,1.156,322,1.133,323,1.156,324,1.133,325,1.156,720,1.998,721,1.998,722,1.998]],["title/classes/Business.html",[99,0.245,723,4.088]],["body/classes/Business.html",[3,0.075,4,0.075,5,0.062,7,0.593,8,1.556,9,2.374,22,0.937,25,0.005,26,1.008,27,2.115,30,0.875,37,5.739,43,3.688,73,0.278,80,2.258,81,3.811,82,2.289,98,0.075,99,0.319,124,0.004,125,0.004,127,1.076,272,2.083,723,6.593,724,6.799,725,7.623,726,7.623,727,6.799,728,6.799]],["title/classes/BusinessAccount.html",[99,0.245,729,4.349]],["body/classes/BusinessAccount.html",[1,3.062,3,0.06,4,0.03,5,0.025,7,0.235,8,0.801,9,2.408,10,3.57,11,3.57,12,3.57,13,3.57,14,3.57,15,3.57,16,2.993,17,3.518,18,3.57,19,2.027,20,1.325,21,3.57,22,1.105,23,3.57,24,3.57,25,0.005,26,1.063,30,1.023,36,2.415,40,1.447,42,1.584,48,2.472,60,1.181,62,2.131,66,1.075,70,1.709,71,1.655,73,0.089,83,1.962,87,3.445,89,2.592,91,3.445,93,2.209,98,0.093,99,0.375,100,1.4,102,0.826,105,2.845,106,4.091,107,4.091,108,4.091,109,4.091,124,0.002,125,0.002,127,0.427,154,0.839,162,1.642,209,1.64,210,1.502,211,1.545,216,3.932,226,1.225,227,2.057,228,1.181,229,1.181,230,1.181,231,1.121,274,1.225,285,1.718,347,2.001,457,2.131,559,2.854,560,1.835,561,3.129,562,2.386,580,1.607,663,1.382,667,1.835,675,1.835,679,1.835,680,1.835,725,4.528,726,4.528,729,5.188,730,2.243,731,2.696,732,2.696,733,2.423,734,2.423,735,2.423,736,2.423,737,2.423,738,2.423,739,2.423,740,2.423,741,2.423,742,2.423,743,2.423,744,2.423,745,2.423,746,2.423,747,2.423,748,2.423,749,2.423,750,2.423,751,2.423,752,2.75,753,2.663,754,2.423,755,4.528,756,2.243,757,2.243,758,2.243,759,2.243,760,3.392,761,2.243,762,2.243,763,2.243,764,2.243,765,2.243,766,2.243,767,2.243,768,2.243,769,2.243,770,4.528,771,2.243,772,2.243,773,2.243,774,3.609,775,1.655,776,2.243,777,2.243,778,2.243,779,3.609,780,2.243]],["title/classes/BusinessContact.html",[99,0.245,781,4.349]],["body/classes/BusinessContact.html",[3,0.072,4,0.072,5,0.06,7,0.571,8,1.519,22,1.05,25,0.004,26,1.103,30,0.981,36,2.431,98,0.09,99,0.386,124,0.004,125,0.004,127,1.036,154,1.266,781,6.849,782,5.882,783,8.094,784,8.094,785,8.094,786,8.094,787,6.545,788,6.545,789,6.545,790,6.545,791,5.445,792,4.293,793,5.445,794,3.356,795,5.445,796,5.445,797,5.445]],["title/controllers/ChatController.html",[414,1.862,798,4.349]],["body/controllers/ChatController.html",[3,0.077,4,0.077,5,0.065,7,0.614,25,0.005,26,0.907,27,1.768,30,0.731,73,0.284,98,0.077,99,0.331,124,0.004,125,0.004,132,2.298,142,1.926,146,1.212,151,2.982,152,1.903,178,3.143,353,2.548,414,3.071,798,7.171,799,7.049,800,4.765,801,7.049,802,6.911,803,6.334,804,7.049]],["title/modules/ChatModule.html",[182,1.561,805,4.088]],["body/modules/ChatModule.html",[3,0.074,4,0.074,5,0.062,25,0.005,73,0.301,98,0.074,99,0.318,124,0.004,125,0.004,146,1.165,182,2.732,184,2.819,185,2.867,186,3.022,187,3.022,188,2.968,189,4.007,190,3.022,193,3.752,194,2.917,195,3.022,341,3.553,353,3.041,798,7.612,802,7.443,803,6.09,805,7.842,806,6.09,807,6.09,808,6.777,809,6.777]],["title/injectables/ChatService.html",[128,1.011,802,3.88]],["body/injectables/ChatService.html",[3,0.08,4,0.08,5,0.067,7,0.638,25,0.004,26,0.928,30,0.759,73,0.241,98,0.08,99,0.343,124,0.004,125,0.004,128,1.706,130,2.464,132,2.351,142,2,146,1.258,152,1.975,800,4.826,802,6.545,810,7.318,811,7.318,812,4.638,813,4.638]],["title/classes/Comment.html",[99,0.245,218,2.104]],["body/classes/Comment.html",[1,2.436,3,0.028,4,0.028,5,0.024,7,0.224,8,0.771,19,0.959,20,0.888,22,0.901,25,0.005,26,0.853,30,0.814,36,1.128,42,1.339,64,1.768,66,1.654,73,0.22,83,2.369,89,2.468,93,2.535,97,1.834,98,0.108,99,0.45,100,1.617,102,1.28,113,1.108,124,0.002,125,0.002,127,0.407,154,0.808,162,2.066,199,2.441,200,1.215,201,3.338,202,2.489,203,3.089,204,1.239,205,3.059,206,3.212,207,1.239,208,1.128,209,1.58,210,1.447,211,1.489,213,2.011,216,2.443,218,2.686,224,1.972,226,1.169,227,1.994,228,1.128,229,1.128,230,1.128,231,1.071,232,0.944,233,2.342,234,0.973,235,1.089,236,1.089,237,2.81,238,3.089,239,3.631,240,2.441,241,3.486,242,2.81,243,1.239,244,1.239,245,4.023,246,3.031,247,1.215,248,1.239,249,1.215,250,1.239,251,1.215,252,1.239,253,1.215,254,1.239,255,1.215,256,1.215,257,1.215,258,1.215,259,2.489,260,1.215,261,1.215,262,1.215,263,1.972,264,1.191,265,1.128,266,1.239,267,2.539,268,1.239,269,1.071,270,1.239,271,1.036,272,0.789,273,3.149,274,1.169,275,1.239,276,1.239,277,1.239,278,1.239,279,1.239,280,1.934,281,1.239,282,1.972,283,1.239,284,1.191,285,1.655,286,1.239,287,1.239,288,1.02,289,1.239,290,1.239,291,1.239,292,2.011,293,1.191,294,3.437,295,1.191,296,1.239,297,1.191,298,1.191,299,1.239,300,1.972,301,1.239,302,1.972,303,1.239,304,1.071,305,1.148,306,1.215,307,1.239,308,1.239,309,1.239,310,1.239,311,1.239,312,1.215,313,1.215,314,1.215,315,1.215,316,1.239,317,1.239,318,1.169,319,1.239,320,1.191,321,1.239,322,1.215,323,1.239,324,1.215,325,1.239,814,2.574,815,2.574,816,2.574,817,2.574]],["title/modules/ConfigModule.html",[182,1.561,361,3.88]],["body/modules/ConfigModule.html",[3,0.074,4,0.074,5,0.062,25,0.004,73,0.301,98,0.074,99,0.318,124,0.004,125,0.004,146,1.165,182,2.732,184,2.819,185,2.867,186,3.022,187,3.022,188,2.968,189,3.685,190,4.08,193,3.752,194,2.917,195,3.022,341,3.553,361,7.443,818,6.09,819,6.09,820,8.035,821,6.777,822,6.777,823,5.3,824,6.777,825,6.777,826,6.777]],["title/modules/ConnectionModule.html",[182,1.561,331,3.707]],["body/modules/ConnectionModule.html",[1,2.586,2,3.21,3,0.073,4,0.073,5,0.061,22,0.741,25,0.005,33,4.375,58,3.979,73,0.299,87,3.93,89,2.621,91,3.93,93,2.692,98,0.073,99,0.313,111,5.115,116,5.28,119,5.115,122,5.115,124,0.004,125,0.004,145,4.228,146,1.147,182,2.487,184,2.774,331,5.907,341,3.497,516,4.951,827,6.67,828,6.67,829,6.67,830,6.67,831,6.67,832,6.67,833,6.67,834,6.67,835,6.67]],["title/injectables/ConnectionService.html",[128,1.011,836,3.88]],["body/injectables/ConnectionService.html",[3,0.063,4,0.063,5,0.053,7,0.503,9,1.431,20,1.227,22,0.642,25,0.005,26,1.046,30,0.998,73,0.25,98,0.063,99,0.271,124,0.003,125,0.003,128,1.469,130,1.944,132,2.025,135,2.287,139,1.971,142,2.56,146,0.993,151,2.443,152,2.528,162,2,178,2.575,820,7.52,823,4.516,836,5.638,837,5.775,838,8.102,839,8.102,840,7.501,841,8.102,842,8.102,843,5.19,844,5.775,845,5.775,846,5.775,847,5.775,848,5.775,849,5.775,850,5.19,851,5.19,852,5.19,853,5.19,854,5.19]],["title/injectables/ConnectionService-1.html",[126,1.735,128,0.847,836,3.251]],["body/injectables/ConnectionService-1.html",[3,0.063,4,0.063,5,0.053,7,0.503,9,1.431,20,1.227,22,0.642,25,0.005,26,1.046,30,0.998,73,0.25,98,0.063,99,0.271,124,0.003,125,0.003,128,1.469,130,1.944,132,2.025,135,2.287,139,1.971,142,2.56,146,0.993,151,2.443,152,2.528,162,2,178,2.575,820,7.52,823,4.516,836,5.638,838,8.102,839,8.102,840,7.501,841,8.102,842,8.102,843,5.19,850,5.19,851,5.19,852,5.19,853,5.19,854,5.19,855,5.775,856,5.775,857,5.775,858,5.775,859,5.775,860,5.775,861,5.775]],["title/entities/Contact.html",[0,1.76,40,2.806]],["body/entities/Contact.html",[0,2.418,2,2.555,3,0.058,4,0.058,5,0.049,7,0.463,8,1.325,9,2.161,22,1.043,25,0.005,26,0.988,27,2.355,29,2.608,30,0.974,36,2.534,37,6.2,40,5.039,43,3.778,60,3.145,73,0.237,80,1.763,81,3.992,82,1.788,98,0.058,99,0.249,124,0.003,125,0.003,154,1.762,404,3.614,501,3.941,503,3.365,505,3.941,507,3.076,663,3.682,792,5.337,793,6.77,795,6.77,796,6.77,797,6.77,862,5.31,863,5.31,864,5.31,865,5.31,866,5.33,867,4.772,868,5.31,869,5.31,870,5.31]],["title/classes/ContactDetails.html",[99,0.245,791,4.349]],["body/classes/ContactDetails.html",[3,0.068,4,0.068,5,0.056,7,0.536,8,1.46,22,1.105,25,0.004,26,1.094,30,1.032,36,2.64,98,0.087,99,0.371,124,0.003,125,0.003,127,0.972,154,1.691,781,5.112,782,5.522,783,5.522,784,5.522,785,5.522,786,5.522,791,6.579,792,5.736,793,7.275,794,4.483,795,7.275,796,7.275,797,7.275,871,6.145,872,6.145,873,6.145,874,6.145,875,6.145,876,6.145,877,6.145]],["title/classes/Content.html",[99,0.245,205,2.038]],["body/classes/Content.html",[3,0.062,4,0.062,5,0.052,7,0.493,8,1.382,22,1.062,25,0.005,26,0.883,27,1.418,28,4.419,29,4.124,30,0.992,42,1.901,43,3.013,73,0.294,80,1.876,81,3.492,82,1.902,83,2.812,84,3.582,97,1.848,98,0.062,99,0.265,100,1.272,102,2.294,124,0.003,125,0.003,127,0.894,154,1.448,162,1.488,203,4.304,205,3.801,208,4.073,209,2.83,210,2.592,211,2.667,216,3.598,226,2.567,227,3.174,228,2.475,229,2.475,230,2.475,710,4.701,878,5.651,879,5.651,880,5.651,881,5.651]],["title/controllers/ContentController.html",[414,1.862,882,4.349]],["body/controllers/ContentController.html",[3,0.077,4,0.077,5,0.065,7,0.614,25,0.005,26,0.907,27,1.768,30,0.731,73,0.284,98,0.077,99,0.331,124,0.004,125,0.004,132,2.298,142,1.926,146,1.212,151,2.982,152,1.903,178,3.143,353,2.548,414,3.071,800,4.765,882,7.171,883,7.049,884,7.049,885,6.911,886,6.334,887,7.049]],["title/modules/ContentModule.html",[182,1.561,888,4.088]],["body/modules/ContentModule.html",[3,0.074,4,0.074,5,0.062,25,0.005,73,0.301,98,0.074,99,0.318,124,0.004,125,0.004,146,1.165,182,2.732,184,2.819,185,2.867,186,3.022,187,3.022,188,2.968,189,4.007,190,3.022,193,3.752,194,2.917,195,3.022,341,3.553,353,3.041,882,7.612,885,7.443,886,6.09,888,7.842,889,6.09,890,6.09,891,6.777,892,6.777]],["title/injectables/ContentService.html",[128,1.011,885,3.88]],["body/injectables/ContentService.html",[3,0.08,4,0.08,5,0.067,7,0.638,25,0.004,26,0.928,30,0.759,73,0.241,98,0.08,99,0.343,124,0.004,125,0.004,128,1.706,130,2.464,132,2.351,142,2,146,1.258,152,1.975,800,4.826,812,4.638,813,4.638,885,6.545,893,7.318,894,7.318]],["title/injectables/CoreAuthService.html",[128,1.011,510,3.88]],["body/injectables/CoreAuthService.html",[3,0.027,4,0.027,5,0.022,7,0.212,9,1.822,20,1.562,22,0.817,25,0.005,26,0.943,30,0.849,73,0.282,97,2.101,98,0.027,99,0.114,101,1.17,124,0.002,125,0.002,128,0.772,129,5.457,130,0.819,132,1.064,133,4.747,134,4.881,135,1.58,139,2.51,142,2.172,143,4.274,146,0.418,150,6.154,151,2.74,152,2.208,154,1.135,194,1.717,288,2.566,306,1.147,315,1.147,376,2.194,379,2.449,380,2.449,410,1.725,426,1.449,427,5.273,429,5.421,432,1.902,446,6.116,454,3.12,455,1.805,460,4.161,463,5.389,469,1.595,471,6.002,477,2.961,489,1.902,510,2.961,511,5.457,513,5.457,523,1.595,524,1.541,525,2.185,526,2.185,527,2.185,581,1.047,585,1.22,627,1.493,895,2.432,896,5.868,897,5.868,898,3.989,899,5.821,900,5.821,901,3.989,902,3.989,903,4.738,904,1.902,905,4.589,906,2.432,907,3.12,908,2.432,909,9.072,910,2.961,911,2.432,912,3.585,913,3.989,914,2.432,915,3.989,916,3.989,917,4.595,918,3.989,919,4.41,920,2.432,921,2.432,922,4.881,923,2.432,924,3.989,925,2.432,926,3.678,927,3.989,928,2.432,929,3.989,930,2.432,931,3.585,932,2.432,933,3.319,934,2.432,935,1.902,936,2.023,937,2.432,938,1.655,939,1.541,940,1.902,941,2.432,942,2.432,943,2.432,944,5.072,945,1.725,946,2.432,947,2.432,948,2.432,949,2.432,950,2.432,951,2.716,952,2.432,953,2.432,954,2.185,955,3.989,956,2.432,957,4.558,958,1.725,959,1.725,960,5.072,961,5.868,962,5.072,963,5.072,964,2.432,965,2.432,966,3.989,967,2.432,968,2.432,969,2.432,970,2.185,971,2.432,972,2.432,973,3.989,974,2.432,975,2.185,976,2.432,977,2.432,978,2.432,979,2.432,980,2.432,981,2.432]],["title/classes/CreateBandDto.html",[99,0.245,588,3.88]],["body/classes/CreateBandDto.html",[3,0.088,4,0.088,5,0.073,25,0.004,98,0.088,99,0.375,124,0.004,125,0.004,127,1.263,588,6.891,982,7.982,983,7.174]],["title/classes/CreateEventDto.html",[99,0.245,984,3.88]],["body/classes/CreateEventDto.html",[3,0.088,4,0.088,5,0.073,25,0.004,98,0.088,99,0.375,124,0.004,125,0.004,127,1.263,984,6.891,985,7.982,986,7.174]],["title/classes/CreateLocationDto.html",[99,0.245,987,4.088]],["body/classes/CreateLocationDto.html",[3,0.088,4,0.088,5,0.073,25,0.004,98,0.088,99,0.375,124,0.004,125,0.004,127,1.263,987,7.26,988,7.982,989,7.174]],["title/classes/CreateMusicianDto.html",[99,0.245,990,3.88]],["body/classes/CreateMusicianDto.html",[3,0.088,4,0.088,5,0.073,25,0.004,98,0.088,99,0.375,124,0.004,125,0.004,127,1.263,990,6.891,991,7.982,992,7.174]],["title/classes/CreateNetworkDto.html",[99,0.245,993,3.88]],["body/classes/CreateNetworkDto.html",[3,0.088,4,0.088,5,0.073,25,0.004,98,0.088,99,0.375,124,0.004,125,0.004,127,1.263,993,6.891,994,7.982,995,7.174]],["title/classes/CreateOrganizerDto.html",[99,0.245,996,3.88]],["body/classes/CreateOrganizerDto.html",[3,0.088,4,0.088,5,0.073,25,0.004,98,0.088,99,0.375,124,0.004,125,0.004,127,1.263,996,6.891,997,7.982,998,7.174]],["title/classes/CreateUserDto.html",[99,0.245,939,3.313]],["body/classes/CreateUserDto.html",[3,0.065,4,0.065,5,0.054,7,0.513,8,1.42,22,1.074,25,0.005,26,1.072,27,2.279,29,4.462,30,0.943,73,0.253,81,3.92,82,1.982,98,0.065,99,0.276,101,3.702,124,0.003,125,0.003,127,0.931,379,5.26,380,5.26,395,5.414,917,4.832,926,3.965,939,4.876,999,9.425,1000,4.605,1001,6.442,1002,5.888,1003,5.888,1004,5.888,1005,5.888,1006,3.862,1007,5.888,1008,6.399,1009,4.898,1010,3.862]],["title/classes/CreateUserDto-1.html",[99,0.206,126,1.735,939,2.776]],["body/classes/CreateUserDto-1.html",[3,0.088,4,0.088,5,0.073,25,0.004,98,0.088,99,0.375,124,0.004,125,0.004,127,1.263,939,5.884,1000,6.243,1011,7.982]],["title/classes/CreateVenueDto.html",[99,0.245,1012,3.88]],["body/classes/CreateVenueDto.html",[3,0.088,4,0.088,5,0.073,25,0.004,98,0.088,99,0.375,124,0.004,125,0.004,127,1.263,1012,6.891,1013,7.982,1014,7.174]],["title/entities/Credentials.html",[0,1.76,376,2.875]],["body/entities/Credentials.html",[0,1.611,1,1.833,2,1.468,3,0.065,4,0.034,5,0.028,7,0.266,8,0.883,9,2.496,22,1.11,25,0.005,26,1.073,27,2.409,30,0.996,43,4.151,58,3.758,65,3.743,66,2.38,73,0.195,77,2.569,80,1.013,97,1.471,98,0.085,99,0.277,100,1.003,124,0.002,125,0.002,127,0.757,147,4.105,162,1.761,272,1.466,376,3.677,406,3.258,407,2.265,466,3.258,577,2.001,603,2.852,794,3.951,917,3.951,926,3.567,951,3.258,1015,2.386,1016,4.912,1017,4.618,1018,4.912,1019,5.562,1020,5.562,1021,5.562,1022,5.562,1023,4.912,1024,4.912,1025,4.912,1026,4.912,1027,6.027,1028,3.051,1029,3.981,1030,3.981,1031,3.051,1032,3.394,1033,4.618,1034,3.051,1035,3.051,1036,3.051,1037,3.051,1038,3.051,1039,3.051,1040,6.302,1041,3.051,1042,3.051,1043,3.051,1044,3.051,1045,3.051,1046,3.051,1047,3.051,1048,5.68,1049,3.051,1050,3.051,1051,3.743,1052,3.981,1053,2.386,1054,3.552,1055,3.552,1056,2.852,1057,4.386,1058,2.386,1059,2.386]],["title/injectables/CredentialsService.html",[128,1.011,511,3.88]],["body/injectables/CredentialsService.html",[3,0.086,4,0.086,5,0.072,25,0.004,73,0.258,98,0.086,99,0.368,124,0.004,125,0.004,128,1.776,130,2.638,146,1.347,511,6.816,1060,7.834]],["title/classes/EmailLoginDto.html",[99,0.245,1061,3.558]],["body/classes/EmailLoginDto.html",[3,0.057,4,0.057,5,0.047,7,0.45,8,1.301,22,1.106,25,0.005,26,1.003,27,2.013,29,4.574,30,0.833,66,1.281,73,0.232,81,4.092,82,1.739,98,0.099,99,0.405,100,1.364,124,0.003,125,0.003,127,0.817,216,2.079,272,1.583,395,4.201,457,3.463,534,2.079,794,4.625,917,4.625,919,3.517,926,3.714,938,4.799,945,4.999,958,5.69,959,4.999,1001,5.69,1006,3.389,1010,4.624,1056,4.201,1061,5.462,1062,3.517,1063,6.398,1064,5.166,1065,5.166,1066,4.643,1067,3.517,1068,5.69,1069,4.799,1070,4.799,1071,3.389,1072,3.389]],["title/classes/Event.html",[99,0.245,233,1.712]],["body/classes/Event.html",[1,0.842,3,0.06,4,0.03,5,0.025,7,0.237,8,0.805,9,2.252,16,3.443,17,3.531,22,1.127,25,0.005,26,0.928,30,1.052,36,2.555,42,2.152,48,2.483,60,1.188,62,1.333,66,1.081,73,0.206,83,1.969,87,2.579,89,2.421,91,2.579,93,2.487,97,2,98,0.085,99,0.322,100,1.244,102,2.101,124,0.002,125,0.002,127,0.429,154,1.057,162,1.649,208,2.742,209,1.648,210,1.892,211,1.553,216,2.519,226,1.232,227,2.066,228,1.188,229,1.188,230,1.188,231,1.129,233,2.936,234,1.648,235,1.148,236,1.148,265,1.188,269,1.129,285,1.075,561,3.861,580,3.73,663,1.391,666,4.895,667,3.721,668,4.895,669,4.275,670,4.275,671,4.275,672,4.275,673,4.275,674,4.275,675,3.721,676,4.275,677,4.275,678,4.275,679,3.721,680,3.721,681,4.275,682,4.275,683,4.895,684,4.275,686,2.122,705,1.924,775,3.843,1073,2.122,1074,3.968,1075,2.713,1076,2.713,1077,2.713,1078,2.713,1079,2.713,1080,2.713,1081,2.713,1082,2.713,1083,2.713,1084,2.713,1085,2.713,1086,2.713,1087,3.006,1088,2.713,1089,2.713,1090,2.713,1091,2.713,1092,2.713,1093,2.713,1094,2.713,1095,2.713,1096,2.713,1097,2.713,1098,2.713,1099,2.713,1100,2.713,1101,2.713,1102,2.713,1103,2.713,1104,2.713,1105,2.122,1106,2.257,1107,2.122,1108,2.122,1109,2.122,1110,2.122,1111,2.122,1112,3.236,1113,2.122,1114,2.122,1115,2.122,1116,2.122,1117,2.122,1118,1.924,1119,1.924,1120,3.41,1121,1.617,1122,3.236,1123,3.236,1124,2.122,1125,4.057,1126,3.236,1127,2.257,1128,1.72,1129,2.122,1130,2.122,1131,1.78,1132,2.257,1133,2.122,1134,2.122,1135,2.014,1136,2.257,1137,2.122,1138,2.257]],["title/classes/EventDraft.html",[99,0.245,1128,3.313]],["body/classes/EventDraft.html",[1,1.235,3,0.076,4,0.044,5,0.037,16,3.22,17,3.303,25,0.005,26,0.929,36,2.497,42,2.074,48,2.659,60,1.742,62,1.954,66,1.451,73,0.252,83,1.842,87,2.763,89,2.411,91,2.763,93,2.477,97,2.036,98,0.097,99,0.383,100,1.452,102,2.129,124,0.003,125,0.003,127,0.629,154,0.769,162,1.542,208,2.565,210,1.377,231,1.654,233,3.162,234,2.627,235,1.683,236,1.683,265,1.742,269,1.654,285,1.575,561,3.845,580,3.49,663,2.039,666,4.579,667,2.708,668,4.579,669,3.111,670,3.111,671,3.111,672,3.111,673,3.111,674,3.111,675,2.708,676,3.111,677,3.111,678,3.111,679,2.708,680,2.708,681,3.111,682,3.111,683,4.579,684,3.111,686,3.111,705,2.821,775,3.595,1073,3.111,1074,3.711,1087,3.22,1105,3.111,1106,3.309,1107,3.111,1108,3.111,1109,3.111,1110,3.111,1111,3.111,1112,4.346,1113,3.111,1114,3.111,1115,3.111,1116,3.111,1117,3.111,1118,2.821,1119,2.821,1120,4.579,1121,2.37,1122,5.158,1123,5.158,1124,3.111,1125,5.689,1126,5.158,1127,4.871,1128,3.711,1129,4.579,1130,3.111,1131,2.609,1132,3.309,1133,3.111,1134,3.111,1135,2.952,1136,3.309,1137,3.111,1138,3.309]],["title/classes/EventDraft-1.html",[99,0.206,126,1.735,1128,2.776]],["body/classes/EventDraft-1.html",[3,0.048,4,0.048,5,0.041,7,0.384,8,1.165,9,2.195,16,4.053,22,1.013,25,0.005,27,1.583,30,0.946,47,3.875,48,4.022,73,0.321,77,3.956,78,4.569,80,1.464,81,1.834,82,1.485,87,3.796,89,2.868,91,3.796,93,2.946,95,2.795,98,0.048,99,0.207,100,1.072,124,0.003,125,0.003,127,0.698,233,2.635,234,2.786,235,1.866,236,1.866,285,2.5,561,4.574,580,4.392,775,4.525,1074,4.671,1087,4.424,1105,3.449,1118,4.475,1119,4.475,1121,2.628,1122,4.684,1123,4.684,1125,4.684,1126,4.684,1128,4,1129,4.936,1139,4.41,1140,4.41,1141,6.311,1142,4.41,1143,5.25,1144,6.311,1145,4.41,1146,4.41,1147,4.41,1148,4.41,1149,4.41,1150,3.669,1151,3.669,1152,3.669,1153,3.669,1154,3.669,1155,4.41,1156,3.669,1157,3.669]],["title/entities/EventKeyword.html",[0,1.76,1087,2.875]],["body/entities/EventKeyword.html",[0,2.566,2,2.795,3,0.064,4,0.064,5,0.053,7,0.506,8,1.407,22,0.946,25,0.005,27,2.135,30,0.883,47,5.225,73,0.309,78,4.85,80,1.928,98,0.064,99,0.273,100,0.987,124,0.003,125,0.003,233,3.154,1087,4.192,1121,5.385,1128,5.727,1131,5.926,1158,9.035,1159,5.807,1160,7.647,1161,7.647,1162,7.647,1163,9.63,1164,5.807,1165,5.807,1166,5.807,1167,4.831,1168,4.831,1169,4.831,1170,4.543,1171,5.218]],["title/classes/EventReview.html",[99,0.245,253,2.466]],["body/classes/EventReview.html",[1,2.359,3,0.026,4,0.026,5,0.022,7,0.207,8,0.721,19,0.883,20,0.83,22,1.023,25,0.005,26,0.828,30,0.924,36,1.055,42,1.265,64,1.653,66,1.584,73,0.211,83,2.164,89,2.391,93,2.455,97,1.785,98,0.107,99,0.443,100,1.592,101,1.141,102,0.727,113,1.021,124,0.002,125,0.002,127,0.375,154,0.756,162,2.189,199,2.307,200,1.119,201,3.386,202,2.352,203,2.958,204,2.399,205,2.963,206,3.076,207,2.399,208,2.183,209,1.477,210,1.353,211,1.392,213,1.881,216,3.535,217,1.374,218,2.326,219,1.374,220,1.374,221,1.374,222,1.374,223,1.374,224,2.352,225,1.374,226,1.077,227,1.884,228,1.039,229,1.039,230,1.039,231,0.986,232,0.87,233,2.579,234,0.897,235,1.003,236,1.003,237,2.675,238,3.366,239,3.753,240,2.307,241,3.366,242,2.675,243,2.399,244,2.399,245,4.145,246,2.927,247,1.119,248,1.141,249,1.119,250,1.141,251,1.119,252,1.141,253,1.844,254,1.881,255,1.119,256,1.119,257,1.119,258,1.119,259,2.352,260,1.119,261,1.119,262,1.119,263,1.844,264,1.098,265,1.039,266,1.141,267,2.399,268,1.141,269,0.986,270,1.141,271,0.955,272,0.727,273,3.016,274,1.077,275,1.141,276,1.141,277,1.141,278,1.141,279,1.141,280,1.809,281,1.141,282,1.844,283,1.141,284,1.098,285,1.548,286,1.141,287,1.141,288,0.939,289,1.141,290,1.141,291,1.141,292,1.881,293,1.098,294,3.328,295,1.098,296,1.141,297,1.098,298,1.098,299,1.141,300,1.844,301,1.141,302,1.844,303,1.141,304,0.986,305,1.058,306,1.119,307,1.141,308,1.141,309,1.141,310,1.141,311,1.141,312,1.119,313,1.119,314,1.119,315,1.119,316,1.141,317,1.141,318,1.077,319,1.141,320,1.098,321,1.141,322,1.119,323,1.141,324,1.119,325,1.141,1172,2.372,1173,1.615,1174,2.372,1175,1.76,1176,1.76]],["title/entities/EventTemplate.html",[0,1.76,1131,3.429]],["body/entities/EventTemplate.html",[0,1.963,2,1.904,3,0.043,4,0.043,5,0.036,7,0.345,8,1.076,9,2.329,16,3.809,22,1.044,25,0.005,26,0.804,27,2.357,28,3.093,30,0.975,37,3.969,43,3.076,47,4.693,48,3.873,73,0.314,77,4.103,78,4.375,80,1.313,81,3.179,82,1.332,87,3.606,89,2.774,91,3.606,93,2.849,95,2.507,98,0.043,99,0.186,100,0.672,102,1.212,124,0.002,125,0.002,162,1.536,233,2.793,234,1.495,235,1.673,236,1.673,269,2.425,285,2.31,386,2.693,561,4.424,577,4.543,580,4.128,664,3.093,775,4.253,1074,4.39,1087,4.204,1118,4.135,1119,4.135,1130,4.56,1131,3.825,1133,5.417,1134,5.417,1135,6.05,1143,4.851,1150,3.29,1151,3.29,1152,3.29,1153,3.29,1154,3.29,1156,3.29,1157,3.29,1177,3.955,1178,3.955,1179,5.831,1180,3.955,1181,5.831,1182,3.955,1183,5.831,1184,3.955,1185,3.955,1186,3.955,1187,3.955,1188,3.955,1189,3.955,1190,3.955,1191,3.955]],["title/controllers/EventsController.html",[356,3.707,414,1.862]],["body/controllers/EventsController.html",[3,0.077,4,0.077,5,0.065,7,0.614,25,0.005,26,0.907,27,1.768,30,0.731,73,0.284,98,0.077,99,0.331,124,0.004,125,0.004,132,2.298,142,1.926,146,1.212,151,2.982,152,1.903,178,3.143,353,2.548,356,6.112,414,3.071,800,4.765,1192,7.049,1193,7.049,1194,5.717,1195,5.864,1196,7.049]],["title/controllers/EventsController-1.html",[126,1.735,356,3.105,414,1.56]],["body/controllers/EventsController-1.html",[3,0.055,4,0.055,5,0.046,7,0.434,9,2.104,20,1.804,22,0.943,25,0.005,26,1.073,27,2.235,30,0.924,73,0.164,98,0.055,99,0.234,124,0.003,125,0.003,132,1.833,135,1.974,139,2.898,142,2.434,146,0.857,152,2.404,154,1.946,165,3.06,201,2.805,233,2.781,353,1.801,356,4.877,414,1.775,437,3.392,581,2.96,582,4.259,583,3.45,584,3.691,585,3.45,590,2.675,591,4.681,593,2.675,594,4.681,596,2.675,598,4.681,600,4.681,601,3.269,602,3.392,603,2.97,605,3.392,606,3.392,607,3.534,608,4.877,609,3.392,610,4.877,611,3.392,612,2.741,613,3.392,614,3.534,984,5.845,1197,4.983,1198,5.378,1199,4.478,1200,4.983,1201,4.983,1202,4.983,1203,4.983,1204,6.64,1205,4.983,1206,4.983]],["title/classes/EventsGateway.html",[99,0.245,1207,4.698]],["body/classes/EventsGateway.html",[3,0.051,4,0.051,5,0.043,7,0.408,8,1.216,9,2.159,20,1.85,22,1.004,25,0.005,27,1.911,30,0.937,73,0.287,98,0.051,99,0.22,124,0.003,125,0.003,127,0.741,132,1.756,133,4.936,135,1.855,139,2.973,142,2.259,143,4.044,151,1.982,152,2.056,157,5.48,161,3.897,162,2.006,163,5.48,165,5.347,166,3.925,167,5.48,168,3.897,169,3.897,170,3.664,172,3.897,173,3.897,174,5.48,175,3.897,176,3.897,178,2.089,179,3.897,457,3.236,910,3.477,1194,5.075,1195,3.897,1207,5.919,1208,4.684,1209,7.618,1210,7.618,1211,9.032,1212,5.919,1213,6.587,1214,6.587,1215,4.684,1216,6.587,1217,6.587,1218,7.618,1219,4.21,1220,8.117,1221,4.684,1222,6.587,1223,4.684,1224,4.684,1225,6.587,1226,4.684,1227,4.684,1228,3.664,1229,4.684,1230,4.684,1231,4.684,1232,4.21,1233,4.21,1234,4.684,1235,4.684,1236,4.684,1237,4.684,1238,4.684]],["title/modules/EventsModule.html",[182,1.561,332,3.707]],["body/modules/EventsModule.html",[3,0.068,4,0.068,5,0.057,20,1.309,25,0.005,73,0.328,98,0.068,99,0.289,124,0.003,125,0.003,145,3.906,146,1.06,182,2.614,184,2.563,185,2.607,186,2.748,187,2.748,188,2.699,189,3.835,190,2.748,193,3.533,194,2.652,195,2.748,332,6.94,341,3.231,353,2.864,356,6.21,426,3.673,516,4.575,519,4.82,520,6.196,523,5.197,524,3.906,530,4.82,531,4.82,1121,3.673,1194,6.009,1195,5.127,1239,5.538,1240,5.538,1241,6.163,1242,5.538,1243,6.163,1244,6.163]],["title/injectables/EventsService.html",[128,1.011,1194,3.21]],["body/injectables/EventsService.html",[3,0.051,4,0.051,5,0.043,7,0.406,9,2.153,20,1.846,22,0.965,25,0.005,26,0.867,30,0.935,73,0.305,80,1.545,98,0.051,99,0.218,124,0.003,125,0.003,128,1.268,130,1.567,132,1.748,135,2.597,137,6.445,139,2.966,142,2.463,144,3.871,145,2.95,146,0.8,150,4.156,151,1.968,152,2.345,154,1.743,162,2.532,166,3.907,233,2.699,288,1.843,426,2.773,523,3.052,524,2.95,581,2.822,582,4.134,583,3.289,584,3.519,585,3.289,590,3.519,593,3.519,596,3.519,612,2.559,627,2.857,628,5.61,629,3.168,630,3.168,904,3.639,905,6.445,907,5.127,935,3.639,940,3.639,984,6.448,1121,2.773,1194,4.025,1199,5.892,1204,7.243,1242,4.182,1245,4.653,1246,7.591,1247,4.653,1248,4.653,1249,4.653,1250,4.653,1251,4.653,1252,4.653,1253,4.653,1254,4.653]],["title/injectables/EventsService-1.html",[126,1.735,128,0.847,1194,2.689]],["body/injectables/EventsService-1.html",[3,0.077,4,0.077,5,0.064,7,0.61,9,1.735,20,1.487,22,0.778,25,0.005,30,0.727,73,0.283,98,0.077,99,0.329,124,0.004,125,0.004,128,1.66,130,2.357,132,2.289,139,2.39,142,1.914,146,1.204,910,5.197,1194,5.271,1212,7.714,1219,7.714,1220,8.262,1228,5.476,1232,6.292,1233,6.292,1255,7.002,1256,7.002,1257,7.002]],["title/injectables/EventsService-2.html",[128,0.847,1194,2.689,1258,3.643]],["body/injectables/EventsService-2.html",[3,0.08,4,0.08,5,0.067,7,0.638,25,0.004,26,0.928,30,0.759,73,0.241,98,0.08,99,0.343,124,0.004,125,0.004,128,1.706,130,2.464,132,2.351,142,2,146,1.258,152,1.975,800,4.826,812,4.638,813,4.638,1194,5.414,1259,7.318,1260,7.318]],["title/injectables/ExternalAuthService.html",[128,1.011,1261,4.698]],["body/injectables/ExternalAuthService.html",[3,0.073,4,0.073,5,0.061,7,0.58,9,1.648,20,1.412,22,0.739,25,0.005,26,1.05,30,0.863,73,0.219,98,0.073,99,0.312,124,0.004,125,0.004,128,1.608,130,2.238,132,2.217,133,4.65,135,3.593,139,2.27,142,1.817,143,4.082,146,1.143,152,1.795,154,1.608,1261,7.471,1262,6.649,1263,9.071,1264,6.649,1265,6.649,1266,9.503,1267,6.649,1268,9.071]],["title/interfaces/FindAllOptions.html",[534,2.104,1269,4.349]],["body/interfaces/FindAllOptions.html",[3,0.073,4,0.073,5,0.061,7,0.58,8,1.534,9,2.061,22,0.739,25,0.005,26,0.954,58,2.912,73,0.299,82,2.238,98,0.073,100,1.413,124,0.004,125,0.004,146,1.43,152,1.795,499,4.715,534,2.676,536,3.962,541,6.502,582,3.335,1269,7.546,1270,5.531,1271,5.975,1272,6.916,1273,7.262,1274,6.916,1275,5.531,1276,6.502,1277,5.975,1278,6.649]],["title/interfaces/FindOneOptions.html",[534,2.104,1279,4.349]],["body/interfaces/FindOneOptions.html",[3,0.072,4,0.072,5,0.06,7,0.572,8,1.522,9,2.044,22,0.917,25,0.005,26,0.949,73,0.297,82,2.211,98,0.072,100,1.402,102,2.012,124,0.004,125,0.004,146,1.418,152,1.772,154,1.27,499,4.656,534,2.643,536,3.913,541,6.451,583,3.294,936,6.862,1270,5.462,1272,6.862,1273,7.235,1274,5.462,1275,5.462,1276,5.135,1277,5.901,1279,7.503,1280,5.901,1281,7.413,1282,5.901,1283,5.901]],["title/classes/FlaggedComment.html",[99,0.245,657,3.21]],["body/classes/FlaggedComment.html",[3,0.045,4,0.045,5,0.038,7,0.359,8,1.108,22,1.09,25,0.005,26,0.82,30,1.018,36,2.103,42,2.37,66,1.021,73,0.234,97,1.903,98,0.104,99,0.438,100,1.518,124,0.003,125,0.003,127,0.651,154,1.371,201,2.526,205,1.605,216,3.912,218,3.481,233,2.552,271,1.657,272,1.84,631,2.528,632,2.528,633,5.311,634,5.311,635,2.528,636,2.528,637,2.528,638,2.528,639,2.528,640,2.528,641,2.528,642,2.528,643,2.528,644,6.193,645,4.493,646,4.493,647,4.493,648,4.493,649,4.493,650,4.493,651,4.493,652,4.493,653,4.493,654,4.493,655,2.528,656,2.528,657,3.687,658,2.528,659,2.528,660,2.528,661,2.61,662,2.61,663,2.111,1284,4.117,1285,3.425,1286,3.425,1287,3.425,1288,3.425,1289,3.425,1290,3.425,1291,3.425,1292,3.425,1293,3.425,1294,3.425,1295,3.425,1296,3.425]],["title/classes/FlaggedEvent.html",[99,0.245,655,3.21]],["body/classes/FlaggedEvent.html",[3,0.045,4,0.045,5,0.038,7,0.359,8,1.108,22,1.09,25,0.005,26,0.82,30,1.018,36,2.103,42,2.37,66,1.021,73,0.234,97,1.903,98,0.104,99,0.438,100,1.518,124,0.003,125,0.003,127,0.651,154,1.371,201,2.526,205,1.605,216,3.912,218,2.853,233,2.925,271,1.657,272,1.84,631,2.528,632,2.528,633,5.311,634,5.311,635,2.528,636,2.528,637,2.528,638,2.528,639,2.528,640,2.528,641,2.528,642,2.528,643,2.528,644,6.193,645,4.493,646,4.493,647,4.493,648,4.493,649,4.493,650,4.493,651,4.493,652,4.493,653,4.493,654,4.493,655,3.687,656,2.528,657,2.528,658,2.528,659,2.528,660,2.528,661,2.61,662,2.61,663,2.111,1285,3.425,1286,3.425,1287,3.425,1288,3.425,1289,3.425,1290,3.425,1291,3.425,1292,3.425,1293,3.425,1294,3.425,1295,3.425,1296,3.425,1297,4.117]],["title/classes/FlaggedItem.html",[99,0.245,644,3.21]],["body/classes/FlaggedItem.html",[3,0.048,4,0.048,5,0.04,7,0.384,8,1.163,22,1.094,25,0.005,26,0.846,30,1.021,36,2.169,42,2.409,66,1.091,73,0.242,97,1.947,98,0.106,99,0.445,100,1.504,124,0.003,125,0.003,127,0.696,154,1.424,201,2.623,205,1.716,218,2.963,233,2.632,271,1.771,272,1.931,631,2.702,632,2.702,633,5.433,634,5.433,635,2.702,636,2.702,637,2.702,638,2.702,639,2.702,640,2.702,641,2.702,642,2.702,643,2.702,644,5.222,645,4.666,646,4.666,647,4.666,648,4.666,649,4.666,650,4.666,651,4.666,652,4.666,653,4.666,654,4.666,655,2.702,656,2.702,657,2.702,658,2.702,659,2.702,660,2.702,661,2.79,662,2.79,663,2.256,1298,4.401,1299,4.401,1300,4.401,1301,4.401,1302,4.401,1303,4.401,1304,4.401,1305,4.401,1306,4.401,1307,4.401,1308,4.401,1309,4.401]],["title/classes/FlaggedPost.html",[99,0.245,656,3.21]],["body/classes/FlaggedPost.html",[3,0.045,4,0.045,5,0.038,7,0.359,8,1.108,22,1.09,25,0.005,26,0.82,30,1.018,36,2.103,42,2.37,66,1.021,73,0.234,97,1.903,98,0.104,99,0.438,100,1.518,124,0.003,125,0.003,127,0.651,154,1.371,201,3.082,205,1.605,216,3.912,218,2.853,233,2.552,271,1.657,272,1.84,631,2.528,632,2.528,633,5.311,634,5.311,635,2.528,636,2.528,637,2.528,638,2.528,639,2.528,640,2.528,641,2.528,642,2.528,643,2.528,644,6.193,645,4.493,646,4.493,647,4.493,648,4.493,649,4.493,650,4.493,651,4.493,652,4.493,653,4.493,654,4.493,655,2.528,656,3.687,657,2.528,658,2.528,659,2.528,660,2.528,661,2.61,662,2.61,663,2.111,1285,3.425,1286,3.425,1287,3.425,1288,3.425,1289,3.425,1290,3.425,1291,3.425,1292,3.425,1293,3.425,1294,3.425,1295,3.425,1296,3.425,1310,4.117]],["title/entities/Genre.html",[0,1.76,48,2.374]],["body/entities/Genre.html",[0,2.418,1,2.707,2,2.555,3,0.058,4,0.058,5,0.049,7,0.463,8,1.325,22,1.012,25,0.005,26,0.756,27,1.802,30,0.945,46,4.963,47,4.409,48,3.262,58,3.145,71,4.996,73,0.316,78,4.888,80,1.763,81,2.208,82,1.788,98,0.058,99,0.249,100,0.902,124,0.003,125,0.003,233,2.855,1121,4.28,1128,4.552,1131,4.71,1160,7.313,1161,7.313,1162,7.313,1167,4.417,1168,4.417,1169,4.417,1170,4.28,1171,4.772,1311,5.31,1312,8.137,1313,7.181,1314,7.181,1315,5.31,1316,5.31,1317,5.31,1318,5.31,1319,8.718,1320,5.31,1321,4.152]],["title/classes/GoogleLoginDto.html",[99,0.245,1070,3.558]],["body/classes/GoogleLoginDto.html",[3,0.057,4,0.057,5,0.048,7,0.455,8,1.31,22,1.108,25,0.005,26,1.005,27,2.023,29,4.587,30,0.837,66,1.293,73,0.234,81,4.185,82,1.757,98,0.099,99,0.406,100,1.206,124,0.003,125,0.003,127,0.825,272,1.599,395,3.109,457,3.961,534,2.1,794,4.135,917,3.638,919,3.552,926,3.733,938,4.831,945,5.032,958,5.032,959,5.719,1001,3.7,1006,3.422,1010,4.655,1056,4.229,1061,4.831,1062,3.552,1063,5.719,1067,3.552,1068,6.138,1069,4.831,1070,5.49,1071,5.29,1072,5.29,1322,5.218,1323,5.218,1324,5.218]],["title/controllers/GraphqlController.html",[414,1.862,1325,4.349]],["body/controllers/GraphqlController.html",[3,0.077,4,0.077,5,0.065,7,0.614,25,0.005,26,0.907,27,1.768,30,0.731,73,0.284,98,0.077,99,0.331,124,0.004,125,0.004,132,2.298,142,1.926,146,1.212,151,2.982,152,1.903,178,3.143,353,2.548,414,3.071,800,4.765,1325,7.171,1326,7.049,1327,7.049,1328,6.911,1329,6.334,1330,7.049]],["title/modules/GraphqlModule.html",[182,1.561,1331,4.088]],["body/modules/GraphqlModule.html",[3,0.074,4,0.074,5,0.062,25,0.005,73,0.301,98,0.074,99,0.318,124,0.004,125,0.004,146,1.165,182,2.732,184,2.819,185,2.867,186,3.022,187,3.022,188,2.968,189,4.007,190,3.022,193,3.752,194,2.917,195,3.022,341,3.553,353,3.041,1325,7.612,1328,7.443,1329,6.09,1331,7.842,1332,6.09,1333,6.09,1334,6.777,1335,6.777]],["title/injectables/GraphqlService.html",[128,1.011,1328,3.88]],["body/injectables/GraphqlService.html",[3,0.08,4,0.08,5,0.067,7,0.638,25,0.004,26,0.928,30,0.759,73,0.241,98,0.08,99,0.343,124,0.004,125,0.004,128,1.706,130,2.464,132,2.351,142,2,146,1.258,152,1.975,800,4.826,812,4.638,813,4.638,1328,6.545,1336,7.318,1337,7.318]],["title/classes/Group.html",[99,0.245,273,2.466]],["body/classes/Group.html",[1,2.399,3,0.027,4,0.027,5,0.023,7,0.216,8,0.747,19,1.911,20,1.26,22,0.987,25,0.005,26,0.866,30,0.908,36,1.386,42,1.506,64,1.712,66,1.621,73,0.215,83,2.33,89,2.431,93,2.497,97,1.81,98,0.107,99,0.447,100,1.605,102,1.573,113,1.065,124,0.002,125,0.002,127,0.392,154,0.783,162,1.951,199,2.376,200,1.168,201,3.207,202,2.422,203,2.376,204,1.191,205,2.736,206,2.471,207,1.191,208,1.084,209,1.53,210,1.401,211,1.442,213,1.948,216,2.387,218,2.066,224,1.909,226,1.124,227,1.941,228,1.084,229,1.084,230,1.084,231,1.029,232,0.908,233,2.299,234,0.936,235,1.047,236,1.047,237,3.026,238,3.248,239,3.577,240,2.376,241,3.577,242,3.026,243,1.191,244,1.191,245,3.975,246,2.981,247,1.168,248,1.191,249,1.168,250,1.191,251,1.168,252,1.191,253,1.168,254,1.191,255,1.168,256,1.168,257,1.168,258,1.168,259,2.422,260,1.168,261,1.168,262,1.168,263,1.909,264,1.145,265,1.084,266,1.191,267,2.471,268,1.191,269,1.029,270,1.191,271,0.996,272,0.758,273,3.311,274,2.332,275,2.471,276,2.471,277,2.471,278,2.471,279,2.471,280,1.873,281,1.191,282,1.909,283,1.191,284,1.145,285,1.603,286,1.191,287,1.191,288,0.98,289,1.191,290,1.191,291,1.191,292,1.948,293,1.145,294,3.385,295,1.145,296,1.191,297,1.145,298,1.145,299,1.191,300,1.909,301,1.191,302,1.909,303,1.191,304,1.029,305,1.104,306,1.168,307,1.191,308,1.191,309,1.191,310,1.191,311,1.191,312,1.168,313,1.168,314,1.168,315,1.168,316,1.191,317,1.191,318,1.124,319,1.191,320,1.145,321,1.191,322,1.168,323,1.191,324,1.168,325,1.191,1338,2.475,1339,2.475,1340,2.475,1341,2.475,1342,2.475,1343,2.475,1344,2.475,1345,2.475,1346,2.475]],["title/classes/GroupBroadcast.html",[99,0.245,313,2.466]],["body/classes/GroupBroadcast.html",[1,2.449,3,0.026,4,0.026,5,0.022,7,0.208,8,0.724,19,0.887,20,0.833,22,1.024,25,0.005,26,0.83,30,0.925,36,1.059,42,1.269,64,1.659,66,1.588,73,0.211,83,2.168,89,2.395,93,2.46,97,1.787,98,0.107,99,0.443,100,1.593,102,0.73,113,1.025,124,0.002,125,0.002,127,0.377,154,0.759,162,2.077,199,2.314,200,1.124,201,3.388,202,2.359,203,2.965,204,2.406,205,2.968,206,3.084,207,2.406,208,2.19,209,1.483,210,1.358,211,1.397,213,1.888,216,3.54,217,1.38,218,2.332,219,1.38,220,1.38,221,1.38,222,1.38,223,1.38,224,2.359,225,1.38,226,1.082,227,1.89,228,1.043,229,1.043,230,1.043,231,0.991,232,0.874,233,2.257,234,0.901,235,1.008,236,1.008,237,2.682,238,2.965,239,3.523,240,2.314,241,3.853,242,2.682,243,1.147,244,1.147,245,3.928,246,2.933,247,1.124,248,1.147,249,1.124,250,1.147,251,1.124,252,1.147,253,1.124,254,1.147,255,1.124,256,1.124,257,1.124,258,1.124,259,3.252,260,1.124,261,1.124,262,1.124,263,2.359,264,1.103,265,2.19,266,2.406,267,2.406,268,1.147,269,0.991,270,1.147,271,0.959,272,0.73,273,3.592,274,1.082,275,1.147,276,1.147,277,1.147,278,1.147,279,1.147,280,1.815,281,1.147,282,1.851,283,1.147,284,1.103,285,1.554,286,1.147,287,1.147,288,0.944,289,1.147,290,1.147,291,1.147,292,1.888,293,1.103,294,3.334,295,1.103,296,1.147,297,1.103,298,1.103,299,1.147,300,1.851,301,1.147,302,1.851,303,1.147,304,0.991,305,1.062,306,1.124,307,1.147,308,1.147,309,1.147,310,1.147,311,1.147,312,1.124,313,1.851,314,1.124,315,1.124,316,1.147,317,1.147,318,1.082,319,1.147,320,1.103,321,1.147,322,1.124,323,1.147,324,1.124,325,1.147,720,1.982,721,1.982,722,1.982,1347,2.382]],["title/modules/GuardsModule.html",[182,1.561,1348,4.349]],["body/modules/GuardsModule.html",[3,0.086,4,0.086,5,0.072,25,0.004,73,0.258,98,0.086,99,0.368,124,0.004,125,0.004,146,1.347,182,2.742,184,3.258,1348,7.639,1349,7.834]],["title/classes/Instrument.html",[99,0.245,752,3.313]],["body/classes/Instrument.html",[3,0.073,4,0.073,5,0.061,25,0.005,26,1.001,42,2.115,48,3.029,83,2.098,98,0.113,99,0.476,100,1.133,102,2.044,124,0.004,125,0.004,127,1.055,154,1.611,162,2.194,209,2.521,210,2.309,211,2.376,227,3.149,272,2.783,534,2.684,559,3.497,562,3.668,752,5.28,753,4.095,1087,3.668,1170,3.975,1350,4.73,1351,4.54]],["title/classes/IssuedWarning.html",[99,0.245,658,3.21]],["body/classes/IssuedWarning.html",[3,0.059,4,0.059,5,0.049,25,0.005,26,0.759,36,1.948,42,2.319,66,1.326,73,0.269,97,1.924,98,0.11,99,0.465,100,1.634,124,0.003,125,0.003,127,0.846,154,1.035,201,2.91,205,2.086,218,3.288,233,2.864,271,2.153,272,2.212,631,3.285,632,3.285,633,5.777,634,5.016,635,3.285,636,3.285,637,3.285,638,3.285,639,3.285,640,3.285,641,3.285,642,3.285,643,3.285,644,5.369,645,3.391,646,3.391,647,3.391,648,3.391,649,3.391,650,3.391,651,3.391,652,3.391,653,3.391,654,3.391,655,3.285,656,3.285,657,3.285,658,4.432,659,3.285,660,3.285,661,3.391,662,3.391,663,2.743]],["title/injectables/JWTAuthGuard.html",[128,1.011,1352,4.698]],["body/injectables/JWTAuthGuard.html",[3,0.083,4,0.083,5,0.069,25,0.004,73,0.296,98,0.083,99,0.355,100,1.527,124,0.004,125,0.004,128,1.738,130,2.543,146,1.299,440,5.142,518,4.638,1352,8.076,1353,7.554,1354,6.788,1355,8.987]],["title/injectables/JwtStrategy.html",[128,1.011,1356,3.21]],["body/injectables/JwtStrategy.html",[3,0.07,4,0.07,5,0.058,7,0.552,9,1.569,20,1.345,22,0.703,25,0.005,30,0.836,73,0.292,98,0.07,99,0.297,100,1.37,124,0.003,125,0.003,128,1.559,130,2.131,132,2.149,133,4.546,135,3.512,139,2.161,142,1.73,143,3.886,146,1.088,152,1.708,469,4.152,518,3.886,903,5.486,926,2.929,1071,4.152,1072,4.152,1356,4.948,1357,6.329,1358,5.715,1359,6.329,1360,5.982,1361,6.329,1362,4.488,1363,4.309,1364,6.303,1365,4.309,1366,5.266,1367,4.488,1368,5.266,1369,4.488,1370,3.886,1371,4.698,1372,4.698]],["title/injectables/JwtStrategy-1.html",[126,1.735,128,0.847,1356,2.689]],["body/injectables/JwtStrategy-1.html",[3,0.069,4,0.069,5,0.058,7,0.55,9,1.564,20,1.341,22,0.701,25,0.005,30,0.835,73,0.292,98,0.069,99,0.296,100,1.367,124,0.003,125,0.003,128,1.556,130,2.125,132,2.145,133,4.54,135,3.507,139,2.154,142,1.725,143,3.875,146,1.085,152,1.703,469,4.139,518,3.875,903,5.476,926,2.921,1056,3.761,1071,4.139,1072,4.139,1356,4.939,1358,5.704,1360,5.971,1362,4.475,1363,4.296,1364,6.291,1365,4.296,1367,4.475,1368,5.25,1369,4.475,1370,3.875,1371,4.684,1372,4.684,1373,6.31,1374,6.31,1375,6.31,1376,5.671]],["title/injectables/JwtStrategy-2.html",[128,0.847,1258,3.643,1356,2.689]],["body/injectables/JwtStrategy-2.html",[3,0.069,4,0.069,5,0.058,7,0.55,9,1.564,20,1.341,22,0.701,25,0.005,30,0.835,73,0.292,98,0.069,99,0.296,100,1.367,124,0.003,125,0.003,128,1.556,130,2.125,132,2.145,133,4.54,135,3.507,139,2.154,142,1.725,143,3.875,146,1.085,152,1.703,469,4.139,473,4.935,518,3.875,687,4.684,903,5.476,926,2.921,951,4.296,1356,4.939,1358,5.704,1360,5.971,1362,4.475,1363,4.296,1364,6.291,1365,4.296,1367,4.475,1369,4.475,1370,3.875,1371,4.684,1372,4.684,1377,6.31,1378,6.31,1379,6.31,1380,6.31,1381,6.31,1382,6.31,1383,6.31,1384,6.31]],["title/injectables/JwtStrategy-3.html",[128,0.847,1356,2.689,1385,4.379]],["body/injectables/JwtStrategy-3.html",[3,0.069,4,0.069,5,0.058,7,0.548,9,1.559,20,1.337,22,0.699,25,0.005,30,0.833,73,0.291,98,0.069,99,0.295,100,1.364,124,0.003,125,0.003,128,1.553,130,2.118,132,2.141,133,4.533,135,3.502,139,2.148,142,1.719,143,3.863,146,1.082,152,1.698,469,4.127,518,3.863,903,5.466,926,2.912,1071,4.127,1072,4.127,1356,4.93,1358,5.693,1360,5.959,1362,4.462,1363,4.283,1364,6.279,1365,4.283,1367,4.462,1369,4.462,1370,3.863,1371,4.67,1372,4.67,1386,6.292,1387,6.292,1388,6.292,1389,5.654,1390,6.292,1391,6.292]],["title/injectables/JwtStrategy-4.html",[128,0.847,1356,2.689,1392,4.379]],["body/injectables/JwtStrategy-4.html",[3,0.07,4,0.07,5,0.058,7,0.552,9,1.569,20,1.345,22,0.703,25,0.005,30,0.836,73,0.292,98,0.07,99,0.297,100,1.37,124,0.003,125,0.003,128,1.559,130,2.131,132,2.149,133,4.546,135,3.512,139,2.161,142,1.73,143,3.886,146,1.088,152,1.708,469,4.152,518,3.886,903,5.486,926,2.929,1356,4.948,1358,5.715,1360,5.982,1362,4.488,1363,4.309,1365,4.309,1367,4.488,1368,5.266,1369,4.488,1370,3.886,1371,4.698,1372,4.698,1393,6.329,1394,6.329,1395,6.329,1396,8.059,1397,5.266,1398,6.329,1399,6.329]],["title/injectables/LocalAuthGuard.html",[128,1.011,1400,4.698]],["body/injectables/LocalAuthGuard.html",[3,0.083,4,0.083,5,0.069,25,0.004,73,0.296,98,0.083,99,0.355,100,1.527,124,0.004,125,0.004,128,1.738,130,2.543,146,1.299,440,5.142,518,4.638,1354,6.788,1400,8.076,1401,7.554,1402,8.987]],["title/injectables/LocalStrategy.html",[128,1.011,512,3.88]],["body/injectables/LocalStrategy.html",[3,0.067,4,0.067,5,0.056,7,0.528,9,1.942,20,1.664,22,0.871,25,0.005,26,1.025,30,0.813,73,0.303,98,0.067,99,0.284,100,1.331,124,0.003,125,0.003,128,1.515,130,2.039,132,2.089,133,4.452,135,2.399,139,2.675,142,1.655,146,1.041,151,2.562,152,1.635,166,4.669,178,2.701,422,5.334,510,6.816,512,5.816,518,3.719,521,5.443,903,5.334,917,4.708,926,2.803,931,7.041,1358,5.556,1362,4.295,1363,4.123,1365,4.123,1367,4.295,1369,4.295,1403,6.057,1404,6.057,1405,6.057,1406,6.057,1407,7.835,1408,5.443,1409,6.057]],["title/controllers/LocationsController.html",[414,1.862,1410,4.349]],["body/controllers/LocationsController.html",[3,0.077,4,0.077,5,0.065,7,0.614,25,0.005,26,0.907,27,1.768,30,0.731,73,0.284,98,0.077,99,0.331,124,0.004,125,0.004,132,2.298,142,1.926,146,1.212,151,2.982,152,1.903,178,3.143,353,2.548,414,3.071,800,4.765,1410,7.171,1411,7.049,1412,7.049,1413,6.338,1414,6.334,1415,7.049]],["title/modules/LocationsModule.html",[182,1.561,333,3.88]],["body/modules/LocationsModule.html",[3,0.075,4,0.075,5,0.063,25,0.004,73,0.302,98,0.075,99,0.32,124,0.004,125,0.004,146,1.173,182,2.74,184,2.837,185,2.885,186,3.042,187,3.042,188,2.987,189,4.019,190,3.042,193,3.767,194,2.935,195,3.042,333,7.455,353,3.053,1410,7.634,1413,6.837,1414,6.13,1416,6.13,1417,6.13,1418,6.821,1419,6.821]],["title/injectables/LocationsService.html",[128,1.011,1413,3.558]],["body/injectables/LocationsService.html",[3,0.058,4,0.058,5,0.048,7,0.457,9,2.15,20,1.842,22,0.964,25,0.005,26,0.954,30,0.941,73,0.235,98,0.058,99,0.246,124,0.003,125,0.003,128,1.377,130,1.765,132,1.898,139,2.961,142,2.614,146,0.902,152,2.448,154,1.809,162,2.599,285,3.435,288,2.077,581,3.064,582,4.351,583,3.572,584,3.822,585,3.572,590,3.822,593,3.822,596,3.822,612,2.884,627,3.22,628,6.173,629,3.57,630,3.57,987,7.092,1413,4.847,1420,5.244,1421,7.121,1422,5.244,1423,5.244,1424,5.244,1425,5.244,1426,7.959,1427,5.244,1428,5.244,1429,5.244,1430,5.244]],["title/injectables/LocationsService-1.html",[126,1.735,128,0.847,1413,2.981]],["body/injectables/LocationsService-1.html",[3,0.08,4,0.08,5,0.067,7,0.638,25,0.004,26,0.928,30,0.759,73,0.241,98,0.08,99,0.343,124,0.004,125,0.004,128,1.706,130,2.464,132,2.351,142,2,146,1.258,152,1.975,800,4.826,812,4.638,813,4.638,1413,6.003,1431,7.318,1432,7.318]],["title/interfaces/LoginBase.html",[534,2.104,1068,3.707]],["body/interfaces/LoginBase.html",[3,0.061,4,0.061,5,0.051,7,0.486,8,1.37,22,1.11,25,0.005,26,0.974,29,4.677,66,1.382,73,0.244,81,4.156,82,1.877,98,0.102,99,0.417,100,1.261,124,0.003,125,0.003,272,1.709,457,3.645,534,2.244,536,3.323,794,4.276,917,3.805,919,3.796,926,3.86,938,6.053,945,5.263,958,5.263,959,5.263,1006,3.658,1010,4.868,1056,4.423,1061,5.052,1062,3.796,1063,5.915,1067,3.796,1068,6.306,1069,5.052,1070,5.052,1071,3.658,1072,3.658]],["title/controllers/MediaController.html",[414,1.862,1433,3.88]],["body/controllers/MediaController.html",[3,0.077,4,0.077,5,0.065,7,0.614,25,0.005,26,0.907,27,1.768,30,0.731,73,0.284,98,0.077,99,0.331,124,0.004,125,0.004,132,2.298,142,1.926,146,1.212,151,2.982,152,1.903,178,3.143,353,2.548,414,3.071,800,4.765,1433,6.398,1434,7.049,1435,7.049,1436,6.107,1437,5.864,1438,6.334]],["title/controllers/MediaController-1.html",[126,1.735,414,1.56,1433,3.251]],["body/controllers/MediaController-1.html",[3,0.077,4,0.077,5,0.065,7,0.614,25,0.005,26,0.907,27,1.768,30,0.731,73,0.284,98,0.077,99,0.331,124,0.004,125,0.004,132,2.298,142,1.926,146,1.212,151,2.982,152,1.903,178,3.143,353,2.548,414,3.071,800,4.765,1433,6.398,1436,6.107,1437,5.864,1438,6.334,1439,7.049,1440,7.049]],["title/modules/MediaModule.html",[182,1.561,1441,4.088]],["body/modules/MediaModule.html",[3,0.074,4,0.074,5,0.062,25,0.005,73,0.301,98,0.074,99,0.318,124,0.004,125,0.004,146,1.165,182,2.732,184,2.819,185,2.867,186,3.022,187,3.022,188,2.968,189,4.007,190,3.022,193,3.752,194,2.917,195,3.022,341,3.553,353,3.041,1433,6.791,1436,6.577,1437,5.638,1441,7.842,1442,6.09,1443,6.09,1444,6.777,1445,6.777]],["title/injectables/MediaService.html",[128,1.011,1436,3.429]],["body/injectables/MediaService.html",[3,0.08,4,0.08,5,0.067,7,0.638,25,0.004,26,0.928,30,0.759,73,0.241,98,0.08,99,0.343,124,0.004,125,0.004,128,1.706,130,2.464,132,2.351,142,2,146,1.258,152,1.975,800,4.826,812,4.638,813,4.638,1436,5.784,1446,7.318,1447,7.318]],["title/injectables/MediaService-1.html",[126,1.735,128,0.847,1436,2.872]],["body/injectables/MediaService-1.html",[3,0.08,4,0.08,5,0.067,7,0.638,25,0.004,26,0.928,30,0.759,73,0.241,98,0.08,99,0.343,124,0.004,125,0.004,128,1.706,130,2.464,132,2.351,142,2,146,1.258,152,1.975,800,4.826,812,4.638,813,4.638,1436,5.784,1448,7.318,1449,7.318]],["title/classes/MessagingGateway.html",[99,0.245,1450,4.698]],["body/classes/MessagingGateway.html",[3,0.068,4,0.068,5,0.056,7,0.536,9,1.96,20,1.68,22,0.879,25,0.005,27,1.542,30,0.821,73,0.304,98,0.068,99,0.288,124,0.003,125,0.003,127,0.972,132,2.108,133,4.483,135,2.434,139,2.7,142,1.679,151,2.599,152,1.659,157,6.579,161,5.112,162,2.303,163,6.579,165,5.369,166,4.713,167,6.579,168,5.112,169,5.112,170,4.806,172,5.112,173,5.112,174,6.579,175,5.112,176,5.112,178,2.74,179,5.112,432,4.806,1450,7.107,1451,6.145,1452,6.145,1453,6.657,1454,6.145,1455,6.145,1456,5.522,1457,6.145]],["title/modules/MessagingModule.html",[182,1.561,1458,3.88]],["body/modules/MessagingModule.html",[3,0.074,4,0.074,5,0.062,25,0.004,73,0.277,98,0.074,99,0.318,124,0.004,125,0.004,146,1.165,182,2.732,184,2.819,185,2.867,186,3.022,187,3.022,188,2.968,189,4.007,190,4.08,193,3.752,194,2.917,195,3.022,1453,7.17,1456,6.09,1458,7.546,1459,6.09,1460,6.09,1461,6.09,1462,6.777]],["title/injectables/MessagingService.html",[128,1.011,1453,3.558]],["body/injectables/MessagingService.html",[3,0.086,4,0.086,5,0.072,25,0.004,73,0.258,98,0.086,99,0.368,124,0.004,125,0.004,128,1.776,130,2.638,146,1.347,1453,6.251,1463,7.834]],["title/injectables/MessagingService-1.html",[126,1.735,128,0.847,1453,2.981]],["body/injectables/MessagingService-1.html",[3,0.086,4,0.086,5,0.072,25,0.004,73,0.258,98,0.086,99,0.368,124,0.004,125,0.004,128,1.776,130,2.638,146,1.347,1453,6.251,1464,7.834]],["title/classes/ModerationAction.html",[99,0.245,633,3.21]],["body/classes/ModerationAction.html",[3,0.059,4,0.059,5,0.049,25,0.005,26,0.762,36,1.955,42,2.323,66,1.333,73,0.27,97,1.928,98,0.11,99,0.466,100,1.601,124,0.003,125,0.003,127,0.851,154,1.04,201,2.918,205,2.096,218,3.296,233,2.87,271,2.164,272,2.219,631,3.302,632,3.302,633,5.785,634,5.029,635,3.302,636,3.302,637,3.302,638,3.302,639,3.302,640,3.302,641,3.302,642,3.302,643,3.302,644,5.381,645,3.408,646,3.408,647,3.408,648,3.408,649,3.408,650,3.408,651,3.408,652,3.408,653,3.408,654,3.408,655,3.302,656,3.302,657,3.302,658,3.302,659,3.302,660,3.302,661,3.408,662,3.408,663,2.757]],["title/entities/Musician.html",[0,1.76,91,2.466]],["body/entities/Musician.html",[0,2.53,1,2.893,2,2.734,3,0.062,4,0.062,5,0.052,7,0.495,8,1.387,22,0.995,25,0.005,26,0.943,27,2.247,30,0.93,43,3.388,46,4.223,47,3.488,73,0.307,74,4.354,78,4.033,79,4.354,80,1.887,81,3.125,82,1.913,87,4.516,88,3.868,91,3.545,98,0.062,99,0.267,100,0.965,111,4.613,124,0.003,125,0.003,154,1.628,246,3.024,400,3.488,503,4.763,507,3.292,572,4.443,573,5.106,580,5.017,759,7.004,1465,5.681,1466,5.681,1467,5.681,1468,5.681,1469,5.681,1470,5.681,1471,5.681,1472,5.681,1473,5.681]],["title/classes/MusicianAccount.html",[99,0.245,111,3.21]],["body/classes/MusicianAccount.html",[0,1.759,1,2.812,3,0.057,4,0.038,5,0.031,6,2.423,7,0.298,8,0.964,10,2.241,11,2.241,12,2.241,13,2.241,14,2.241,15,2.241,16,1.879,17,1.928,18,2.241,19,1.272,20,1.347,21,2.241,22,0.85,23,2.241,24,2.241,25,0.005,26,0.934,27,1.311,29,3.759,30,0.542,32,2.423,33,3.427,34,3.705,36,1.917,40,1.834,42,0.868,43,3.943,46,4.879,48,2.881,52,2.423,53,2.423,58,2.288,60,1.497,62,1.678,64,2.683,66,1.295,68,2.326,70,2.166,71,2.098,73,0.298,74,4.434,75,3.556,76,2.036,77,4.332,78,4.332,79,3.027,80,1.135,81,4.012,82,1.15,83,1.644,84,2.166,85,2.423,86,2.326,87,3.611,88,2.326,89,2.408,90,2.326,91,4.086,92,2.326,93,2.473,94,2.423,95,2.166,96,4.013,97,1.776,98,0.084,99,0.359,100,1.301,101,1.645,102,2.176,103,2.423,104,2.423,105,2.241,106,2.241,107,2.241,108,2.241,109,2.241,110,2.423,111,3.208,112,5.427,113,3.473,114,3.705,115,2.423,116,2.166,117,2.423,118,2.423,119,2.098,120,2.423,121,2.423,122,2.098,123,2.423,124,0.002,125,0.002,127,0.541,400,2.098,577,2.241,1474,3.417,1475,3.417]],["title/controllers/MusiciansController.html",[359,4.088,414,1.862]],["body/controllers/MusiciansController.html",[3,0.055,4,0.055,5,0.046,7,0.434,9,2.104,20,1.804,22,0.943,25,0.005,26,1.073,27,2.235,30,0.924,73,0.164,91,4.006,98,0.055,99,0.234,124,0.003,125,0.003,132,1.833,135,1.974,139,2.898,142,2.434,146,0.857,152,2.404,154,1.946,165,3.06,201,2.805,353,1.801,359,5.378,414,1.775,437,3.392,581,2.96,582,4.259,583,3.45,584,3.691,585,3.45,590,2.675,591,4.681,593,2.675,594,4.681,596,2.675,598,4.681,600,4.681,601,3.269,602,3.392,603,2.97,605,3.392,606,3.392,607,3.534,608,4.877,609,3.392,610,4.877,611,3.392,612,2.741,613,3.392,614,3.534,990,5.845,1074,4.359,1476,4.983,1477,4.478,1478,4.983,1479,4.983,1480,4.983,1481,4.983,1482,6.64,1483,4.983,1484,4.983]],["title/modules/MusiciansModule.html",[182,1.561,334,3.88]],["body/modules/MusiciansModule.html",[3,0.075,4,0.075,5,0.063,25,0.004,73,0.302,98,0.075,99,0.32,124,0.004,125,0.004,146,1.173,182,2.74,184,2.837,185,2.885,186,3.042,187,3.042,188,2.987,189,4.019,190,3.042,193,3.767,194,2.935,195,3.042,334,7.455,353,3.053,359,7.176,1485,6.13,1486,6.13,1487,7.854,1488,6.821,1489,6.821,1490,6.821]],["title/injectables/MusiciansService.html",[128,1.011,1487,4.088]],["body/injectables/MusiciansService.html",[3,0.058,4,0.058,5,0.048,7,0.459,9,2.154,20,1.846,22,0.966,25,0.005,26,0.956,30,0.943,73,0.235,91,4.101,98,0.058,99,0.247,124,0.003,125,0.003,128,1.382,130,1.774,132,1.905,139,2.967,142,2.618,146,0.906,152,2.452,154,1.812,162,2.602,288,2.087,581,3.075,582,4.36,583,3.584,584,3.835,585,3.584,590,3.835,593,3.835,596,3.835,612,2.898,627,3.236,628,6.184,629,3.587,630,3.587,990,6.743,1074,3.34,1477,6.421,1482,7.492,1487,5.588,1491,5.27,1492,5.27,1493,5.27,1494,5.27,1495,5.27,1496,5.27]],["title/entities/Network.html",[0,1.76,294,2.29]],["body/entities/Network.html",[0,2.719,2,3.055,3,0.07,4,0.07,5,0.058,7,0.553,8,1.49,20,1.886,22,1.038,25,0.005,26,0.85,27,2.344,30,0.97,43,3.574,73,0.209,80,2.108,98,0.07,99,0.298,124,0.003,125,0.003,154,1.718,162,2.127,294,4.32,297,4.11,298,4.11,507,5.145,1497,5.705,1498,7.98,1499,5.705,1500,5.705,1501,5.705,1502,7.98,1503,5.705,1504,5.705,1505,5.705,1506,5.281]],["title/classes/Network-1.html",[99,0.206,126,1.735,294,1.918]],["body/classes/Network-1.html",[0,2.719,3,0.07,4,0.07,5,0.058,7,0.553,8,1.49,20,1.886,22,1.038,25,0.005,26,0.85,27,2.344,30,0.97,43,3.574,73,0.209,80,2.108,98,0.07,99,0.298,124,0.003,125,0.003,127,1.004,154,1.718,162,2.127,294,4.32,297,4.11,298,4.11,507,5.145,1497,5.705,1498,7.98,1499,5.705,1500,5.705,1501,5.705,1502,7.98,1503,5.705,1504,5.705,1505,5.705,1506,5.281]],["title/classes/NetworkBroadcast.html",[99,0.245,312,2.466]],["body/classes/NetworkBroadcast.html",[1,2.449,3,0.026,4,0.026,5,0.022,7,0.208,8,0.724,19,0.887,20,0.833,22,1.024,25,0.005,26,0.83,30,0.925,36,1.059,42,1.269,64,1.659,66,1.588,73,0.211,83,2.168,89,2.395,93,2.46,97,1.787,98,0.107,99,0.443,100,1.593,102,0.73,113,1.025,124,0.002,125,0.002,127,0.377,154,0.759,162,2.077,199,2.314,200,1.124,201,3.388,202,2.359,203,2.965,204,2.406,205,2.968,206,3.084,207,2.406,208,2.19,209,1.483,210,1.358,211,1.397,213,1.888,216,3.54,217,1.38,218,2.332,219,1.38,220,1.38,221,1.38,222,1.38,223,1.38,224,2.359,225,1.38,226,1.082,227,1.89,228,1.043,229,1.043,230,1.043,231,0.991,232,0.874,233,2.257,234,0.901,235,1.008,236,1.008,237,2.682,238,2.965,239,3.523,240,2.314,241,3.853,242,2.682,243,1.147,244,1.147,245,3.928,246,2.933,247,1.124,248,1.147,249,1.124,250,1.147,251,1.124,252,1.147,253,1.124,254,1.147,255,1.124,256,1.124,257,1.124,258,1.124,259,3.252,260,1.124,261,1.124,262,1.124,263,2.359,264,1.103,265,2.19,266,2.406,267,2.406,268,1.147,269,0.991,270,1.147,271,0.959,272,0.73,273,3.023,274,1.082,275,1.147,276,1.147,277,1.147,278,1.147,279,1.147,280,1.815,281,1.147,282,1.851,283,1.147,284,1.103,285,1.554,286,1.147,287,1.147,288,0.944,289,1.147,290,1.147,291,1.147,292,1.888,293,1.103,294,3.646,295,1.103,296,1.147,297,1.103,298,1.103,299,1.147,300,1.851,301,1.147,302,1.851,303,1.147,304,0.991,305,1.062,306,1.124,307,1.147,308,1.147,309,1.147,310,1.147,311,1.147,312,1.851,313,1.124,314,1.124,315,1.124,316,1.147,317,1.147,318,1.082,319,1.147,320,1.103,321,1.147,322,1.124,323,1.147,324,1.124,325,1.147,720,1.982,721,1.982,722,1.982,1507,2.382]],["title/classes/NetworksController.html",[99,0.245,1508,4.349]],["body/classes/NetworksController.html",[3,0.053,4,0.053,5,0.044,7,0.417,9,2.175,20,1.864,22,0.975,25,0.005,26,1.018,27,2.201,30,0.943,73,0.275,98,0.053,99,0.224,124,0.003,125,0.003,127,0.756,132,1.781,135,1.893,139,2.995,142,2.398,146,0.822,151,2.022,152,2.368,154,1.758,178,2.132,201,2.744,209,1.807,280,2.212,581,2.875,582,4.183,583,3.351,584,3.586,585,3.351,590,2.566,591,4.548,593,2.566,594,4.548,596,2.566,598,4.548,600,4.548,601,3.135,602,3.254,603,2.849,605,3.254,609,3.254,611,3.254,613,3.254,627,2.935,993,6.748,1273,3.548,1508,5.558,1509,4.78,1510,4.78,1511,6.748,1512,4.78,1513,4.296,1514,4.78,1515,4.78,1516,4.78,1517,4.78,1518,7.445,1519,4.78,1520,6.004,1521,4.296,1522,4.296,1523,4.78,1524,4.78,1525,4.78,1526,4.78,1527,4.78,1528,4.78]],["title/modules/NetworksModule.html",[182,1.561,335,3.88]],["body/modules/NetworksModule.html",[3,0.075,4,0.075,5,0.063,25,0.004,73,0.303,98,0.075,99,0.322,124,0.004,125,0.004,146,1.18,182,2.748,184,2.855,185,2.904,186,3.061,187,3.061,188,3.007,189,4.031,190,3.061,193,3.782,194,2.954,195,3.061,335,7.466,353,2.482,1508,7.055,1511,7.466,1522,6.169,1529,6.169,1530,6.169,1531,6.865,1532,6.865]],["title/injectables/NetworksService.html",[128,1.011,1511,3.88]],["body/injectables/NetworksService.html",[3,0.058,4,0.058,5,0.048,7,0.459,9,2.154,20,1.846,22,0.966,25,0.005,26,0.956,30,0.943,73,0.235,98,0.058,99,0.247,124,0.003,125,0.003,128,1.382,130,1.774,132,1.905,139,2.967,142,2.618,146,0.906,152,2.452,154,1.812,162,2.602,280,2.439,288,2.087,294,3.807,581,3.075,582,4.36,583,3.584,584,3.835,585,3.584,590,3.835,593,3.835,596,3.835,612,2.898,627,3.236,628,6.184,629,3.587,630,3.587,993,6.743,1511,5.303,1513,6.421,1518,7.492,1533,5.27,1534,5.27,1535,5.27,1536,5.27,1537,5.27,1538,5.27]],["title/classes/Newsletter.html",[99,0.245,240,2.419]],["body/classes/Newsletter.html",[1,2.6,3,0.027,4,0.027,5,0.022,7,0.212,8,0.736,19,0.905,20,0.847,22,1.008,25,0.005,26,0.836,30,0.903,36,1.076,42,1.287,64,2.48,66,1.605,73,0.213,83,2.189,89,2.413,93,2.479,97,1.799,98,0.107,99,0.445,100,1.6,102,1.221,113,1.045,124,0.002,125,0.002,127,0.384,154,0.771,162,2.092,199,2.345,200,1.146,201,3.44,202,2.391,203,2.996,204,2.439,205,2.991,206,3.116,207,2.439,208,2.22,209,1.507,210,1.38,211,1.42,213,2.439,216,3.371,217,1.407,218,2.36,219,1.407,220,1.407,221,1.407,222,1.407,223,1.407,224,2.391,225,1.407,226,1.103,227,1.916,228,1.064,229,1.064,230,1.064,231,1.01,232,0.891,233,2.279,234,0.918,235,1.028,236,1.028,237,2.714,238,2.996,239,3.551,240,2.996,241,3.401,242,2.714,243,1.169,244,1.169,245,3.952,246,2.957,247,1.146,248,1.169,249,1.146,250,1.169,251,1.146,252,1.169,253,1.146,254,1.169,255,1.146,256,1.146,257,1.146,258,1.146,259,2.391,260,1.146,261,1.146,262,1.146,263,1.88,264,1.124,265,1.064,266,1.169,267,2.439,268,1.169,269,1.01,270,1.169,271,0.978,272,0.744,273,3.055,274,1.103,275,1.169,276,1.169,277,1.169,278,1.169,279,1.169,280,1.844,281,1.169,282,1.88,283,1.169,284,1.124,285,1.578,286,1.169,287,1.169,288,0.962,289,1.169,290,1.169,291,1.169,292,1.918,293,1.124,294,3.36,295,1.124,296,1.169,297,1.124,298,1.124,299,1.169,300,1.88,301,1.169,302,1.88,303,1.169,304,1.01,305,1.083,306,1.146,307,1.169,308,1.169,309,1.169,310,1.169,311,1.169,312,1.146,313,1.146,314,1.146,315,1.146,316,1.169,317,1.169,318,1.103,319,1.169,320,1.124,321,1.169,322,1.146,323,1.169,324,1.146,325,1.169,1539,2.429,1540,2.429]],["title/classes/NotificationChannel.html",[99,0.245,1541,4.698]],["body/classes/NotificationChannel.html",[3,0.065,4,0.065,5,0.054,7,0.515,8,1.422,20,1.932,22,1.075,25,0.005,26,1.051,30,0.979,66,1.463,98,0.065,99,0.277,124,0.003,125,0.003,127,0.934,154,1.491,227,2.913,305,3.436,430,5.465,794,3.951,1541,6.925,1542,5.306,1543,8.579,1544,8.579,1545,6.19,1546,8.579,1547,5.904,1548,5.904,1549,5.904,1550,5.84,1551,5.904,1552,5.904,1553,5.465,1554,5.465,1555,6.925,1556,4.382,1557,4.912,1558,5.904,1559,5.904,1560,5.904,1561,5.904,1562,5.904,1563,5.904,1564,5.904,1565,5.306]],["title/controllers/NotificationController.html",[414,1.862,1566,4.349]],["body/controllers/NotificationController.html",[3,0.072,4,0.072,5,0.06,7,0.569,9,1.617,20,1.386,22,0.725,25,0.005,27,1.637,30,0.677,73,0.311,97,2.186,98,0.072,99,0.306,124,0.004,125,0.004,132,2.191,139,2.228,142,1.783,146,1.122,151,2.76,178,2.91,353,2.359,410,4.627,414,2.927,426,3.889,910,4.843,1550,5.593,1566,6.835,1567,6.525,1568,8.216,1569,8.216,1570,8.216,1571,7.033,1572,6.525,1573,5.864,1574,6.525,1575,4.627,1576,6.525,1577,6.525]],["title/interfaces/NotificationFilter.html",[534,2.104,1578,3.88]],["body/interfaces/NotificationFilter.html",[3,0.082,4,0.062,5,0.052,7,0.493,8,1.382,22,0.933,25,0.005,26,1.026,36,2.51,40,3.033,42,1.435,60,3.279,66,1.401,97,1.244,98,0.062,99,0.265,124,0.003,125,0.003,154,1.093,430,6.339,534,3.379,536,3.368,792,3.707,794,4.305,866,5.557,1370,3.47,1545,3.847,1553,5.309,1554,5.309,1556,4.195,1578,6.232,1579,4.195,1580,6.903,1581,6.903,1582,6.903,1583,5.309,1584,5.557,1585,5.557,1586,6.903,1587,4.419,1588,6.903,1589,4.419,1590,4.419,1591,4.195,1592,4.195,1593,4.419,1594,4.419,1595,5.855]],["title/interfaces/NotificationMetadata.html",[534,2.104,1588,3.88]],["body/interfaces/NotificationMetadata.html",[3,0.083,4,0.063,5,0.053,7,0.502,8,1.399,22,0.842,25,0.005,26,0.985,36,2.526,40,3.091,42,2.152,60,3.321,66,1.427,97,1.267,98,0.063,99,0.27,124,0.003,125,0.003,154,1.114,430,4.084,534,3.411,536,3.432,792,3.777,794,4.345,866,5.627,1370,3.536,1545,3.92,1553,5.376,1554,5.376,1556,4.275,1578,5.627,1579,4.275,1580,5.627,1581,5.627,1582,6.291,1583,5.376,1584,5.627,1585,5.627,1586,6.946,1587,4.504,1588,7.132,1589,7.044,1590,7.044,1591,4.275,1592,4.275,1593,4.504,1594,4.504,1595,5.929]],["title/modules/NotificationModule.html",[182,1.561,336,3.88]],["body/modules/NotificationModule.html",[3,0.07,4,0.07,5,0.058,20,1.353,25,0.005,73,0.318,98,0.07,99,0.299,124,0.003,125,0.003,146,1.095,182,2.655,184,2.648,185,2.694,186,2.84,187,2.84,188,2.789,189,3.895,190,2.84,193,3.608,194,2.74,195,2.84,336,7.327,341,3.339,353,2.925,426,3.795,519,4.98,520,6.327,523,5.307,524,4.036,530,4.98,531,4.98,1550,6.719,1566,7.398,1573,5.722,1596,5.722,1597,5.722,1598,6.368,1599,6.368]],["title/injectables/NotificationService.html",[128,1.011,1550,3.558]],["body/injectables/NotificationService.html",[3,0.077,4,0.077,5,0.064,9,1.735,20,1.487,22,0.778,25,0.005,30,0.727,73,0.306,98,0.077,99,0.329,124,0.004,125,0.004,128,1.66,130,2.357,135,3.4,139,2.39,146,1.204,150,4.438,151,2.962,426,4.173,523,4.593,524,4.438,904,5.476,905,7.569,907,6.714,935,5.476,940,5.476,1550,5.844,1600,7.002,1601,7.002]],["title/interfaces/NotificationServiceOptions.html",[534,2.104,1586,3.88]],["body/interfaces/NotificationServiceOptions.html",[3,0.082,4,0.062,5,0.052,7,0.493,8,1.382,22,0.933,25,0.005,26,0.979,36,2.51,40,3.033,42,1.435,60,3.279,66,1.401,97,1.244,98,0.062,99,0.265,124,0.003,125,0.003,154,1.093,430,4.007,534,3.379,536,3.368,792,3.707,794,4.305,866,5.557,1370,3.47,1545,3.847,1553,5.309,1554,5.309,1556,4.195,1578,6.635,1579,4.195,1580,6.903,1581,6.903,1582,6.903,1583,5.309,1584,5.557,1585,5.557,1586,7.094,1587,6.991,1588,6.903,1589,4.419,1590,4.419,1591,4.195,1592,4.195,1593,4.419,1594,4.419,1595,5.855]],["title/controllers/NotificationsController.html",[414,1.862,1602,4.349]],["body/controllers/NotificationsController.html",[3,0.077,4,0.077,5,0.065,7,0.614,25,0.005,26,0.907,27,1.768,30,0.731,73,0.284,98,0.077,99,0.331,124,0.004,125,0.004,132,2.298,142,1.926,146,1.212,151,2.982,152,1.903,178,3.143,353,2.548,414,3.071,800,4.765,1575,6.603,1602,7.171,1603,7.049,1604,7.049,1605,6.334,1606,7.049]],["title/modules/NotificationsModule.html",[182,1.561,1607,4.088]],["body/modules/NotificationsModule.html",[3,0.074,4,0.074,5,0.062,25,0.005,73,0.301,98,0.074,99,0.318,124,0.004,125,0.004,146,1.165,182,2.732,184,2.819,185,2.867,186,3.022,187,3.022,188,2.968,189,4.007,190,3.022,193,3.752,194,2.917,195,3.022,341,3.553,353,3.041,1575,7.11,1602,7.612,1605,6.09,1607,7.842,1608,6.09,1609,6.09,1610,6.777,1611,6.777]],["title/injectables/NotificationsService.html",[128,1.011,1575,3.707]],["body/injectables/NotificationsService.html",[3,0.08,4,0.08,5,0.067,7,0.638,25,0.004,26,0.928,30,0.759,73,0.241,98,0.08,99,0.343,124,0.004,125,0.004,128,1.706,130,2.464,132,2.351,142,2,146,1.258,152,1.975,800,4.826,812,4.638,813,4.638,1575,6.253,1612,7.318,1613,7.318]],["title/classes/OAuthCredentials.html",[99,0.245,1059,4.088]],["body/classes/OAuthCredentials.html",[0,2.002,1,1.261,3,0.065,4,0.045,5,0.037,7,0.354,8,1.097,9,1.919,22,1.034,25,0.005,26,1.078,27,1.942,30,0.803,43,4.195,58,3.77,65,2.575,66,2.426,73,0.232,77,3.192,80,1.349,97,1.309,98,0.095,99,0.33,100,1.316,124,0.003,125,0.003,127,0.941,147,4.319,162,1.566,272,1.245,376,4.258,406,4.048,407,3.015,466,4.048,603,2.421,794,3.969,917,3.969,926,3.583,951,2.765,1015,3.177,1016,3.379,1017,3.177,1018,3.379,1019,6.44,1020,6.44,1021,6.44,1022,6.44,1023,3.379,1024,3.379,1025,3.379,1026,3.379,1027,5.501,1029,3.379,1030,3.379,1033,4.65,1040,6.955,1048,5.501,1051,3.177,1052,3.379,1053,3.177,1054,4.414,1055,4.414,1056,3.544,1057,5.078,1058,3.177,1059,4.65,1614,4.062,1615,4.062,1616,4.062,1617,4.062]],["title/classes/Opinion.html",[99,0.245,238,2.419]],["body/classes/Opinion.html",[1,2.382,3,0.027,4,0.027,5,0.022,7,0.212,8,0.736,19,0.905,20,0.847,22,1.008,25,0.005,26,0.836,30,0.903,36,1.076,42,1.287,64,1.686,66,1.605,73,0.213,83,2.189,89,2.413,93,2.479,97,1.799,98,0.107,99,0.445,100,1.6,102,1.221,113,1.045,124,0.002,125,0.002,127,0.384,154,0.771,162,2.206,199,2.345,200,1.146,201,3.44,202,2.391,203,2.996,204,2.439,205,2.991,206,3.116,207,2.439,208,2.22,209,1.507,210,1.38,211,1.42,213,1.918,216,3.371,217,1.407,218,2.36,219,1.407,220,1.407,221,1.407,222,1.407,223,1.407,224,2.391,225,1.407,226,1.103,227,1.916,228,1.064,229,1.064,230,1.064,231,1.01,232,0.891,233,2.279,234,0.918,235,1.028,236,1.028,237,2.714,238,3.401,239,3.551,240,2.345,241,3.401,242,2.714,243,2.439,244,2.439,245,3.952,246,2.957,247,1.146,248,1.169,249,1.146,250,1.169,251,1.146,252,1.169,253,1.146,254,1.169,255,1.146,256,1.146,257,1.146,258,1.146,259,2.391,260,1.146,261,1.146,262,1.146,263,1.88,264,1.124,265,1.064,266,1.169,267,2.439,268,1.169,269,1.01,270,1.169,271,0.978,272,0.744,273,3.055,274,1.103,275,1.169,276,1.169,277,1.169,278,1.169,279,1.169,280,1.844,281,1.169,282,1.88,283,1.169,284,1.124,285,1.578,286,1.169,287,1.169,288,0.962,289,1.169,290,1.169,291,1.169,292,1.918,293,1.124,294,3.36,295,1.124,296,1.169,297,1.124,298,1.124,299,1.169,300,1.88,301,1.169,302,1.88,303,1.169,304,1.01,305,1.083,306,1.146,307,1.169,308,1.169,309,1.169,310,1.169,311,1.169,312,1.146,313,1.146,314,1.146,315,1.146,316,1.169,317,1.169,318,1.103,319,1.169,320,1.124,321,1.169,322,1.146,323,1.169,324,1.146,325,1.169,1618,2.429,1619,2.429]],["title/entities/Organizer.html",[0,1.76,93,1.689]],["body/entities/Organizer.html",[0,2.58,1,2.921,2,2.818,3,0.064,4,0.064,5,0.054,7,0.51,8,1.414,9,1.9,22,1.007,25,0.005,26,1.016,27,2.274,30,0.941,37,5.217,43,3.439,46,4.286,73,0.299,74,4.441,79,4.441,80,1.944,81,3.554,82,1.971,93,2.477,98,0.064,99,0.275,100,0.995,122,4.706,124,0.003,125,0.003,154,1.653,347,6.342,400,3.595,503,4.858,507,3.392,572,4.579,723,5.994,780,7.108,1620,5.855,1621,5.855,1622,5.855,1623,5.855,1624,5.855,1625,5.855,1626,5.262,1627,5.855]],["title/classes/OrganizerAccount.html",[99,0.245,122,3.21]],["body/classes/OrganizerAccount.html",[0,1.759,1,2.812,3,0.057,4,0.038,5,0.031,6,2.423,7,0.298,8,0.964,10,2.241,11,2.241,12,2.241,13,2.241,14,2.241,15,2.241,16,1.879,17,1.928,18,2.241,19,1.272,20,1.347,21,2.241,22,0.85,23,2.241,24,2.241,25,0.005,26,0.934,27,1.311,29,3.759,30,0.542,32,2.423,33,3.427,34,3.705,36,1.917,40,1.834,42,0.868,43,3.943,46,4.879,48,2.881,52,2.423,53,2.423,58,2.288,60,1.497,62,1.678,64,2.683,66,1.295,68,2.326,70,2.166,71,2.098,73,0.298,74,4.434,75,3.556,76,2.036,77,4.332,78,4.332,79,3.027,80,1.135,81,4.012,82,1.15,83,1.644,84,2.166,85,2.423,86,2.326,87,3.611,88,2.326,89,2.408,90,2.326,91,3.611,92,2.326,93,2.798,94,2.423,95,2.166,96,4.013,97,1.776,98,0.084,99,0.359,100,1.301,101,1.645,102,2.176,103,2.423,104,2.423,105,2.241,106,2.241,107,2.241,108,2.241,109,2.241,110,2.423,111,2.098,112,5.427,113,3.473,114,2.423,115,2.423,116,2.166,117,2.423,118,2.423,119,2.098,120,2.423,121,2.423,122,3.208,123,3.705,124,0.002,125,0.002,127,0.541,400,2.098,577,2.241,1628,3.417,1629,3.417]],["title/classes/OrganizerReview.html",[99,0.245,251,2.466]],["body/classes/OrganizerReview.html",[1,2.359,3,0.026,4,0.026,5,0.022,7,0.207,8,0.721,19,0.883,20,0.83,22,1.023,25,0.005,26,0.828,30,0.924,36,1.055,42,1.265,64,1.653,66,1.584,73,0.211,83,2.164,89,2.391,93,2.686,97,1.785,98,0.107,99,0.443,100,1.592,101,1.141,102,0.727,113,1.021,124,0.002,125,0.002,127,0.375,154,0.756,162,2.189,199,2.307,200,1.119,201,3.386,202,2.352,203,2.958,204,2.399,205,2.963,206,3.076,207,2.399,208,2.183,209,1.477,210,1.353,211,1.392,213,1.881,216,3.535,217,1.374,218,2.326,219,1.374,220,1.374,221,1.374,222,1.374,223,1.374,224,2.352,225,1.374,226,1.077,227,1.884,228,1.039,229,1.039,230,1.039,231,0.986,232,0.87,233,2.253,234,0.897,235,1.003,236,1.003,237,2.675,238,3.366,239,3.753,240,2.307,241,3.366,242,2.675,243,2.399,244,2.399,245,4.145,246,2.927,247,1.119,248,1.141,249,1.119,250,1.141,251,1.844,252,1.881,253,1.119,254,1.141,255,1.119,256,1.119,257,1.119,258,1.119,259,2.352,260,1.119,261,1.119,262,1.119,263,1.844,264,1.098,265,1.039,266,1.141,267,2.399,268,1.141,269,0.986,270,1.141,271,0.955,272,0.727,273,3.016,274,1.077,275,1.141,276,1.141,277,1.141,278,1.141,279,1.141,280,1.809,281,1.141,282,1.844,283,1.141,284,1.098,285,1.548,286,1.141,287,1.141,288,0.939,289,1.141,290,1.141,291,1.141,292,1.881,293,1.098,294,3.328,295,1.098,296,1.141,297,1.098,298,1.098,299,1.141,300,1.844,301,1.141,302,1.844,303,1.141,304,0.986,305,1.058,306,1.119,307,1.141,308,1.141,309,1.141,310,1.141,311,1.141,312,1.119,313,1.119,314,1.119,315,1.119,316,1.141,317,1.141,318,1.077,319,1.141,320,1.098,321,1.141,322,1.119,323,1.141,324,1.119,325,1.141,1173,1.615,1175,1.76,1176,1.76,1630,2.372,1631,2.372]],["title/classes/OrganizerUser.html",[99,0.245,384,3.313]],["body/classes/OrganizerUser.html",[3,0.089,4,0.071,5,0.059,19,2.393,25,0.005,26,0.94,36,1.734,42,2.066,60,2.814,62,3.156,66,1.593,73,0.212,89,2.022,93,2.076,96,3.369,97,1.414,98,0.11,99,0.464,124,0.003,125,0.003,127,1.017,154,1.243,210,2.225,211,2.289,232,2.985,246,2.586,304,2.673,374,4.073,375,4.557,376,5.163,377,4.073,378,4.073,379,3.945,380,3.945,381,4.557,382,3.945,383,4.073,384,5.158]],["title/classes/OrganizerUser-1.html",[99,0.206,126,1.735,384,2.776]],["body/classes/OrganizerUser-1.html",[1,2.596,3,0.074,4,0.074,5,0.062,7,0.585,8,1.543,22,0.746,25,0.005,27,1.684,30,0.696,46,4.57,73,0.314,76,4,80,2.229,97,1.84,98,0.074,99,0.315,100,1.141,122,5.135,124,0.004,125,0.004,127,1.062,232,2.462,384,5.301,386,4.569,387,4.76,388,4.76,392,4.982,404,5.693,1321,5.249,1632,6.712,1633,7.579,1634,6.957,1635,6.712,1636,6.712]],["title/controllers/OrganizersController.html",[358,4.088,414,1.862]],["body/controllers/OrganizersController.html",[3,0.055,4,0.055,5,0.046,7,0.434,9,2.104,20,1.804,22,0.943,25,0.005,26,1.073,27,2.235,30,0.924,73,0.164,93,2.743,98,0.055,99,0.234,124,0.003,125,0.003,132,1.833,135,1.974,139,2.898,142,2.434,146,0.857,152,2.404,154,1.946,165,3.06,201,2.805,353,1.801,358,5.378,414,1.775,437,3.392,581,2.96,582,4.259,583,3.45,584,3.691,585,3.45,590,2.675,591,4.681,593,2.675,594,4.681,596,2.675,598,4.681,600,4.681,601,3.269,602,3.392,603,2.97,605,3.392,606,3.392,607,3.534,608,4.877,609,3.392,610,4.877,611,3.392,612,2.741,613,3.392,614,3.534,996,5.845,1637,4.983,1638,6.18,1639,4.478,1640,4.983,1641,4.983,1642,4.983,1643,4.983,1644,6.64,1645,4.983,1646,4.983]],["title/modules/OrganizersModule.html",[182,1.561,337,3.88]],["body/modules/OrganizersModule.html",[3,0.075,4,0.075,5,0.063,25,0.004,73,0.302,98,0.075,99,0.32,124,0.004,125,0.004,146,1.173,182,2.74,184,2.837,185,2.885,186,3.042,187,3.042,188,2.987,189,4.019,190,3.042,193,3.767,194,2.935,195,3.042,337,7.455,353,3.053,358,7.176,1647,6.13,1648,6.13,1649,7.854,1650,6.821,1651,6.821,1652,6.821]],["title/injectables/OrganizersService.html",[128,1.011,1649,4.088]],["body/injectables/OrganizersService.html",[3,0.058,4,0.058,5,0.048,7,0.459,9,2.154,20,1.846,22,0.966,25,0.005,26,0.956,30,0.943,73,0.235,93,2.808,98,0.058,99,0.247,124,0.003,125,0.003,128,1.382,130,1.774,132,1.905,139,2.967,142,2.618,146,0.906,152,2.452,154,1.812,162,2.602,288,2.087,581,3.075,582,4.36,583,3.584,584,3.835,585,3.584,590,3.835,593,3.835,596,3.835,612,2.898,627,3.236,628,6.184,629,3.587,630,3.587,996,6.743,1638,4.736,1639,6.421,1644,7.492,1649,5.588,1653,5.27,1654,5.27,1655,5.27,1656,5.27,1657,5.27,1658,5.27]],["title/classes/PASystem.html",[99,0.245,563,3.88]],["body/classes/PASystem.html",[3,0.08,4,0.08,5,0.067,25,0.004,66,1.814,73,0.241,83,2.774,98,0.108,99,0.444,100,1.244,124,0.004,125,0.004,127,1.158,162,1.927,231,3.044,457,3.595,557,5.432,558,5.723,559,4.623,560,4.981,561,3.671,562,4.025,563,6.545]],["title/classes/PasswordCredentials.html",[99,0.245,1058,4.088]],["body/classes/PasswordCredentials.html",[0,2.022,1,1.278,3,0.066,4,0.045,5,0.038,7,0.359,8,1.108,9,2.144,22,1.017,25,0.005,26,1.08,27,1.778,30,0.736,43,4.181,58,4.088,66,2.382,73,0.234,77,3.223,80,1.367,97,1.322,98,0.095,99,0.333,100,1.324,124,0.003,125,0.003,127,0.95,147,4.353,162,1.582,272,1.262,376,4.285,406,4.088,407,3.056,466,4.088,603,2.454,794,4.434,917,4.434,926,4.003,951,2.803,1015,3.22,1016,3.425,1017,3.22,1018,3.425,1019,4.996,1020,4.996,1021,4.996,1022,4.996,1023,3.425,1024,3.425,1025,3.425,1026,3.425,1027,5.544,1029,3.425,1030,3.425,1032,4.259,1033,5.544,1040,6.479,1048,5.544,1051,3.22,1052,3.425,1053,3.22,1054,4.458,1055,4.458,1056,3.579,1057,5.111,1058,4.697,1059,3.22,1659,4.117,1660,4.117,1661,4.117]],["title/classes/PasswordLogin.html",[99,0.245,1063,3.707]],["body/classes/PasswordLogin.html",[3,0.061,4,0.061,5,0.051,7,0.481,8,1.36,22,1.055,25,0.005,26,0.999,27,1.384,29,4.663,30,0.573,66,1.368,73,0.243,81,4.148,82,1.858,98,0.101,99,0.416,100,1.252,124,0.003,125,0.003,127,0.873,272,1.691,457,3.62,534,2.221,794,4.254,917,4.73,919,3.756,926,3.84,938,5.017,945,5.226,958,5.226,959,5.226,1001,3.913,1006,3.619,1010,4.834,1056,4.392,1061,5.017,1062,3.756,1063,6.279,1067,3.756,1068,5.884,1069,5.017,1070,5.017,1071,3.619,1072,3.619,1662,5.518]],["title/classes/PastEvent.html",[99,0.245,1137,4.088]],["body/classes/PastEvent.html",[1,1.212,3,0.076,4,0.043,5,0.036,16,3.78,17,3.878,25,0.005,26,0.924,36,2.485,42,2.058,48,2.623,60,1.71,62,1.918,66,1.431,73,0.25,83,1.817,87,2.725,89,2.55,91,2.725,93,2.619,97,2.026,98,0.096,99,0.381,100,1.442,102,2.327,124,0.002,125,0.002,127,0.618,154,1.117,162,1.521,208,3.01,210,2,231,1.624,233,3.15,234,2.183,235,1.651,236,1.651,265,1.71,269,1.624,285,1.546,561,4.067,580,4.096,663,2.001,666,5.375,667,2.658,668,5.375,669,3.053,670,3.053,671,3.053,672,3.053,673,3.053,674,3.053,675,2.658,676,3.053,677,3.053,678,3.053,679,2.658,680,2.658,681,3.053,682,3.053,683,5.375,684,3.053,686,3.053,705,2.768,775,4.22,1073,3.053,1074,4.357,1087,3.176,1105,3.053,1106,3.248,1107,3.053,1108,3.053,1109,3.053,1110,3.053,1111,3.053,1112,4.287,1113,3.053,1114,3.053,1115,3.053,1116,3.053,1117,3.053,1118,2.768,1119,2.768,1120,4.517,1121,2.327,1122,4.287,1123,4.287,1124,3.053,1125,5.638,1126,4.287,1127,3.248,1128,2.475,1129,3.053,1130,3.053,1131,2.561,1132,3.248,1133,3.053,1134,3.053,1135,2.898,1136,4.804,1137,4.517,1138,4.804]],["title/interfaces/PatchOptions.html",[534,2.104,1663,4.349]],["body/interfaces/PatchOptions.html",[3,0.072,4,0.072,5,0.06,7,0.572,8,1.522,9,2.044,22,0.917,25,0.005,26,0.949,73,0.297,82,2.211,98,0.072,100,1.402,102,2.012,124,0.004,125,0.004,146,1.418,152,1.772,154,1.27,499,4.656,534,2.643,536,3.913,541,6.451,585,3.294,601,4.307,936,6.862,1272,6.862,1273,7.235,1274,5.462,1275,5.462,1276,5.135,1281,7.413,1282,5.901,1283,5.901,1663,7.503,1664,5.901,1665,6.566]],["title/classes/Performer.html",[99,0.245,246,2.104]],["body/classes/Performer.html",[3,0.071,4,0.071,5,0.059,7,0.564,8,1.508,9,2.456,22,0.995,25,0.005,26,1.043,27,2.247,30,0.929,37,6.096,43,3.787,73,0.269,80,2.147,81,3.913,82,2.177,98,0.071,99,0.303,124,0.003,125,0.003,127,1.023,246,3.288,272,1.981,756,7.45,757,7.45,758,7.45,1666,6.465,1667,6.465,1668,6.465,1669,6.465]],["title/classes/PerformerAccount.html",[99,0.245,755,4.349]],["body/classes/PerformerAccount.html",[1,3.068,3,0.059,4,0.029,5,0.024,7,0.231,8,0.791,9,2.428,10,3.533,11,3.533,12,3.533,13,3.533,14,3.533,15,3.533,16,2.963,17,3.487,18,3.533,19,2.006,20,1.313,21,3.533,22,1.107,23,3.533,24,3.533,25,0.005,26,1.064,30,1.026,36,2.406,40,1.425,42,1.57,48,2.447,60,1.163,62,2.105,66,1.062,70,1.683,71,1.63,73,0.087,83,1.945,87,3.422,89,2.579,91,3.422,93,2.192,98,0.092,99,0.373,100,1.393,102,1.313,105,2.811,106,4.055,107,4.055,108,4.055,109,4.055,124,0.002,125,0.002,127,0.42,154,0.829,162,1.628,209,1.62,210,1.484,211,1.527,216,3.922,226,1.206,227,2.036,228,1.163,229,1.163,230,1.163,231,1.104,274,1.206,285,1.697,347,1.971,457,2.105,559,2.825,560,1.808,561,3.101,562,2.357,580,1.583,663,1.361,667,1.808,675,1.808,679,1.808,680,1.808,725,2.209,726,2.209,729,4.481,730,2.209,733,2.386,734,2.386,735,2.386,736,2.386,737,2.386,738,2.386,739,2.386,740,2.386,741,2.386,742,2.386,743,2.386,744,2.386,745,2.386,746,2.386,747,2.386,748,2.386,749,2.386,750,2.386,751,2.386,752,2.716,753,2.631,754,3.851,755,5.143,756,4.481,757,4.481,758,4.481,759,2.209,760,3.351,761,2.209,762,2.209,763,2.209,764,2.209,765,2.209,766,2.209,767,2.209,768,2.209,769,2.209,770,4.481,771,2.209,772,2.209,773,2.209,774,3.565,775,1.63,776,2.209,777,2.209,778,2.209,779,3.565,780,2.209,1670,2.655,1671,2.655,1672,2.655]],["title/classes/PerformerReview.html",[99,0.245,247,2.466]],["body/classes/PerformerReview.html",[1,2.445,3,0.026,4,0.026,5,0.022,7,0.207,8,0.721,19,0.883,20,0.83,22,1.023,25,0.005,26,0.828,30,0.924,36,1.055,42,1.265,64,1.653,66,1.584,73,0.211,83,2.164,89,2.391,93,2.455,97,1.785,98,0.107,99,0.443,100,1.592,101,1.141,102,0.727,113,1.021,124,0.002,125,0.002,127,0.375,154,0.756,162,2.189,199,2.307,200,1.119,201,3.386,202,2.352,203,2.958,204,2.399,205,2.963,206,3.076,207,2.399,208,2.183,209,1.477,210,1.353,211,1.392,213,1.881,216,3.535,217,1.374,218,2.326,219,1.374,220,1.374,221,1.374,222,1.374,223,1.374,224,2.352,225,1.374,226,1.077,227,1.884,228,1.039,229,1.039,230,1.039,231,0.986,232,0.87,233,2.253,234,0.897,235,1.003,236,1.003,237,2.675,238,3.366,239,3.753,240,2.307,241,3.366,242,2.675,243,2.399,244,2.399,245,4.145,246,3.169,247,1.844,248,1.881,249,1.119,250,1.141,251,1.119,252,1.141,253,1.119,254,1.141,255,1.119,256,1.119,257,1.119,258,1.119,259,2.352,260,1.119,261,1.119,262,1.119,263,1.844,264,1.098,265,1.039,266,1.141,267,2.399,268,1.141,269,0.986,270,1.141,271,0.955,272,0.727,273,3.016,274,1.077,275,1.141,276,1.141,277,1.141,278,1.141,279,1.141,280,1.809,281,1.141,282,1.844,283,1.141,284,1.098,285,1.548,286,1.141,287,1.141,288,0.939,289,1.141,290,1.141,291,1.141,292,1.881,293,1.098,294,3.328,295,1.098,296,1.141,297,1.098,298,1.098,299,1.141,300,1.844,301,1.141,302,1.844,303,1.141,304,0.986,305,1.058,306,1.119,307,1.141,308,1.141,309,1.141,310,1.141,311,1.141,312,1.119,313,1.119,314,1.119,315,1.119,316,1.141,317,1.141,318,1.077,319,1.141,320,1.098,321,1.141,322,1.119,323,1.141,324,1.119,325,1.141,1173,1.615,1175,1.76,1176,1.76,1673,2.372,1674,2.372]],["title/classes/PerformerUser.html",[96,2.741,99,0.245]],["body/classes/PerformerUser.html",[3,0.089,4,0.071,5,0.059,19,2.393,25,0.005,26,0.94,36,1.734,42,2.066,60,2.814,62,3.156,66,1.593,73,0.212,89,2.022,93,2.076,96,4.267,97,1.414,98,0.11,99,0.464,124,0.003,125,0.003,127,1.017,154,1.243,210,2.225,211,2.289,232,2.985,246,2.586,304,2.673,374,4.073,375,4.557,376,5.163,377,4.073,378,4.073,379,3.945,380,3.945,381,4.557,382,3.945,383,4.073,384,4.073]],["title/classes/PerformerUser-1.html",[96,2.296,99,0.206,126,1.735]],["body/classes/PerformerUser-1.html",[1,2.596,3,0.074,4,0.074,5,0.062,7,0.585,8,1.543,22,0.746,25,0.005,27,1.684,30,0.696,46,4.57,73,0.314,76,4,80,2.229,96,4.385,97,1.84,98,0.074,99,0.315,100,1.141,111,5.135,124,0.004,125,0.004,127,1.062,232,2.462,386,4.569,387,4.76,388,4.76,392,4.982,404,5.693,1321,5.249,1633,7.579,1634,6.957,1675,6.712,1676,6.712,1677,6.712]],["title/interfaces/PhysicalSpace.html",[534,2.104,559,2.741]],["body/interfaces/PhysicalSpace.html",[3,0.071,4,0.071,5,0.059,7,0.564,8,1.508,22,0.718,25,0.005,26,0.99,42,2.074,48,2.936,83,2.034,98,0.112,99,0.472,100,1.099,102,1.981,124,0.003,125,0.003,154,1.58,162,2.478,209,2.444,210,2.238,211,2.303,227,3.088,272,2.744,534,2.602,536,3.853,559,4.283,562,5.174,752,4.098,753,3.97,1087,3.556,1170,3.853,1350,4.585,1351,4.401]],["title/interfaces/PhysicalSpace-1.html",[126,1.735,534,1.763,559,2.296]],["body/interfaces/PhysicalSpace-1.html",[3,0.084,4,0.084,5,0.07,7,0.663,8,1.666,22,0.845,25,0.004,98,0.084,124,0.004,125,0.004,162,2.534,534,3.062,536,4.534,559,4.732,562,5.473,1678,7.608,1679,7.608]],["title/classes/Post.html",[99,0.245,201,1.862]],["body/classes/Post.html",[1,2.416,3,0.028,4,0.028,5,0.023,7,0.22,8,0.758,19,0.938,20,0.872,22,0.991,25,0.005,26,0.847,30,0.879,36,1.108,42,1.319,64,1.737,66,1.636,73,0.217,83,2.348,89,2.448,93,2.514,97,1.821,98,0.108,99,0.448,100,1.611,102,0.772,113,1.084,124,0.002,125,0.002,127,0.399,154,0.794,162,2.12,199,2.405,200,1.189,201,3.258,202,2.452,203,3.054,204,2.501,205,3.034,206,3.176,207,2.501,208,2.276,209,1.552,210,1.421,211,1.463,213,1.976,216,2.412,218,2.412,224,2.452,226,1.144,227,1.964,228,1.103,229,1.103,230,1.103,231,1.048,232,0.924,233,2.318,234,0.952,235,1.066,236,1.066,237,2.774,238,3.054,239,3.601,240,2.405,241,3.454,242,2.774,243,1.212,244,1.212,245,3.997,246,3.004,247,1.189,248,1.212,249,1.189,250,1.212,251,1.189,252,1.212,253,1.189,254,1.212,255,1.189,256,1.189,257,1.189,258,1.189,259,2.452,260,1.189,261,1.189,262,1.189,263,1.937,264,1.166,265,1.103,266,1.212,267,2.501,268,1.212,269,1.048,270,1.212,271,1.014,272,0.772,273,3.114,274,1.144,275,1.212,276,1.212,277,1.212,278,1.212,279,1.212,280,1.9,281,1.212,282,1.937,283,1.212,284,1.166,285,1.626,286,1.212,287,1.212,288,0.998,289,1.212,290,1.212,291,1.212,292,1.976,293,1.166,294,3.408,295,1.166,296,1.212,297,1.166,298,1.166,299,1.212,300,1.937,301,1.212,302,1.937,303,1.212,304,1.048,305,1.123,306,1.189,307,1.212,308,1.212,309,1.212,310,1.212,311,1.212,312,1.189,313,1.189,314,1.189,315,1.189,316,1.212,317,1.212,318,1.144,319,1.212,320,1.166,321,1.212,322,1.189,323,1.212,324,1.189,325,1.212,1680,2.519,1681,2.519,1682,2.519,1683,2.519,1684,2.519,1685,2.519,1686,2.519]],["title/controllers/PresenceController.html",[414,1.862,1687,4.349]],["body/controllers/PresenceController.html",[3,0.077,4,0.077,5,0.065,7,0.614,25,0.005,26,0.907,27,1.768,30,0.731,73,0.284,98,0.077,99,0.331,124,0.004,125,0.004,132,2.298,142,1.926,146,1.212,151,2.982,152,1.903,178,3.143,353,2.548,414,3.071,800,4.765,1687,7.171,1688,7.049,1689,7.049,1690,6.911,1691,6.334,1692,7.049]],["title/modules/PresenceModule.html",[182,1.561,1693,4.088]],["body/modules/PresenceModule.html",[3,0.074,4,0.074,5,0.062,25,0.005,73,0.301,98,0.074,99,0.318,124,0.004,125,0.004,146,1.165,182,2.732,184,2.819,185,2.867,186,3.022,187,3.022,188,2.968,189,4.007,190,3.022,193,3.752,194,2.917,195,3.022,341,3.553,353,3.041,1687,7.612,1690,7.443,1691,6.09,1693,7.842,1694,6.09,1695,6.09,1696,6.777,1697,6.777]],["title/injectables/PresenceService.html",[128,1.011,1690,3.88]],["body/injectables/PresenceService.html",[3,0.08,4,0.08,5,0.067,7,0.638,25,0.004,26,0.928,30,0.759,73,0.241,98,0.08,99,0.343,124,0.004,125,0.004,128,1.706,130,2.464,132,2.351,142,2,146,1.258,152,1.975,800,4.826,812,4.638,813,4.638,1690,6.545,1698,7.318,1699,7.318]],["title/classes/PrivateGroup.html",[99,0.245,302,2.466]],["body/classes/PrivateGroup.html",[1,2.35,3,0.026,4,0.026,5,0.022,7,0.205,8,0.715,19,1.843,20,1.22,22,1.021,25,0.005,26,0.85,30,0.944,36,1.55,42,1.458,64,1.639,66,1.576,73,0.209,83,2.153,89,2.381,93,2.446,97,1.897,98,0.107,99,0.442,100,1.589,102,1.516,113,2.13,124,0.002,125,0.002,127,0.371,154,0.75,162,1.907,199,2.29,200,1.108,201,3.166,202,2.335,203,2.29,204,1.13,205,2.668,206,2.382,207,1.13,208,1.028,209,1.465,210,1.342,211,1.381,213,1.865,216,3.47,218,1.992,224,1.829,226,1.066,227,1.871,228,1.028,229,1.028,230,1.028,231,0.977,232,0.861,233,2.242,234,0.888,235,0.993,236,0.993,237,2.942,238,3.167,239,3.503,240,2.29,241,3.503,242,2.942,243,1.13,244,1.13,245,3.91,246,2.914,247,1.108,248,1.13,249,1.108,250,1.13,251,1.108,252,1.13,253,1.108,254,1.13,255,1.108,256,1.108,257,1.108,258,1.108,259,2.335,260,1.108,261,1.108,262,1.108,263,1.829,264,1.087,265,1.028,266,1.13,267,2.382,268,1.13,269,0.977,270,1.13,271,0.945,272,0.719,273,4.192,274,2.248,275,2.382,276,2.382,277,2.382,278,2.382,279,2.382,280,1.794,281,1.13,282,1.829,283,1.13,284,1.087,285,1.535,286,1.13,287,1.13,288,0.93,289,1.13,290,1.13,291,1.13,292,1.865,293,1.087,294,3.315,295,1.087,296,1.13,297,1.087,298,1.087,299,1.13,300,1.829,301,1.13,302,2.335,303,1.13,304,0.977,305,1.047,306,1.108,307,1.13,308,1.13,309,2.382,310,2.382,311,2.382,312,1.108,313,1.108,314,1.108,315,1.108,316,1.13,317,1.13,318,1.066,319,1.13,320,1.087,321,1.13,322,1.108,323,1.13,324,1.108,325,1.13,1700,2.348,1701,2.348,1702,2.348,1703,2.348,1704,2.348,1705,2.348,1706,2.348,1707,2.348,1708,2.348,1709,2.348,1710,2.348,1711,2.348,1712,2.348]],["title/classes/PublicUser.html",[99,0.245,382,3.21]],["body/classes/PublicUser.html",[3,0.089,4,0.071,5,0.059,19,2.393,25,0.005,26,0.94,36,1.734,42,2.066,60,2.814,62,3.156,66,1.593,73,0.212,89,2.022,93,2.076,96,3.369,97,1.414,98,0.11,99,0.464,124,0.003,125,0.003,127,1.017,154,1.243,210,2.225,211,2.289,232,2.985,246,2.586,304,2.673,374,4.073,375,4.557,376,5.163,377,4.073,378,4.073,379,3.945,380,3.945,381,4.557,382,4.996,383,4.073,384,4.073]],["title/classes/PublicUser-1.html",[99,0.206,126,1.735,382,2.689]],["body/classes/PublicUser-1.html",[3,0.082,4,0.082,5,0.069,25,0.005,73,0.315,76,4.454,80,2.482,97,1.965,98,0.082,99,0.351,100,1.27,124,0.004,125,0.004,127,1.182,232,2.742,382,5.483,386,5.087,387,5.3,388,5.3,1713,7.473,1714,7.473]],["title/entities/PublishedEvent.html",[0,1.76,1121,3.115]],["body/entities/PublishedEvent.html",[0,1.88,2,1.796,3,0.041,4,0.041,5,0.034,7,0.325,8,1.031,9,2.069,16,3.68,20,0.793,22,1.07,25,0.005,26,0.588,27,1.679,30,0.988,42,1.418,43,2.99,46,4.341,47,2.291,48,3.374,65,2.365,66,1.841,73,0.314,77,3.592,78,4.644,79,4.304,80,1.239,81,1.552,82,1.256,87,3.505,89,2.722,91,3.505,93,2.796,95,2.365,97,1.904,98,0.041,99,0.175,100,0.634,101,2.688,124,0.002,125,0.002,233,2.734,265,2.446,269,2.323,285,2.212,386,2.54,395,2.224,411,2.918,561,4.341,580,3.988,664,4.367,710,3.104,775,4.109,1074,4.241,1087,3.071,1112,5.904,1118,3.96,1119,3.96,1120,4.367,1121,3.328,1122,4.967,1123,4.967,1124,5.233,1125,4.967,1126,4.967,1143,3.104,1150,3.104,1151,3.104,1152,3.104,1153,3.104,1154,3.104,1156,3.104,1157,3.104,1715,3.731,1716,3.731,1717,3.731,1718,3.731,1719,5.584,1720,3.731,1721,3.731,1722,3.731,1723,3.731,1724,3.731,1725,3.731,1726,3.731,1727,3.731,1728,3.731,1729,3.731,1730,3.731,1731,3.731,1732,3.731,1733,3.731,1734,3.731]],["title/classes/RegisterDto.html",[99,0.245,922,4.349]],["body/classes/RegisterDto.html",[3,0.067,4,0.067,5,0.056,7,0.533,8,1.454,22,1.024,25,0.005,26,1.059,27,2.311,29,4.525,30,0.956,73,0.26,81,3.966,82,2.057,98,0.067,99,0.287,124,0.003,125,0.003,127,0.967,379,5.354,380,5.354,395,5.197,917,4.889,922,6.555,926,4.036,1001,6.533,1006,4.007,1008,5.083,1009,5.083,1010,4.007,1067,4.159,1735,6.109,1736,6.109,1737,6.109,1738,6.109,1739,6.109]],["title/classes/RemovedComment.html",[99,0.245,659,3.21]],["body/classes/RemovedComment.html",[3,0.059,4,0.059,5,0.049,25,0.005,26,0.759,36,1.948,42,2.319,66,1.326,73,0.269,97,1.924,98,0.11,99,0.465,100,1.634,124,0.003,125,0.003,127,0.846,154,1.035,201,2.91,205,2.086,218,3.288,233,2.864,271,2.153,272,2.212,631,3.285,632,3.285,633,5.777,634,5.016,635,3.285,636,3.285,637,3.285,638,3.285,639,3.285,640,3.285,641,3.285,642,3.285,643,3.285,644,5.369,645,3.391,646,3.391,647,3.391,648,3.391,649,3.391,650,3.391,651,3.391,652,3.391,653,3.391,654,3.391,655,3.285,656,3.285,657,3.285,658,3.285,659,4.432,660,3.285,661,3.391,662,3.391,663,2.743]],["title/classes/ResolvedCases.html",[99,0.245,660,3.21]],["body/classes/ResolvedCases.html",[3,0.058,4,0.058,5,0.048,7,0.457,8,1.314,22,0.583,25,0.005,26,0.749,30,0.544,36,1.922,42,2.375,66,1.3,73,0.266,97,1.909,98,0.11,99,0.463,100,1.589,124,0.003,125,0.003,127,0.83,154,1.014,201,2.881,205,2.044,218,3.254,233,2.841,271,2.11,272,2.182,631,3.22,632,3.22,633,5.568,634,4.964,635,3.22,636,3.22,637,3.22,638,3.22,639,3.22,640,3.22,641,3.22,642,3.22,643,3.22,644,5.325,645,3.324,646,3.324,647,3.324,648,3.324,649,3.324,650,3.324,651,3.324,652,3.324,653,3.324,654,3.324,655,3.22,656,3.22,657,3.22,658,3.22,659,3.22,660,4.372,661,5.125,662,3.324,663,2.688,1740,5.244]],["title/classes/Resource.html",[99,0.245,227,1.976]],["body/classes/Resource.html",[3,0.068,4,0.068,5,0.057,7,0.54,8,1.468,22,0.976,25,0.005,26,1.008,30,0.911,42,2.352,48,2.816,83,1.95,98,0.111,99,0.468,100,1.053,102,1.9,124,0.003,125,0.003,127,0.981,154,1.792,162,2.095,209,2.343,210,3.04,211,3.128,227,3.32,272,2.691,534,2.495,559,3.25,562,3.409,752,3.929,753,3.806,1087,3.409,1170,3.694,1350,4.396,1351,4.22,1741,6.199,1742,6.199,1743,6.199]],["title/classes/Resource-1.html",[99,0.206,126,1.735,227,1.655]],["body/classes/Resource-1.html",[3,0.059,4,0.059,5,0.049,7,0.468,8,1.334,22,0.973,25,0.005,26,0.921,27,2.196,29,4.625,30,0.908,42,2.223,43,2.91,58,2.349,73,0.269,80,1.781,81,3.916,82,1.806,83,1.687,98,0.079,99,0.339,100,0.911,102,2.506,124,0.003,125,0.003,127,0.849,154,1.582,162,1.413,209,2.028,210,3.164,211,3.256,227,3.748,272,2.216,501,5.367,503,3.4,505,5.367,507,3.108,1032,3.803,1057,5.365,1557,6.805,1571,5.655,1744,4.82,1745,5.364,1746,5.364,1747,5.364,1748,6.498,1749,7.351,1750,5.364,1751,5.364,1752,6.498,1753,6.498,1754,5.364,1755,5.364,1756,5.364,1757,4.82,1758,6.498]],["title/classes/Review.html",[99,0.245,239,2.419]],["body/classes/Review.html",[1,2.373,3,0.026,4,0.026,5,0.022,7,0.21,8,0.73,19,0.896,20,0.84,22,1.017,25,0.005,26,0.833,30,0.915,36,1.068,42,1.279,64,1.673,66,1.597,73,0.212,83,2.179,89,2.405,93,2.47,97,1.794,98,0.107,99,0.444,100,1.597,102,0.738,113,1.036,124,0.002,125,0.002,127,0.381,154,0.765,162,2.2,199,2.33,200,1.136,201,3.395,202,2.376,203,2.982,204,2.423,205,2.98,206,3.101,207,2.423,208,2.205,209,1.495,210,1.369,211,1.409,213,1.904,216,3.494,217,1.395,218,2.347,219,1.395,220,1.395,221,1.395,222,1.395,223,1.395,224,2.376,225,1.395,226,1.093,227,1.903,228,1.054,229,1.054,230,1.054,231,1.001,232,0.883,233,2.269,234,0.91,235,1.018,236,1.018,237,2.699,238,3.538,239,3.664,240,2.33,241,3.387,242,2.699,243,2.423,244,2.423,245,4.161,246,2.946,247,1.136,248,1.158,249,1.136,250,1.158,251,1.136,252,1.158,253,1.136,254,1.158,255,1.136,256,1.136,257,1.136,258,1.136,259,2.376,260,1.136,261,1.136,262,1.136,263,1.866,264,1.114,265,1.054,266,1.158,267,2.423,268,1.158,269,1.001,270,1.158,271,0.969,272,0.738,273,3.04,274,1.093,275,1.158,276,1.158,277,1.158,278,1.158,279,1.158,280,1.831,281,1.158,282,1.866,283,1.158,284,1.114,285,1.567,286,1.158,287,1.158,288,0.953,289,1.158,290,1.158,291,1.158,292,1.904,293,1.114,294,3.348,295,1.114,296,1.158,297,1.114,298,1.114,299,1.158,300,1.866,301,1.158,302,1.866,303,1.158,304,1.001,305,1.073,306,1.136,307,1.158,308,1.158,309,1.158,310,1.158,311,1.158,312,1.136,313,1.136,314,1.136,315,1.136,316,1.158,317,1.158,318,1.093,319,1.158,320,1.114,321,1.158,322,1.136,323,1.158,324,1.136,325,1.158,1175,1.787,1176,1.787,1759,2.407]],["title/guards/RolesGuard.html",[439,3.88,1760,4.088]],["body/guards/RolesGuard.html",[3,0.066,4,0.066,5,0.055,7,0.522,9,1.928,20,1.652,22,0.864,25,0.005,30,0.807,36,2.099,58,2.623,73,0.301,97,1.318,98,0.066,99,0.281,124,0.003,125,0.003,128,1.504,132,2.073,135,2.372,139,2.655,142,1.636,146,1.03,152,2.099,178,2.67,232,2.197,411,4.683,421,4.246,429,4.93,441,4.246,443,6.787,448,5.773,449,6.787,457,2.941,459,4.683,1521,5.381,1760,6.082,1761,5.988,1762,5.381,1763,8.727,1764,5.988,1765,5.988,1766,4.982,1767,7.777,1768,7.777,1769,5.988,1770,5.381,1771,5.988,1772,5.988,1773,5.988]],["title/guards/RolesGuard-1.html",[126,1.735,439,3.251,1760,3.425]],["body/guards/RolesGuard-1.html",[3,0.06,4,0.06,5,0.05,7,0.475,9,1.811,20,1.552,22,0.812,25,0.005,26,0.769,30,0.758,36,1.972,58,3.611,73,0.29,97,1.199,98,0.06,99,0.256,124,0.003,125,0.003,128,1.413,132,1.948,135,2.157,139,2.494,142,1.488,146,0.937,152,2.378,166,4.354,178,2.429,378,4.631,421,5.181,429,5.995,441,3.862,443,6.819,448,4.043,449,6.538,452,4.043,457,2.675,459,4.26,488,7.408,489,4.26,499,3.862,538,7.328,687,4.043,1760,5.714,1762,4.895,1763,8.499,1766,4.531,1770,4.895,1774,4.895,1775,5.447,1776,5.447,1777,5.447,1778,5.447,1779,5.447,1780,6.565,1781,5.447,1782,6.565,1783,5.447,1784,7.306]],["title/classes/Session.html",[99,0.245,397,4.088]],["body/classes/Session.html",[3,0.085,4,0.085,5,0.071,25,0.004,98,0.107,99,0.456,124,0.004,125,0.004,127,1.23,147,4.775,376,4.277,397,7.15,1785,7.776]],["title/injectables/SessionsService.html",[128,1.011,513,3.88]],["body/injectables/SessionsService.html",[3,0.086,4,0.086,5,0.072,25,0.004,73,0.258,98,0.086,99,0.368,124,0.004,125,0.004,128,1.776,130,2.638,146,1.347,513,6.816,1786,7.834]],["title/injectables/SocialAuthService.html",[128,1.011,1787,4.698]],["body/injectables/SocialAuthService.html",[3,0.086,4,0.086,5,0.072,25,0.004,73,0.258,98,0.086,99,0.368,124,0.004,125,0.004,128,1.776,130,2.638,146,1.347,1787,8.252,1788,7.834]],["title/classes/SocialPost.html",[99,0.245,314,2.466]],["body/classes/SocialPost.html",[1,2.519,3,0.031,4,0.031,5,0.026,19,1.05,20,0.955,22,0.313,25,0.005,26,0.822,36,1.213,42,0.716,64,1.901,66,1.732,73,0.23,83,2.199,89,2.553,93,2.622,97,1.841,98,0.109,99,0.457,100,1.633,102,0.864,113,1.213,124,0.002,125,0.002,127,0.446,162,1.962,199,2.595,200,1.33,201,3.305,202,2.645,203,2.595,204,1.357,205,2.904,206,2.698,207,1.357,208,1.235,213,2.163,218,2.256,224,2.121,231,1.172,232,1.034,233,2.44,234,1.066,235,1.192,236,1.192,237,2.961,238,3.235,239,3.755,240,2.595,241,3.617,242,2.961,243,1.357,244,1.357,245,4.131,246,3.145,247,1.33,248,1.357,249,1.33,250,1.357,251,1.33,252,1.357,253,1.33,254,1.357,255,1.33,256,1.33,257,1.33,258,1.33,259,2.645,260,1.33,261,1.33,262,1.33,263,2.121,264,1.305,265,1.235,266,1.357,267,2.698,268,1.357,269,1.172,270,1.357,271,1.134,272,0.864,273,3.298,274,1.28,275,1.357,276,1.357,277,1.357,278,1.357,279,1.357,280,2.08,281,1.357,282,2.121,283,1.357,284,1.305,285,1.78,286,1.357,287,1.357,288,1.116,289,1.357,290,1.357,291,1.357,292,2.163,293,1.305,294,3.554,295,1.305,296,1.357,297,1.305,298,1.305,299,1.357,300,2.121,301,1.357,302,2.121,303,1.357,304,1.172,305,1.257,306,1.33,307,1.357,308,1.357,309,1.357,310,1.357,311,1.357,312,1.33,313,1.33,314,2.121,315,1.33,316,1.357,317,1.357,318,1.28,319,1.357,320,1.305,321,1.357,322,1.33,323,1.357,324,1.33,325,1.357]],["title/classes/SocialPostDraft.html",[99,0.245,324,2.466]],["body/classes/SocialPostDraft.html",[1,2.517,3,0.031,4,0.031,5,0.026,19,1.047,20,0.953,22,0.312,25,0.005,26,0.821,36,1.211,42,0.714,64,1.897,66,1.73,73,0.23,83,2.196,89,2.55,93,2.619,97,1.839,98,0.109,99,0.457,100,1.643,102,0.861,113,1.21,124,0.002,125,0.002,127,0.445,162,1.959,199,2.59,200,1.326,201,3.303,202,2.641,203,2.59,204,1.353,205,2.9,206,2.694,207,1.353,208,1.231,213,2.159,218,2.252,224,2.116,231,1.169,232,1.031,233,2.437,234,1.063,235,1.189,236,1.189,237,2.956,238,3.23,239,3.752,240,2.59,241,3.613,242,2.956,243,1.353,244,1.353,245,4.128,246,3.142,247,1.326,248,1.353,249,1.326,250,1.353,251,1.326,252,1.353,253,1.326,254,1.353,255,1.326,256,1.326,257,1.326,258,1.326,259,2.641,260,1.326,261,1.326,262,1.326,263,2.116,264,1.301,265,1.231,266,1.353,267,2.694,268,1.353,269,1.169,270,1.353,271,1.131,272,0.861,273,3.293,274,1.277,275,1.353,276,1.353,277,1.353,278,1.353,279,1.353,280,2.076,281,1.353,282,2.116,283,1.353,284,1.301,285,1.777,286,1.353,287,1.353,288,1.113,289,1.353,290,1.353,291,1.353,292,2.159,293,1.301,294,3.551,295,1.301,296,1.353,297,1.301,298,1.301,299,1.353,300,2.116,301,1.353,302,2.116,303,1.353,304,1.169,305,1.254,306,1.326,307,1.353,308,1.353,309,1.353,310,1.353,311,1.353,312,1.326,313,1.326,314,1.326,315,1.326,316,1.353,317,1.353,318,1.277,319,1.353,320,1.301,321,1.353,322,1.326,323,1.353,324,2.116,325,2.159]],["title/entities/Stage.html",[0,1.76,561,2.622]],["body/entities/Stage.html",[0,2.409,2,2.543,3,0.058,4,0.058,5,0.049,7,0.461,8,1.321,17,4.579,20,1.724,22,1.11,25,0.005,26,0.986,27,2.351,30,0.973,43,4.022,46,4.072,65,3.349,66,2.156,73,0.3,77,3.841,80,1.754,83,2.252,84,3.349,89,3.016,90,3.596,98,0.058,99,0.248,100,0.898,101,3.444,102,2.487,124,0.003,125,0.003,162,1.885,395,3.148,457,2.595,559,3.753,560,6.189,561,3.59,562,4.464,577,3.465,1789,5.283,1790,5.283,1791,5.283,1792,5.283,1793,5.283,1794,5.283,1795,7.157,1796,5.283,1797,4.748,1798,4.748,1799,5.283,1800,5.283]],["title/classes/Stage-1.html",[99,0.206,126,1.735,561,2.197]],["body/classes/Stage-1.html",[3,0.069,4,0.069,5,0.057,7,0.544,8,1.473,22,1.066,25,0.004,26,0.656,30,0.996,42,2.027,66,1.546,73,0.205,83,2.921,98,0.102,99,0.413,100,1.357,124,0.003,125,0.003,127,0.987,154,1.544,162,2.319,209,3.018,210,2.764,211,2.844,216,3.737,226,2.832,227,3.329,228,2.731,229,2.731,230,2.731,231,2.594,457,3.921,557,4.629,558,4.877,559,4.617,560,4.245,561,4.005,562,4.843,563,4.629,1801,6.236]],["title/classes/Statement.html",[99,0.245,237,2.419]],["body/classes/Statement.html",[1,2.443,3,0.028,4,0.028,5,0.024,7,0.226,8,0.776,19,0.966,20,0.893,22,0.874,25,0.005,26,0.855,30,0.784,36,1.135,42,1.346,64,1.778,66,1.661,73,0.221,83,2.377,89,2.475,93,2.543,97,1.838,98,0.108,99,0.45,100,1.619,102,1.288,113,1.116,124,0.002,125,0.002,127,0.41,154,0.813,162,2.072,199,2.453,200,1.224,201,3.28,202,2.501,203,3.101,204,1.248,205,3.068,206,3.225,207,1.248,208,1.136,209,1.589,210,1.455,211,1.498,213,2.023,216,2.454,218,2.134,224,1.984,226,1.178,227,2.004,228,1.136,229,1.136,230,1.136,231,1.079,232,0.951,233,2.35,234,0.98,235,1.097,236,1.097,237,3.32,238,3.101,239,3.642,240,2.453,241,3.496,242,2.822,243,1.248,244,1.248,245,4.032,246,3.041,247,1.224,248,1.248,249,1.224,250,1.248,251,1.224,252,1.248,253,1.224,254,1.248,255,1.224,256,1.224,257,1.224,258,1.224,259,2.501,260,1.224,261,1.224,262,1.224,263,1.984,264,1.2,265,1.136,266,1.248,267,2.551,268,1.248,269,1.079,270,1.248,271,1.044,272,0.795,273,3.161,274,1.178,275,1.248,276,1.248,277,1.248,278,1.248,279,1.248,280,1.946,281,1.248,282,1.984,283,1.248,284,1.2,285,1.665,286,1.248,287,1.248,288,1.027,289,1.248,290,1.248,291,1.248,292,2.023,293,1.2,294,3.446,295,1.2,296,1.248,297,1.2,298,1.2,299,1.248,300,1.984,301,1.248,302,1.984,303,1.248,304,1.079,305,1.156,306,1.224,307,1.248,308,1.248,309,1.248,310,1.248,311,1.248,312,1.224,313,1.224,314,1.224,315,1.224,316,1.248,317,1.248,318,1.178,319,1.248,320,1.2,321,1.248,322,1.224,323,1.248,324,1.224,325,1.248,1802,2.593,1803,2.593,1804,2.593]],["title/modules/StrategyModule.html",[182,1.561,1805,4.088]],["body/modules/StrategyModule.html",[3,0.074,4,0.074,5,0.062,25,0.004,73,0.277,98,0.074,99,0.318,124,0.004,125,0.004,146,1.165,182,2.732,184,2.819,185,2.867,186,3.022,187,3.022,188,2.968,189,4.007,190,4.08,193,3.752,194,2.917,195,3.022,512,7.818,1805,7.951,1806,6.09,1807,6.09,1808,6.777,1809,6.777,1810,6.777]],["title/classes/SwaggerDocBuilder.html",[99,0.245,1811,4.698]],["body/classes/SwaggerDocBuilder.html",[3,0.057,4,0.057,5,0.048,7,0.451,9,1.284,20,1.1,22,0.785,25,0.005,30,0.895,73,0.284,82,1.744,98,0.057,99,0.243,124,0.003,125,0.003,127,0.819,132,1.883,135,2.051,139,1.768,142,2.196,146,0.891,150,5.906,152,1.906,178,2.31,288,2.051,304,3.342,429,4.476,458,4.654,460,3.673,461,4.309,466,4.807,477,3.844,524,3.283,910,3.844,1811,6.345,1812,9.029,1813,9.029,1814,5.179,1815,8.629,1816,8.629,1817,7.754,1818,5.179,1819,8.629,1820,5.179,1821,5.874,1822,5.179,1823,5.179,1824,5.179,1825,7.061,1826,5.179,1827,5.179,1828,5.179,1829,7.061,1830,5.179,1831,7.061,1832,5.179,1833,5.179,1834,7.061,1835,5.179,1836,7.061,1837,7.061,1838,5.179,1839,7.061,1840,5.179,1841,5.179,1842,7.061,1843,7.061,1844,5.179,1845,5.179,1846,5.179,1847,5.179,1848,5.179,1849,5.179,1850,5.179,1851,5.179,1852,5.179,1853,5.179,1854,4.654]],["title/classes/Tag.html",[99,0.245,1170,3.115]],["body/classes/Tag.html",[3,0.068,4,0.068,5,0.057,7,0.537,8,1.462,9,1.964,22,0.973,25,0.005,26,1.047,30,0.909,42,2.012,48,2.799,83,1.939,98,0.111,99,0.467,100,1.047,102,2.683,124,0.003,125,0.003,127,0.975,154,1.788,162,2.087,209,2.33,210,2.134,211,2.196,227,2.995,272,2.683,534,2.48,559,3.231,562,3.389,752,3.906,753,3.784,1087,3.389,1170,4.722,1350,4.37,1351,5.961,1855,6.163,1856,6.163,1857,6.163]],["title/classes/Tag-1.html",[99,0.206,126,1.735,1170,2.61]],["body/classes/Tag-1.html",[3,0.072,4,0.072,5,0.06,7,0.569,8,1.516,9,2.037,22,0.999,25,0.005,26,1.045,27,2.256,30,0.933,43,3.799,58,4.135,73,0.215,80,2.167,98,0.072,99,0.306,102,2.756,124,0.004,125,0.004,127,1.032,154,1.74,272,1.999,1032,4.627,1057,5.389,1170,4.897,1351,6.122,1858,6.525,1859,6.525,1860,6.525,1861,6.525,1862,6.525,1863,8.216]],["title/classes/Thread.html",[99,0.245,300,2.466]],["body/classes/Thread.html",[1,2.49,3,0.03,4,0.03,5,0.025,7,0.238,8,0.809,19,1.017,20,1.335,22,0.698,25,0.005,26,0.871,30,0.57,36,1.183,42,0.693,64,1.854,66,1.705,73,0.227,83,2.164,89,2.524,93,2.592,97,1.821,98,0.109,99,0.454,100,1.623,102,0.837,113,1.175,124,0.002,125,0.002,127,0.432,162,1.934,199,2.541,200,1.289,201,3.282,202,2.59,203,2.541,204,1.314,205,2.863,206,2.642,207,1.314,208,1.196,213,2.109,218,2.209,224,2.068,231,1.136,232,1.002,233,2.406,234,1.032,235,1.155,236,1.155,237,2.908,238,3.184,239,3.713,240,2.541,241,3.571,242,2.908,243,1.314,244,1.314,245,4.094,246,3.106,247,1.289,248,1.314,249,1.289,250,1.314,251,1.289,252,1.314,253,1.289,254,1.314,255,1.289,256,1.289,257,1.289,258,1.289,259,2.59,260,1.289,261,1.289,262,1.289,263,2.068,264,1.264,265,1.196,266,1.314,267,2.642,268,1.314,269,1.136,270,1.314,271,1.099,272,0.837,273,3.246,274,1.24,275,1.314,276,1.314,277,1.314,278,1.314,279,1.314,280,2.028,281,1.314,282,2.068,283,1.314,284,1.264,285,1.736,286,1.314,287,1.314,288,1.082,289,1.314,290,1.314,291,1.314,292,2.109,293,1.264,294,3.8,295,1.264,296,1.314,297,1.264,298,1.264,299,1.314,300,2.59,301,1.314,302,2.068,303,1.314,304,1.136,305,1.218,306,1.289,307,1.314,308,2.642,309,1.314,310,1.314,311,1.314,312,1.289,313,1.289,314,1.289,315,1.289,316,1.314,317,1.314,318,1.24,319,1.314,320,1.264,321,1.314,322,1.289,323,1.314,324,1.289,325,1.314,1864,2.731,1865,2.731,1866,2.731]],["title/classes/UpdateBandDto.html",[99,0.245,597,4.088]],["body/classes/UpdateBandDto.html",[3,0.083,4,0.083,5,0.069,25,0.004,73,0.296,82,2.543,98,0.083,99,0.355,100,1.527,124,0.004,125,0.004,127,1.195,234,2.856,581,3.251,588,5.607,597,7.028,983,6.788,1867,7.554,1868,8.987,1869,7.554]],["title/classes/UpdateEventDto.html",[99,0.245,1204,4.088]],["body/classes/UpdateEventDto.html",[3,0.083,4,0.083,5,0.069,25,0.004,73,0.296,82,2.543,98,0.083,99,0.355,100,1.527,124,0.004,125,0.004,127,1.195,234,2.856,581,3.251,984,5.607,986,6.788,1204,7.028,1870,7.554,1871,8.987,1872,7.554]],["title/classes/UpdateLocationDto.html",[99,0.245,1426,4.349]],["body/classes/UpdateLocationDto.html",[3,0.083,4,0.083,5,0.069,25,0.004,73,0.296,82,2.543,98,0.083,99,0.355,100,1.527,124,0.004,125,0.004,127,1.195,234,2.856,581,3.251,987,5.907,989,6.788,1426,7.476,1873,7.554,1874,8.987,1875,7.554]],["title/classes/UpdateMusicianDto.html",[99,0.245,1482,4.088]],["body/classes/UpdateMusicianDto.html",[3,0.083,4,0.083,5,0.069,25,0.004,73,0.296,82,2.543,98,0.083,99,0.355,100,1.527,124,0.004,125,0.004,127,1.195,234,2.856,581,3.251,990,5.607,992,6.788,1482,7.028,1876,7.554,1877,8.987,1878,7.554]],["title/classes/UpdateNetworkDto.html",[99,0.245,1518,4.088]],["body/classes/UpdateNetworkDto.html",[3,0.083,4,0.083,5,0.069,25,0.004,73,0.296,82,2.543,98,0.083,99,0.355,100,1.527,124,0.004,125,0.004,127,1.195,234,2.856,581,3.251,993,5.607,995,6.788,1518,7.028,1879,7.554,1880,8.987,1881,7.554]],["title/classes/UpdateOrganizerDto.html",[99,0.245,1644,4.088]],["body/classes/UpdateOrganizerDto.html",[3,0.083,4,0.083,5,0.069,25,0.004,73,0.296,82,2.543,98,0.083,99,0.355,100,1.527,124,0.004,125,0.004,127,1.195,234,2.856,581,3.251,996,5.607,998,6.788,1644,7.028,1882,7.554,1883,8.987,1884,7.554]],["title/classes/UpdateUserDto.html",[99,0.245,1885,3.707]],["body/classes/UpdateUserDto.html",[3,0.083,4,0.083,5,0.069,25,0.004,73,0.295,98,0.083,99,0.353,100,1.524,124,0.004,125,0.004,127,1.191,234,2.845,235,3.184,236,3.184,581,3.239,939,4.771,1000,5.886,1885,6.359,1886,7.527,1887,8.059,1888,6.764]],["title/classes/UpdateUserDto-1.html",[99,0.206,126,1.735,1885,3.105]],["body/classes/UpdateUserDto-1.html",[3,0.083,4,0.083,5,0.069,25,0.004,73,0.296,82,2.543,98,0.083,99,0.355,100,1.527,124,0.004,125,0.004,127,1.195,234,2.856,581,3.251,939,4.788,1000,5.907,1885,6.373,1887,8.076,1888,6.788,1889,7.554]],["title/classes/UpdateVenueDto.html",[99,0.245,1890,4.088]],["body/classes/UpdateVenueDto.html",[3,0.083,4,0.083,5,0.069,25,0.004,73,0.296,82,2.543,98,0.083,99,0.355,100,1.527,124,0.004,125,0.004,127,1.195,234,2.856,581,3.251,1012,5.607,1014,6.788,1890,7.028,1891,7.554,1892,8.987,1893,7.554]],["title/entities/User.html",[0,1.76,97,1.15]],["body/entities/User.html",[0,1.346,1,1.241,2,1.173,3,0.056,4,0.027,5,0.022,7,0.212,8,0.738,19,1.892,22,1.098,25,0.005,26,0.901,27,2.147,29,3.773,30,1.021,36,1.079,42,1.492,43,3.201,46,2.548,47,1.497,56,1.906,57,4.226,58,3.484,60,1.751,62,1.963,65,1.545,66,1.456,68,2.721,73,0.253,74,2.316,75,2.721,78,4.594,80,0.809,81,3.308,82,0.821,97,0.88,98,0.027,99,0.114,101,2.445,124,0.002,125,0.002,147,4.518,154,0.983,181,3.325,210,1.759,211,1.81,232,2.379,233,3.085,265,1.751,377,2.533,378,3.724,379,3.119,380,3.119,387,1.729,388,1.729,395,4.578,400,1.497,404,4.743,413,2.191,501,2.967,503,1.545,505,2.967,507,1.412,687,2.967,794,2.604,867,2.191,917,2.604,926,2.351,1006,1.599,1008,2.028,1009,2.028,1010,1.599,1032,2.834,1033,3.126,1057,2.621,1067,1.659,1121,5.613,1128,5.753,1131,5.954,1167,2.028,1168,2.028,1169,2.028,1894,2.437,1895,5.08,1896,5.08,1897,5.08,1898,5.08,1899,5.08,1900,5.08,1901,5.08,1902,5.08,1903,5.08,1904,5.08,1905,5.08,1906,5.08,1907,5.08,1908,5.08,1909,5.08,1910,5.08,1911,5.08,1912,2.437,1913,2.437,1914,2.437,1915,3.997,1916,3.997,1917,2.437,1918,3.997,1919,2.437,1920,2.437,1921,2.437,1922,2.437,1923,2.437,1924,2.437,1925,2.437,1926,2.437,1927,2.437,1928,2.437,1929,2.437,1930,2.437,1931,3.997,1932,3.997,1933,2.437,1934,3.997,1935,2.437,1936,2.437,1937,2.437,1938,2.437,1939,2.437,1940,2.437,1941,2.437,1942,2.437,1943,2.437,1944,2.437,1945,2.437,1946,2.437,1947,2.437,1948,2.437,1949,2.437,1950,2.437,1951,2.437,1952,2.437,1953,2.437,1954,2.191,1955,2.437,1956,5.08,1957,5.08,1958,5.08,1959,5.08,1960,5.08]],["title/entities/User-1.html",[0,1.474,97,0.964,126,1.735]],["body/entities/User-1.html",[0,2.745,2,3.102,3,0.071,4,0.071,5,0.059,7,0.562,8,1.505,19,3.33,22,1.044,25,0.005,26,0.989,27,2.358,30,0.975,36,2.201,43,4.047,73,0.212,80,2.14,97,1.794,98,0.071,99,0.303,124,0.003,125,0.003,154,1.73,162,2.147,379,5.491,380,5.491,507,5.181,1961,6.445,1962,6.445,1963,6.445,1964,6.445,1965,6.445]],["title/classes/UserPreferences.html",[99,0.245,1591,3.88]],["body/classes/UserPreferences.html",[3,0.079,4,0.058,5,0.049,7,0.464,8,1.328,22,1.085,25,0.005,26,1.042,30,0.975,36,2.199,40,2.857,42,1.352,60,3.822,66,1.319,97,1.171,98,0.058,99,0.25,124,0.003,125,0.003,127,0.842,154,1.03,430,3.775,534,3.279,792,5.344,794,4.673,866,6.478,1370,5.003,1545,3.624,1553,5.101,1554,5.101,1556,3.951,1578,5.339,1579,3.951,1580,5.339,1581,5.339,1582,6.048,1583,5.101,1584,5.339,1585,5.339,1586,6.766,1587,4.163,1588,6.766,1589,4.163,1590,4.163,1591,5.339,1592,3.951,1593,4.163,1594,6.372,1595,5.626,1966,5.323,1967,6.465,1968,5.323,1969,5.323,1970,5.323,1971,5.323,1972,5.323]],["title/entities/UserSession.html",[0,1.76,408,4.088]],["body/entities/UserSession.html",[0,2.688,1,2.979,2,3.001,3,0.069,4,0.069,5,0.057,7,0.544,8,1.473,22,0.978,25,0.005,26,0.84,27,2.209,30,0.914,42,2.027,43,3.737,58,3.497,73,0.29,77,4.285,80,2.071,98,0.069,99,0.293,100,1.06,124,0.003,125,0.003,147,5.7,406,5.434,407,4.629,408,6.243,577,4.09,1017,6.887,1032,4.422,1053,4.877,1057,4.09,1973,6.236,1974,8.806,1975,7.983,1976,6.236,1977,6.236,1978,6.236]],["title/classes/UsernameLoginDto.html",[99,0.245,1069,3.558]],["body/classes/UsernameLoginDto.html",[3,0.056,4,0.056,5,0.047,7,0.448,8,1.297,22,1.105,25,0.005,26,1.001,27,2.008,29,4.567,30,0.83,66,1.274,73,0.231,81,4.087,82,1.731,98,0.099,99,0.404,100,1.36,124,0.003,125,0.003,127,0.813,216,2.069,272,1.575,395,4.187,457,3.931,534,2.069,794,4.103,917,4.617,919,3.5,926,4.168,938,4.783,945,5.676,958,4.982,959,4.982,1001,5.676,1006,3.372,1010,4.608,1056,4.187,1061,4.783,1062,3.5,1063,6.387,1066,4.62,1067,3.5,1068,6.1,1069,5.448,1070,4.783,1071,3.372,1072,3.372,1979,5.141,1980,5.141]],["title/controllers/UsersController.html",[354,3.707,414,1.862]],["body/controllers/UsersController.html",[3,0.077,4,0.077,5,0.065,7,0.614,25,0.005,26,0.907,27,1.768,30,0.731,73,0.284,98,0.077,99,0.331,124,0.004,125,0.004,132,2.298,142,1.926,146,1.212,151,2.982,152,1.903,178,3.143,353,2.548,354,6.112,414,3.071,800,4.765,1981,7.049,1982,7.049,1983,6.338,1984,6.334,1985,7.049]],["title/controllers/UsersController-1.html",[126,1.735,354,3.105,414,1.56]],["body/controllers/UsersController-1.html",[3,0.055,4,0.055,5,0.046,7,0.434,9,2.104,20,1.804,22,0.943,25,0.005,26,1.073,27,2.235,30,0.924,73,0.164,97,1.868,98,0.055,99,0.234,124,0.003,125,0.003,132,1.833,135,1.974,139,2.898,142,2.434,146,0.857,152,2.404,154,1.946,165,3.06,201,2.805,305,3.067,353,1.801,354,4.877,414,1.775,437,3.392,581,2.96,582,4.259,583,3.45,584,3.691,585,3.45,590,2.675,591,4.681,593,2.675,594,4.681,596,2.675,598,4.681,600,4.681,601,3.269,602,3.392,603,2.97,605,3.392,606,3.392,607,3.534,608,4.877,609,3.392,610,4.877,611,3.392,612,2.741,613,3.392,614,3.534,939,4.991,1885,6.02,1986,4.983,1987,4.478,1988,4.983,1989,4.983,1990,4.983,1991,4.983,1992,4.983,1993,4.983]],["title/modules/UsersModule.html",[182,1.561,338,3.88]],["body/modules/UsersModule.html",[3,0.065,4,0.065,5,0.055,20,1.265,25,0.005,73,0.325,96,4.063,97,1.705,98,0.065,99,0.279,124,0.003,125,0.003,145,3.774,146,1.024,182,2.572,184,2.477,185,2.519,186,2.655,187,2.655,188,2.608,189,3.773,190,2.655,193,3.455,194,2.562,195,2.655,338,7.197,341,3.122,353,2.801,354,6.108,374,4.911,382,4.758,383,4.911,384,4.911,410,4.222,426,3.548,516,4.42,519,4.657,520,6.06,523,5.082,524,3.774,530,4.657,531,4.657,1983,6.601,1984,5.351,1994,5.351,1995,5.351,1996,5.954,1997,5.954,1998,5.954]],["title/injectables/UsersService.html",[128,1.011,1983,3.558]],["body/injectables/UsersService.html",[3,0.04,4,0.04,5,0.033,7,0.314,9,2.119,20,1.816,22,0.95,25,0.005,26,1.025,30,0.952,58,2.867,73,0.29,80,1.195,96,1.886,97,1.605,98,0.04,99,0.169,124,0.002,125,0.002,128,1.051,130,1.211,132,1.449,133,4.221,135,2.152,137,7.179,139,2.918,142,2.461,144,2.993,145,2.28,146,0.619,150,4.623,151,1.522,152,2.478,154,1.514,166,5.754,232,1.32,378,2.28,382,2.209,410,2.551,411,2.814,426,2.144,429,4.149,471,4.249,523,2.36,524,2.28,581,2.338,582,3.659,583,2.725,584,2.916,585,2.725,590,2.916,593,2.916,596,2.916,603,2.144,627,2.209,687,2.67,840,4.52,904,2.814,905,5.704,907,4.249,917,1.844,926,3.375,935,2.814,939,5.218,940,2.814,970,4.882,975,3.233,1571,2.814,1885,6.24,1954,3.233,1983,3.698,1987,4.882,1999,3.598,2000,7.293,2001,7.293,2002,5.433,2003,6.546,2004,6.546,2005,6.546,2006,3.598,2007,3.598,2008,3.598,2009,3.598,2010,3.598,2011,3.598,2012,5.433,2013,3.598,2014,5.433,2015,3.598,2016,3.598,2017,3.598,2018,3.598,2019,3.598,2020,3.598,2021,3.598,2022,3.598,2023,3.598,2024,3.598,2025,3.598,2026,3.598,2027,3.598,2028,3.598,2029,5.433,2030,3.598,2031,3.598,2032,3.598]],["title/injectables/UsersService-1.html",[126,1.735,128,0.847,1983,2.981]],["body/injectables/UsersService-1.html",[3,0.06,4,0.06,5,0.05,7,0.474,8,1.346,9,1.347,20,1.154,22,0.915,25,0.005,26,0.966,30,0.854,73,0.179,97,1.196,98,0.08,99,0.255,101,2.615,124,0.003,125,0.003,126,2.889,128,1.411,130,1.829,132,1.944,133,4.845,139,1.855,142,1.993,146,0.934,150,5.218,151,3.483,152,1.969,162,1.431,166,5.244,305,3.671,582,4.414,583,3.659,917,4.706,926,4.468,954,4.882,1173,3.698,1258,6.067,1370,5.636,1983,4.965,2033,4.882,2034,5.433,2035,7.293,2036,5.433,2037,7.293,2038,7.293,2039,7.293,2040,7.293,2041,5.433,2042,5.433,2043,5.433]],["title/entities/Venue.html",[0,1.76,89,1.645]],["body/entities/Venue.html",[0,1.262,1,1.931,2,1.085,3,0.025,4,0.025,5,0.034,7,0.197,8,0.692,9,2.449,20,0.796,22,0.99,25,0.005,26,1.003,27,2.097,30,0.868,33,1.479,36,2.405,40,1.21,43,3.666,46,3.119,65,1.429,66,1.389,73,0.234,74,2.172,79,2.172,80,0.749,81,0.938,82,0.759,86,1.535,89,2.865,98,0.025,99,0.106,100,0.383,101,1.804,102,2.281,119,2.301,124,0.002,125,0.002,132,0.601,154,0.93,162,2.035,269,0.938,282,1.768,285,0.893,304,0.938,318,3.51,392,1.674,395,1.344,400,1.385,404,2.551,457,1.108,477,1.674,503,2.376,507,1.307,557,2.782,559,1.965,561,3.119,562,3.42,563,1.674,572,1.764,663,1.922,667,3.814,675,3.814,679,3.274,680,3.274,723,2.931,753,1.385,760,4.863,775,1.385,776,4.001,777,4.001,778,4.001,779,4.001,792,2.458,1135,1.674,1198,2.931,1366,3.118,1397,3.118,1580,3.57,1581,2.782,1583,1.599,1626,2.027,1797,2.027,1798,2.027,2044,2.255,2045,2.255,2046,2.255,2047,2.255,2048,2.255,2049,2.255,2050,2.255,2051,2.255,2052,2.255,2053,2.255,2054,2.255,2055,2.255,2056,3.748,2057,2.255,2058,2.255,2059,2.255,2060,2.255,2061,2.255,2062,2.255,2063,2.027,2064,2.255,2065,6.218,2066,2.255,2067,2.255,2068,3.748,2069,7.445,2070,7.445,2071,2.255,2072,2.255,2073,2.027,2074,3.368,2075,2.255,2076,3.748,2077,3.748,2078,3.748,2079,2.255,2080,2.255,2081,3.368,2082,3.748,2083,3.748,2084,3.748,2085,3.748,2086,3.748,2087,2.255,2088,6.218,2089,4.809,2090,3.748,2091,4.809,2092,2.255,2093,2.255,2094,2.255,2095,2.255,2096,5.603,2097,2.027,2098,5.173,2099,2.255,2100,2.255,2101,2.255,2102,2.255,2103,2.255,2104,2.255,2105,2.255,2106,2.255,2107,2.255,2108,2.255,2109,2.255,2110,2.255,2111,3.748,2112,2.255,2113,6.709,2114,3.748,2115,2.255,2116,2.255,2117,2.255,2118,3.748,2119,3.748,2120,3.748,2121,2.027,2122,2.027,2123,2.255,2124,2.255,2125,2.255,2126,3.748,2127,2.255,2128,2.255,2129,2.255,2130,2.255,2131,2.255,2132,2.255,2133,3.748,2134,2.255,2135,3.748,2136,4.809,2137,2.255,2138,5.603,2139,2.255,2140,4.809,2141,4.809,2142,3.748,2143,5.603,2144,2.255,2145,2.255,2146,3.748,2147,4.809,2148,2.255,2149,2.027,2150,2.255,2151,6.218,2152,6.03,2153,2.255,2154,2.255,2155,2.255,2156,4.809,2157,3.748,2158,2.255,2159,2.255,2160,3.748,2161,2.255,2162,2.255,2163,2.255,2164,2.027,2165,2.255,2166,3.748,2167,2.255,2168,2.255]],["title/classes/VenueAccount.html",[99,0.245,119,3.21]],["body/classes/VenueAccount.html",[0,1.759,1,2.812,3,0.057,4,0.038,5,0.031,6,2.423,7,0.298,8,0.964,10,2.241,11,2.241,12,2.241,13,2.241,14,2.241,15,2.241,16,1.879,17,1.928,18,2.241,19,1.272,20,1.347,21,2.241,22,0.85,23,2.241,24,2.241,25,0.005,26,0.934,27,1.311,29,3.759,30,0.542,32,2.423,33,3.427,34,3.705,36,1.917,40,1.834,42,0.868,43,3.943,46,4.879,48,2.881,52,2.423,53,2.423,58,2.288,60,1.497,62,1.678,64,2.683,66,1.295,68,2.326,70,2.166,71,2.098,73,0.298,74,4.434,75,3.556,76,2.036,77,4.332,78,4.332,79,3.027,80,1.135,81,4.012,82,1.15,83,1.644,84,2.166,85,2.423,86,2.326,87,3.611,88,2.326,89,2.724,90,2.326,91,3.611,92,2.326,93,2.473,94,2.423,95,2.166,96,4.013,97,1.776,98,0.084,99,0.359,100,1.301,101,1.645,102,2.176,103,2.423,104,2.423,105,2.241,106,2.241,107,2.241,108,2.241,109,2.241,110,2.423,111,2.098,112,5.427,113,3.473,114,2.423,115,2.423,116,2.166,117,2.423,118,2.423,119,3.208,120,3.705,121,2.423,122,2.098,123,2.423,124,0.002,125,0.002,127,0.541,400,2.098,577,2.241,2169,3.417,2170,3.417]],["title/classes/VenueKeyword.html",[99,0.245,753,3.21]],["body/classes/VenueKeyword.html",[3,0.073,4,0.073,5,0.061,25,0.005,26,1.001,42,2.115,48,3.029,83,2.098,98,0.113,99,0.476,100,1.133,102,2.044,124,0.004,125,0.004,127,1.055,154,1.611,162,2.194,209,2.521,210,2.309,211,2.376,227,3.149,272,2.783,534,2.684,559,3.497,562,3.668,752,4.228,753,5.115,1087,3.668,1170,3.975,1350,4.73,1351,4.54]],["title/classes/VenueReview.html",[99,0.245,249,2.466]],["body/classes/VenueReview.html",[1,2.359,3,0.026,4,0.026,5,0.022,7,0.207,8,0.721,19,0.883,20,0.83,22,1.023,25,0.005,26,0.828,30,0.924,36,1.055,42,1.265,64,1.653,66,1.584,73,0.211,83,2.164,89,2.615,93,2.455,97,1.785,98,0.107,99,0.443,100,1.592,101,1.141,102,0.727,113,1.021,124,0.002,125,0.002,127,0.375,154,0.756,162,2.189,199,2.307,200,1.119,201,3.386,202,2.352,203,2.958,204,2.399,205,2.963,206,3.076,207,2.399,208,2.183,209,1.477,210,1.353,211,1.392,213,1.881,216,3.535,217,1.374,218,2.326,219,1.374,220,1.374,221,1.374,222,1.374,223,1.374,224,2.352,225,1.374,226,1.077,227,1.884,228,1.039,229,1.039,230,1.039,231,0.986,232,0.87,233,2.253,234,0.897,235,1.003,236,1.003,237,2.675,238,3.366,239,3.753,240,2.307,241,3.366,242,2.675,243,2.399,244,2.399,245,4.145,246,2.927,247,1.119,248,1.141,249,1.844,250,1.881,251,1.119,252,1.141,253,1.119,254,1.141,255,1.119,256,1.119,257,1.119,258,1.119,259,2.352,260,1.119,261,1.119,262,1.119,263,1.844,264,1.098,265,1.039,266,1.141,267,2.399,268,1.141,269,0.986,270,1.141,271,0.955,272,0.727,273,3.016,274,1.077,275,1.141,276,1.141,277,1.141,278,1.141,279,1.141,280,1.809,281,1.141,282,1.844,283,1.141,284,1.098,285,1.548,286,1.141,287,1.141,288,0.939,289,1.141,290,1.141,291,1.141,292,1.881,293,1.098,294,3.328,295,1.098,296,1.141,297,1.098,298,1.098,299,1.141,300,1.844,301,1.141,302,1.844,303,1.141,304,0.986,305,1.058,306,1.119,307,1.141,308,1.141,309,1.141,310,1.141,311,1.141,312,1.119,313,1.119,314,1.119,315,1.119,316,1.141,317,1.141,318,1.077,319,1.141,320,1.098,321,1.141,322,1.119,323,1.141,324,1.119,325,1.141,1173,1.615,1175,1.76,1176,1.76,2171,2.372,2172,2.372]],["title/classes/VenueUser.html",[99,0.245,383,3.313]],["body/classes/VenueUser.html",[3,0.089,4,0.071,5,0.059,19,2.393,25,0.005,26,0.94,36,1.734,42,2.066,60,2.814,62,3.156,66,1.593,73,0.212,89,2.022,93,2.076,96,3.369,97,1.414,98,0.11,99,0.464,124,0.003,125,0.003,127,1.017,154,1.243,210,2.225,211,2.289,232,2.985,246,2.586,304,2.673,374,4.073,375,4.557,376,5.163,377,4.073,378,4.073,379,3.945,380,3.945,381,4.557,382,3.945,383,5.158,384,4.073]],["title/classes/VenueUser-1.html",[99,0.206,126,1.735,383,2.776]],["body/classes/VenueUser-1.html",[1,2.596,3,0.074,4,0.074,5,0.062,7,0.585,8,1.543,22,0.746,25,0.005,27,1.684,30,0.696,46,4.57,73,0.314,76,4,80,2.229,97,1.84,98,0.074,99,0.315,100,1.141,119,5.135,124,0.004,125,0.004,127,1.062,232,2.462,383,5.301,386,4.569,387,4.76,388,4.76,392,4.982,404,5.693,1321,5.249,1633,7.579,1634,6.957,2173,6.712,2174,6.712,2175,6.712]],["title/controllers/VenuesController.html",[357,4.088,414,1.862]],["body/controllers/VenuesController.html",[3,0.055,4,0.055,5,0.046,7,0.434,9,2.104,20,1.804,22,0.943,25,0.005,26,1.073,27,2.235,30,0.924,73,0.164,89,2.671,98,0.055,99,0.234,124,0.003,125,0.003,132,1.833,135,1.974,139,2.898,142,2.434,146,0.857,152,2.404,154,1.946,165,3.06,201,2.805,353,1.801,357,5.378,414,1.775,437,3.392,581,2.96,582,4.259,583,3.45,584,3.691,585,3.45,590,2.675,591,4.681,593,2.675,594,4.681,596,2.675,598,4.681,600,4.681,601,3.269,602,3.392,603,2.97,605,3.392,606,3.392,607,3.534,608,4.877,609,3.392,610,4.877,611,3.392,612,2.741,613,3.392,614,3.534,1012,5.845,1890,6.64,2176,4.983,2177,5.721,2178,4.478,2179,4.983,2180,4.983,2181,4.983,2182,4.983,2183,4.983,2184,4.983]],["title/modules/VenuesModule.html",[182,1.561,339,3.88]],["body/modules/VenuesModule.html",[3,0.07,4,0.07,5,0.059,25,0.005,48,2.91,73,0.326,89,2.555,98,0.07,99,0.301,124,0.003,125,0.003,145,4.061,146,1.102,182,2.662,184,2.665,185,2.71,186,2.857,187,2.857,188,2.806,189,3.906,190,2.857,193,3.622,194,2.757,195,2.857,339,7.338,341,3.359,353,2.936,357,6.974,516,4.755,561,4.074,2185,5.757,2186,5.757,2187,7.732,2188,6.406,2189,6.406,2190,6.406,2191,6.406,2192,6.406,2193,6.406]],["title/injectables/VenuesService.html",[128,1.011,2187,4.088]],["body/injectables/VenuesService.html",[3,0.058,4,0.058,5,0.048,7,0.457,9,2.15,20,1.842,22,0.964,25,0.005,26,0.954,30,0.941,73,0.235,89,2.729,98,0.058,99,0.246,124,0.003,125,0.003,128,1.377,130,1.765,132,1.898,139,2.961,142,2.614,146,0.902,152,2.448,154,1.809,162,2.599,288,2.077,581,3.064,582,4.351,583,3.572,584,3.822,585,3.572,590,3.822,593,3.822,596,3.822,612,2.884,627,3.22,628,6.173,629,3.57,630,3.57,1012,6.731,1890,7.482,2177,4.362,2178,6.399,2187,5.569,2194,5.244,2195,5.244,2196,5.244,2197,5.244,2198,5.244,2199,5.244,2200,5.244,2201,5.244]],["title/classes/VersionedResource.html",[83,1.645,99,0.245]],["body/classes/VersionedResource.html",[3,0.065,4,0.065,5,0.055,7,0.518,8,1.427,22,1.013,25,0.005,26,0.994,30,0.946,42,2.314,48,2.697,83,2.433,98,0.11,99,0.463,100,1.314,102,1.819,124,0.003,125,0.003,127,0.939,154,1.763,162,2.265,209,3.252,210,2.978,211,3.065,216,3.462,227,3.663,228,2.601,229,2.601,230,2.601,272,2.636,534,2.39,559,3.113,562,3.265,752,3.763,753,3.646,1087,3.265,1170,3.538,1350,4.21,1351,4.042,2202,5.937]],["title/classes/VersionedResource-1.html",[83,1.378,99,0.206,126,1.735]],["body/classes/VersionedResource-1.html",[3,0.061,4,0.061,5,0.051,7,0.487,8,1.372,22,0.989,25,0.005,26,0.879,27,1.403,29,4.103,30,0.924,42,2.26,43,2.992,58,2.449,73,0.275,80,1.857,81,3.963,82,1.882,83,2.339,98,0.082,99,0.349,100,1.263,102,2.559,124,0.003,125,0.003,127,0.885,154,1.616,162,1.958,209,3.157,210,3.082,211,3.171,216,3.362,227,3.78,228,2.449,229,2.449,230,2.449,272,2.278,501,5.518,503,3.544,505,5.518,507,3.24,1057,4.876,1557,4.651,1571,4.373,1744,5.025,1748,5.025,1749,6.681,1752,5.025,1753,5.025,1757,5.025,1758,6.681,2203,5.591,2204,5.591]],["title/guards/WebsocketGuard.html",[439,3.88,2205,4.698]],["body/guards/WebsocketGuard.html",[3,0.05,4,0.05,5,0.042,7,0.397,9,1.859,20,1.593,22,0.833,25,0.005,30,0.778,58,1.994,73,0.269,98,0.05,99,0.214,124,0.003,125,0.003,128,1.249,132,1.721,133,4.588,135,1.803,139,2.561,142,1.764,143,2.796,146,0.783,150,4.754,151,1.926,152,2.025,166,3.847,178,2.03,288,2.557,318,2.068,421,3.229,429,4.754,441,3.229,443,6.058,445,4.092,446,7.445,448,4.792,449,6.058,452,5.567,454,5.049,455,3.38,457,2.236,460,6.346,461,3.788,463,5.371,464,4.092,465,4.092,466,3.099,467,4.092,468,4.092,469,5.353,470,4.092,471,5.049,472,4.092,473,5.049,474,4.092,475,4.092,476,4.092,477,3.38,478,4.092,479,4.092,480,4.092,481,4.092,482,4.092,483,3.788,484,4.092,1220,6.24,1228,3.561,1545,3.099,2205,5.802,2206,4.553,2207,6.456,2208,4.553,2209,4.553,2210,6.456,2211,8.616,2212,4.553,2213,4.553,2214,4.553,2215,4.092,2216,4.092,2217,4.553,2218,4.553,2219,4.553,2220,4.553,2221,4.553,2222,4.553,2223,4.553,2224,4.553]],["title/modules/WebsocketModule.html",[182,1.561,348,3.88]],["body/modules/WebsocketModule.html",[3,0.073,4,0.073,5,0.061,25,0.004,73,0.273,98,0.073,99,0.311,124,0.004,125,0.004,146,1.14,182,2.704,183,7.402,184,2.757,185,2.804,186,2.956,187,2.956,188,2.903,189,2.903,190,2.956,193,3.7,194,2.852,195,2.956,332,7.071,341,4.351,348,7.713,1458,7.402,2225,5.956,2226,6.628,2227,6.628,2228,5.956]],["title/changelog.html",[2229,3.105,2230,3.105,2231,4.379]],["body/changelog.html",[25,0.004,124,0.004,125,0.004]],["title/contributing.html",[2229,3.105,2230,3.105,2232,3.935]],["body/contributing.html",[25,0.004,124,0.004,125,0.004]],["title/dependencies.html",[185,2.656,2233,3.643]],["body/dependencies.html",[25,0.005,60,2.623,80,1.988,82,2.016,124,0.003,125,0.003,145,3.795,146,1.03,170,4.683,185,2.533,235,2.533,236,2.533,426,3.569,455,4.445,456,5.381,489,4.683,518,3.677,823,4.683,933,4.982,951,4.076,1056,4.635,1228,6.082,1365,6.731,1366,4.982,1376,6.989,1389,5.381,1397,4.982,1408,5.381,1766,4.982,2234,8.637,2235,5.988,2236,5.988,2237,8.637,2238,5.988,2239,7.777,2240,5.988,2241,5.988,2242,5.988,2243,5.988,2244,5.988,2245,5.988,2246,5.988,2247,5.988,2248,5.988,2249,5.988,2250,5.988,2251,5.988,2252,5.988,2253,5.988,2254,5.988,2255,5.988,2256,5.988,2257,5.988,2258,5.988,2259,5.988,2260,5.988,2261,5.988,2262,5.988,2263,5.988]],["title/miscellaneous/enumerations.html",[2264,3.105,2265,5.643]],["body/miscellaneous/enumerations.html",[7,0.294,25,0.005,64,2.985,87,2.969,89,2.93,91,2.969,93,2.787,124,0.002,125,0.002,199,2.394,200,1.592,201,2.514,202,2.441,224,2.441,232,2.588,233,1.105,237,1.561,238,1.561,239,2.394,240,1.561,241,1.561,242,2.394,245,2.441,246,3.062,255,1.592,256,1.592,257,1.592,258,1.592,259,2.441,260,1.592,261,1.592,262,1.592,263,2.441,285,2.492,304,2.617,375,2.392,381,4.462,466,3.522,558,2.638,560,5.466,561,3.156,632,2.071,634,3.176,635,2.071,636,2.071,637,2.071,638,2.071,639,2.071,640,2.071,641,2.071,642,2.071,643,2.071,730,2.806,760,5.518,761,5.235,762,5.235,763,5.235,764,5.235,765,5.235,766,5.235,767,5.235,768,5.235,769,5.235,770,6.68,771,5.235,772,5.235,773,5.235,774,5.235,794,4.116,917,2.652,926,3.265,938,3.522,1015,2.638,1027,4.046,1040,4.046,1048,4.046,1054,3.84,1055,3.84,1056,4.205,1062,2.296,1073,2.638,1107,4.046,1108,2.638,1109,2.638,1110,2.638,1111,2.638,1112,5.237,1113,4.921,1114,4.921,1115,4.921,1116,4.921,1117,4.921,1173,7.213,1542,3.031,1550,3.522,1553,3.668,1554,3.668,1555,4.649,1579,2.504,1582,3.84,1583,3.668,1584,3.84,1585,3.84,2264,2.392,2265,3.031,2266,3.373,2267,3.373,2268,8.029,2269,7.609,2270,6.292,2271,5.173,2272,3.373,2273,5.173,2274,3.373,2275,3.031,2276,3.373,2277,3.373,2278,5.173,2279,3.373,2280,3.373,2281,3.373,2282,3.373,2283,5.173,2284,3.373,2285,3.373,2286,3.373,2287,3.373,2288,3.373,2289,3.373,2290,3.373,2291,3.373]],["title/miscellaneous/functions.html",[2264,3.105,2292,5.643]],["body/miscellaneous/functions.html",[7,0.404,9,2.341,20,2.007,22,0.964,25,0.004,101,3.645,124,0.003,125,0.003,139,3.224,154,1.264,188,4.723,377,4.143,452,3.439,486,4.164,490,4.164,535,5.437,537,4.164,538,3.854,548,4.164,582,3.279,583,3.279,585,3.279,1173,5.155,1269,5.437,1270,5.437,1271,5.874,1273,6.68,1276,7.039,1279,5.437,1280,5.874,1520,5.874,1663,5.437,1664,4.164,1774,4.164,1780,4.164,1782,5.874,2097,5.874,2264,3.285,2292,4.164,2293,4.633,2294,9,2295,8.748,2296,6.536,2297,6.536,2298,4.633,2299,4.633,2300,6.536,2301,4.633,2302,4.633,2303,6.536,2304,4.633,2305,4.633,2306,4.633,2307,4.633,2308,4.633,2309,4.633,2310,4.633,2311,4.633,2312,4.633,2313,4.633,2314,4.633,2315,4.633,2316,4.633,2317,4.633,2318,4.633,2319,4.633,2320,4.633,2321,4.633,2322,4.633,2323,4.633,2324,4.633,2325,4.633,2326,4.633,2327,4.633,2328,4.633,2329,4.633]],["title/index.html",[7,0.382,2229,3.105,2230,3.105]],["body/index.html",[5,0.045,25,0.004,29,3.82,30,0.505,97,0.686,124,0.002,125,0.002,134,4.05,137,4.683,185,1.319,205,1.216,209,1.179,233,1.022,264,3.132,269,2.025,271,1.959,284,2.253,293,3.132,295,1.443,320,1.443,346,4.982,347,3.614,432,2.439,457,1.532,483,2.595,494,2.803,495,2.803,561,1.565,581,1.342,606,2.123,612,2.678,705,3.452,1074,1.977,1198,2.439,1565,2.803,1817,2.803,1821,2.595,1854,5.382,2073,2.803,2081,6.081,2098,2.595,2122,4.375,2149,6.989,2177,2.595,2215,4.375,2228,5.382,2229,2.212,2230,2.212,2232,2.803,2233,2.595,2330,6.595,2331,6.993,2332,5.382,2333,6.595,2334,7.938,2335,6.767,2336,6.767,2337,4.869,2338,5.382,2339,6.767,2340,4.869,2341,7.762,2342,3.119,2343,3.119,2344,3.119,2345,3.119,2346,3.119,2347,3.119,2348,3.119,2349,3.119,2350,3.119,2351,3.119,2352,3.119,2353,3.119,2354,3.119,2355,3.119,2356,5.382,2357,3.119,2358,3.119,2359,3.119,2360,3.119,2361,3.119,2362,5.988,2363,3.119,2364,3.119,2365,2.595,2366,3.119,2367,3.119,2368,4.375,2369,6.081,2370,3.119,2371,4.375,2372,4.982,2373,3.119,2374,3.119,2375,2.803,2376,4.375,2377,3.119,2378,4.869,2379,3.119,2380,3.119,2381,3.119,2382,3.119,2383,5.988,2384,4.869,2385,4.375,2386,3.119,2387,3.119,2388,3.119,2389,2.803,2390,4.375,2391,3.119,2392,3.119,2393,4.375,2394,3.119,2395,3.119,2396,3.119,2397,3.119,2398,3.119,2399,3.119,2400,3.119,2401,3.119,2402,3.119,2403,4.869,2404,3.119,2405,3.119,2406,5.382,2407,4.375,2408,3.119,2409,4.869,2410,5.382,2411,3.119,2412,3.119,2413,3.119,2414,4.869,2415,3.119,2416,4.869,2417,3.119,2418,7.339,2419,3.119,2420,8.405,2421,8.405,2422,4.375,2423,3.119,2424,3.119,2425,3.119,2426,3.119,2427,6.767,2428,4.869,2429,3.119,2430,3.119,2431,3.119,2432,3.119,2433,4.869,2434,4.869,2435,3.119,2436,3.119,2437,3.119,2438,3.119,2439,3.119,2440,3.119,2441,4.869,2442,4.869,2443,3.119,2444,3.119,2445,3.119,2446,3.119,2447,3.119,2448,5.988,2449,3.119,2450,3.119,2451,4.869,2452,3.119,2453,2.803,2454,2.803,2455,3.119,2456,4.869,2457,3.119,2458,4.869,2459,3.119,2460,3.119,2461,3.119,2462,3.119,2463,3.119,2464,8.405,2465,3.119,2466,3.119,2467,3.119,2468,4.869,2469,2.803,2470,3.119,2471,6.989,2472,3.119,2473,3.119,2474,4.869,2475,3.119,2476,6.47,2477,3.119,2478,3.119,2479,3.119,2480,3.119,2481,4.869,2482,2.803,2483,2.803,2484,3.119,2485,4.375,2486,4.375,2487,4.375,2488,4.869,2489,4.869,2490,3.119,2491,3.119,2492,2.803,2493,3.119,2494,3.119,2495,3.119,2496,3.119,2497,4.375,2498,3.119,2499,3.119,2500,3.119,2501,3.119,2502,3.119,2503,3.119,2504,3.119,2505,4.375,2506,3.119,2507,3.119,2508,3.119,2509,3.119,2510,3.119,2511,3.119,2512,3.119,2513,3.119,2514,3.119,2515,2.803,2516,3.119,2517,3.119,2518,3.119,2519,3.119,2520,3.119,2521,3.119,2522,3.119,2523,4.05,2524,3.119,2525,3.119,2526,3.119]],["title/license.html",[2229,3.105,2230,3.105,2523,3.643]],["body/license.html",[25,0.004,124,0.004,125,0.004]],["title/modules.html",[184,2.955]],["body/modules.html",[25,0.003,124,0.003,125,0.003,183,3.682,184,2.063,326,3.879,329,5.83,330,3.682,331,5.57,332,5.57,333,5.088,334,3.682,335,3.682,336,3.682,337,3.682,338,5.088,339,3.682,348,3.682,349,3.879,361,3.682,805,3.879,888,3.879,1331,3.879,1348,4.126,1441,5.361,1458,5.088,1607,3.879,1693,3.879,1805,3.879,2152,7.614,2527,10.666,2528,9.585,2529,10.666,2530,10.712,2531,8.473]],["title/overview.html",[2365,5.911]],["body/overview.html",[2,1.598,25,0.005,124,0.002,125,0.002,127,0.525,129,4.624,130,1.118,159,4.624,182,0.991,183,5.608,184,1.381,185,1.404,186,1.481,187,1.481,188,1.454,189,1.454,190,1.481,191,2.984,192,2.984,193,2.279,194,1.429,195,1.481,326,7.903,327,2.984,328,2.984,329,7.285,330,5.608,331,5.658,332,6.373,333,6.17,334,5.608,335,5.608,336,5.608,337,5.608,338,6.17,339,5.608,348,6.369,349,5.472,350,2.984,353,1.2,361,4.624,422,5.841,441,2.354,508,2.984,509,2.984,510,4.624,511,4.624,512,6.369,513,4.624,536,1.979,615,2.984,616,2.984,617,4.872,802,4.624,805,5.472,806,2.984,807,2.984,818,2.984,819,2.984,820,5.472,836,4.624,885,4.624,888,5.472,889,2.984,890,2.984,1194,4.639,1239,2.984,1240,2.984,1328,4.624,1331,5.472,1332,2.984,1333,2.984,1413,4.763,1416,2.984,1417,2.984,1436,4.589,1441,6.24,1442,2.984,1443,2.984,1453,5.841,1458,6.369,1459,2.984,1460,2.984,1461,2.984,1485,2.984,1486,2.984,1487,4.872,1511,4.624,1529,2.984,1530,2.984,1550,4.241,1575,4.418,1596,2.984,1597,2.984,1607,5.472,1608,2.984,1609,2.984,1647,2.984,1648,2.984,1649,4.872,1690,4.624,1693,5.472,1694,2.984,1695,2.984,1805,5.908,1806,2.984,1807,2.984,1983,4.763,1994,2.984,1995,2.984,2185,2.984,2186,2.984,2187,4.872,2225,2.984,2365,2.762,2532,3.32,2533,3.32,2534,3.32,2535,3.32,2536,3.32,2537,3.32,2538,3.32,2539,3.32,2540,3.32,2541,3.32]],["title/properties.html",[8,1.159,2233,3.643]],["body/properties.html",[8,1.365,25,0.004,102,2.266,124,0.004,125,0.004,203,3.422,209,2.795,264,4.107,775,4.54,1198,6.94,1821,6.152,2330,7.974,2331,6.152,2332,7.974,2333,7.974,2372,6.152,2389,6.645,2476,6.152,2523,6.152,2542,7.395,2543,6.645,2544,7.395,2545,7.395,2546,7.395,2547,7.395]],["title/todo.html",[1051,3.425,2229,3.105,2230,3.105]],["body/todo.html",[1,1.757,5,0.035,9,2.217,25,0.002,62,1.866,70,4.287,71,4.601,97,2.193,124,0.002,125,0.002,132,1.509,154,0.735,165,4.152,181,4.708,189,1.664,194,2.435,269,2.354,284,1.758,293,1.758,295,1.758,305,1.694,320,3.468,346,4.708,376,2.089,377,5.08,391,5.085,397,2.971,460,5.314,493,3.414,705,2.694,899,6.735,900,3.414,912,3.414,917,4.308,926,2.619,933,3.16,951,2.586,957,3.414,1054,2.82,1055,2.82,1363,2.586,1506,4.708,1545,5.925,1592,5.02,2063,3.414,2074,3.414,2098,4.708,2121,5.085,2164,3.414,2216,3.414,2331,5.626,2334,3.414,2338,3.414,2341,5.085,2356,6.078,2368,3.414,2369,3.414,2371,3.414,2372,5.626,2375,3.414,2376,3.414,2385,3.414,2390,6.078,2393,3.414,2406,3.414,2407,5.085,2410,6.078,2422,3.414,2453,8.215,2454,3.414,2469,3.414,2471,3.414,2476,4.708,2482,3.414,2483,3.414,2485,3.414,2486,5.085,2487,3.414,2492,5.085,2497,5.085,2505,5.085,2515,3.414,2528,3.414,2543,3.414,2548,3.799,2549,3.799,2550,3.799,2551,3.799,2552,3.799,2553,3.799,2554,8.014,2555,7.494,2556,3.799,2557,3.799,2558,3.799,2559,3.799,2560,6.763,2561,6.763,2562,5.659,2563,3.799,2564,5.659,2565,3.799,2566,5.659,2567,5.659,2568,7.494,2569,6.763,2570,3.799,2571,5.659,2572,3.799,2573,3.799,2574,3.799,2575,5.659,2576,3.799,2577,3.799,2578,7.494,2579,3.799,2580,3.799,2581,3.799,2582,3.799,2583,3.799,2584,8.014,2585,3.799,2586,3.799,2587,3.799,2588,3.799,2589,5.659,2590,6.763,2591,3.799,2592,3.799,2593,5.659,2594,5.659,2595,3.799,2596,3.799,2597,3.799,2598,3.799,2599,3.799,2600,5.659,2601,7.494,2602,3.799,2603,5.659,2604,3.799,2605,3.799,2606,3.799,2607,3.799,2608,3.799,2609,3.799,2610,3.799,2611,3.799,2612,3.799,2613,3.799,2614,3.799,2615,3.799,2616,3.799,2617,3.799,2618,3.799,2619,3.799,2620,3.799,2621,3.799,2622,3.799,2623,3.799,2624,3.799,2625,3.799,2626,5.659,2627,3.799,2628,3.799,2629,3.799,2630,3.799,2631,3.799,2632,3.799,2633,3.799,2634,3.799,2635,3.799,2636,3.799]],["title/miscellaneous/typealiases.html",[2264,3.105,2637,6.279]],["body/miscellaneous/typealiases.html",[7,0.446,22,0.778,25,0.004,97,1.541,124,0.003,125,0.003,919,4.767,1061,3.483,1062,3.483,1069,3.483,1070,3.483,1967,4.598,2033,4.598,2264,3.628,2275,4.598,2295,8.697,2638,5.116,2639,7.002,2640,7.002,2641,7.002,2642,9.505,2643,7.002,2644,9.284,2645,7.002,2646,9.284,2647,7.002,2648,9.505,2649,7.002,2650,9.678,2651,7.002,2652,7.002,2653,7.002,2654,7.002,2655,7.002,2656,7.002,2657,7.002,2658,7.002,2659,7.002,2660,7.002,2661,7.002,2662,7.002,2663,7.002,2664,7.002,2665,7.002,2666,7.002,2667,7.002,2668,7.002,2669,7.002,2670,7.002,2671,7.002,2672,7.002,2673,7.002,2674,7.002,2675,7.002,2676,7.002,2677,7.002,2678,7.002,2679,7.002,2680,7.002,2681,7.002,2682,7.002,2683,7.002,2684,7.002,2685,7.002,2686,5.116,2687,7.002,2688,7.002,2689,7.002,2690,5.116,2691,5.116,2692,5.116,2693,5.116,2694,5.116,2695,5.116,2696,5.116,2697,5.116]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Announcement.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{},"entities/AuthAccount.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"classes/AuthMetadata.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/BackLine.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"modules/BandsModule.html":{},"injectables/BandsService.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/Comment.html":{},"modules/ConfigModule.html":{},"modules/ConnectionModule.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"classes/CreateBandDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMusicianDto.html":{},"classes/CreateNetworkDto.html":{},"classes/CreateOrganizerDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateVenueDto.html":{},"entities/Credentials.html":{},"injectables/CredentialsService.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"modules/GuardsModule.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"modules/LocationsModule.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"interfaces/LoginBase.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/MessagingGateway.html":{},"modules/MessagingModule.html":{},"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{},"classes/ModerationAction.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"modules/MusiciansModule.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"modules/NetworksModule.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"controllers/NotificationController.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"interfaces/NotificationServiceOptions.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{},"controllers/OrganizersController.html":{},"modules/OrganizersModule.html":{},"injectables/OrganizersService.html":{},"classes/PASystem.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/PastEvent.html":{},"interfaces/PatchOptions.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/Post.html":{},"controllers/PresenceController.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/PublicUser-1.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/Session.html":{},"injectables/SessionsService.html":{},"injectables/SocialAuthService.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"modules/StrategyModule.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VenueUser-1.html":{},"controllers/VenuesController.html":{},"modules/VenuesModule.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"guards/WebsocketGuard.html":{},"modules/WebsocketModule.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["0.2.0",{"_index":2260,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":2263,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":2542,"title":{},"body":{"properties.html":{}}}],["0.7.0",{"_index":2250,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":126,"title":{"classes/Account-1.html":{},"classes/AssociateUser-1.html":{},"controllers/AuthController-1.html":{},"guards/AuthGuard-1.html":{},"injectables/AuthService-1.html":{},"injectables/ConnectionService-1.html":{},"classes/CreateUserDto-1.html":{},"classes/EventDraft-1.html":{},"controllers/EventsController-1.html":{},"injectables/EventsService-1.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocationsService-1.html":{},"controllers/MediaController-1.html":{},"injectables/MediaService-1.html":{},"injectables/MessagingService-1.html":{},"classes/Network-1.html":{},"classes/OrganizerUser-1.html":{},"classes/PerformerUser-1.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/PublicUser-1.html":{},"classes/Resource-1.html":{},"guards/RolesGuard-1.html":{},"classes/Stage-1.html":{},"classes/Tag-1.html":{},"classes/UpdateUserDto-1.html":{},"entities/User-1.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService-1.html":{},"classes/VenueUser-1.html":{},"classes/VersionedResource-1.html":{}},"body":{"injectables/UsersService-1.html":{}}}],["1.0.0",{"_index":2254,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":2256,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":2255,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2541,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":2234,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":2244,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":2238,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":2236,"title":{},"body":{"dependencies.html":{}}}],["10.3.9",{"_index":2237,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":981,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["125",{"_index":2539,"title":{},"body":{"overview.html":{}}}],["16",{"_index":2423,"title":{},"body":{"index.html":{}}}],["17",{"_index":2537,"title":{},"body":{"overview.html":{}}}],["17.13.1",{"_index":2249,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":2536,"title":{},"body":{"overview.html":{}}}],["2",{"_index":1258,"title":{"injectables/EventsService-2.html":{},"injectables/JwtStrategy-2.html":{}},"body":{"injectables/UsersService-1.html":{}}}],["2.0.0",{"_index":2252,"title":{},"body":{"dependencies.html":{}}}],["2.0.16",{"_index":2246,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":1385,"title":{"injectables/JwtStrategy-3.html":{}},"body":{}}],["3.0.0",{"_index":2251,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":2235,"title":{},"body":{"dependencies.html":{}}}],["35",{"_index":2535,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1392,"title":{"injectables/JwtStrategy-4.html":{}},"body":{}}],["4.0.1",{"_index":2253,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":2242,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":2262,"title":{},"body":{"dependencies.html":{}}}],["41",{"_index":2538,"title":{},"body":{"overview.html":{}}}],["5",{"_index":2540,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":2247,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":2243,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":2261,"title":{},"body":{"dependencies.html":{}}}],["8.12.0",{"_index":2258,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":2629,"title":{},"body":{"todo.html":{}}}],["abstract",{"_index":272,"title":{},"body":{"classes/Announcement.html":{},"classes/AuthMetadata.html":{},"classes/BannedUser.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/Comment.html":{},"entities/Credentials.html":{},"classes/EmailLoginDto.html":{},"classes/EventReview.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/GoogleLoginDto.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"interfaces/LoginBase.html":{},"classes/ModerationAction.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/Performer.html":{},"classes/PerformerReview.html":{},"interfaces/PhysicalSpace.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"classes/UsernameLoginDto.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}}}],["accepted",{"_index":2106,"title":{},"body":{"entities/Venue.html":{}}}],["access",{"_index":477,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CoreAuthService.html":{},"classes/SwaggerDocBuilder.html":{},"entities/Venue.html":{},"guards/WebsocketGuard.html":{}}}],["access_token",{"_index":955,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["accessibility",{"_index":2111,"title":{},"body":{"entities/Venue.html":{}}}],["accessible",{"_index":282,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"entities/Venue.html":{},"classes/VenueReview.html":{}}}],["accessibleparking",{"_index":2112,"title":{},"body":{"entities/Venue.html":{}}}],["accesstoken",{"_index":1016,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["according",{"_index":2429,"title":{},"body":{"index.html":{}}}],["account",{"_index":1,"title":{"entities/Account.html":{},"classes/Account-1.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"modules/ConnectionModule.html":{},"entities/Credentials.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"entities/Genre.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser-1.html":{},"classes/PasswordCredentials.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser-1.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"entities/User.html":{},"entities/UserSession.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"classes/VenueUser-1.html":{},"todo.html":{}}}],["account.band",{"_index":574,"title":{},"body":{"entities/Band.html":{}}}],["account.band)@jointable",{"_index":566,"title":{},"body":{"entities/Band.html":{}}}],["account.entity",{"_index":1053,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"entities/UserSession.html":{}}}],["account.genres",{"_index":1313,"title":{},"body":{"entities/Genre.html":{}}}],["account.managedby",{"_index":1634,"title":{},"body":{"classes/OrganizerUser-1.html":{},"classes/PerformerUser-1.html":{},"classes/VenueUser-1.html":{}}}],["account.musician",{"_index":1472,"title":{},"body":{"entities/Musician.html":{}}}],["account.musician)@jointable",{"_index":1466,"title":{},"body":{"entities/Musician.html":{}}}],["account.organizer",{"_index":1627,"title":{},"body":{"entities/Organizer.html":{}}}],["account.organizer)@jointable",{"_index":1621,"title":{},"body":{"entities/Organizer.html":{}}}],["account.sessions",{"_index":1975,"title":{},"body":{"entities/UserSession.html":{}}}],["account.user",{"_index":1915,"title":{},"body":{"entities/User.html":{}}}],["account.venue",{"_index":2061,"title":{},"body":{"entities/Venue.html":{}}}],["account.venue)@jointable",{"_index":2045,"title":{},"body":{"entities/Venue.html":{}}}],["account/band.entity",{"_index":1151,"title":{},"body":{"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"entities/PublishedEvent.html":{}}}],["account/base/account.entity",{"_index":1321,"title":{},"body":{"entities/Genre.html":{},"classes/OrganizerUser-1.html":{},"classes/PerformerUser-1.html":{},"classes/VenueUser-1.html":{}}}],["account/musician.entity",{"_index":1150,"title":{},"body":{"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"entities/PublishedEvent.html":{}}}],["account/organizer.entity",{"_index":1153,"title":{},"body":{"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"entities/PublishedEvent.html":{}}}],["account/stage.entity",{"_index":1154,"title":{},"body":{"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"entities/PublishedEvent.html":{}}}],["account/venue.entity",{"_index":1152,"title":{},"body":{"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"entities/PublishedEvent.html":{}}}],["account:17",{"_index":747,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:18",{"_index":742,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:21",{"_index":748,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:22",{"_index":733,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:23",{"_index":738,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:24",{"_index":745,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:25",{"_index":744,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:28",{"_index":750,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:29",{"_index":751,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:30",{"_index":743,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:31",{"_index":749,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:32",{"_index":746,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:35",{"_index":740,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:36",{"_index":741,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:37",{"_index":739,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:40",{"_index":735,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:41",{"_index":734,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:42",{"_index":736,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account:43",{"_index":737,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["account_genres",{"_index":104,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["account_genres'})@apiproperty",{"_index":50,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["accounts",{"_index":71,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"entities/Genre.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{},"todo.html":{}}}],["accountservice",{"_index":129,"title":{"injectables/AccountService.html":{}},"body":{"injectables/AccountService.html":{},"modules/AuthModule.html":{},"injectables/CoreAuthService.html":{},"overview.html":{}}}],["accounttype",{"_index":64,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"classes/BandAccount.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/MusicianAccount.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["action",{"_index":628,"title":{},"body":{"injectables/BandsService.html":{},"injectables/EventsService.html":{},"injectables/LocationsService.html":{},"injectables/MusiciansService.html":{},"injectables/NetworksService.html":{},"injectables/OrganizersService.html":{},"injectables/VenuesService.html":{}}}],["actionstaken",{"_index":654,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["activate",{"_index":484,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["active",{"_index":2340,"title":{},"body":{"index.html":{}}}],["actively",{"_index":2517,"title":{},"body":{"index.html":{}}}],["addbearerauth",{"_index":1851,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["added",{"_index":289,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["additional",{"_index":2121,"title":{},"body":{"entities/Venue.html":{},"todo.html":{}}}],["address",{"_index":2074,"title":{},"body":{"entities/Venue.html":{},"todo.html":{}}}],["adds",{"_index":629,"title":{},"body":{"injectables/BandsService.html":{},"injectables/EventsService.html":{},"injectables/LocationsService.html":{},"injectables/MusiciansService.html":{},"injectables/NetworksService.html":{},"injectables/OrganizersService.html":{},"injectables/VenuesService.html":{}}}],["addserver(`${application_url}/${rest_api_prefix",{"_index":1850,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["admin",{"_index":181,"title":{},"body":{"classes/AdminGateway.html":{},"entities/User.html":{},"todo.html":{}}}],["admin.gateway",{"_index":197,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.service",{"_index":171,"title":{},"body":{"classes/AdminGateway.html":{},"modules/AdminModule.html":{}}}],["admingateway",{"_index":155,"title":{"classes/AdminGateway.html":{}},"body":{"classes/AdminGateway.html":{},"modules/AdminModule.html":{}}}],["administratorof",{"_index":1895,"title":{},"body":{"entities/User.html":{}}}],["administratorofdraft",{"_index":1896,"title":{},"body":{"entities/User.html":{}}}],["administratoroftemplate",{"_index":1897,"title":{},"body":{"entities/User.html":{}}}],["administrators",{"_index":310,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["adminmodule",{"_index":183,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/WebsocketModule.html":{},"modules.html":{},"overview.html":{}}}],["admins",{"_index":666,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["adminservice",{"_index":159,"title":{"injectables/AdminService.html":{}},"body":{"classes/AdminGateway.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"overview.html":{}}}],["affiliatedbands",{"_index":107,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["affiliatedmusicians",{"_index":106,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["affiliatedorganizers",{"_index":108,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["affiliatedvenues",{"_index":109,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["affiliates",{"_index":105,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["age",{"_index":2133,"title":{},"body":{"entities/Venue.html":{}}}],["agerestriction",{"_index":667,"title":{},"body":{"classes/BaseEvent.html":{},"classes/BusinessAccount.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"entities/Venue.html":{}}}],["agrees",{"_index":243,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["aims",{"_index":2357,"title":{},"body":{"index.html":{}}}],["algorithms",{"_index":2604,"title":{},"body":{"todo.html":{}}}],["aliases",{"_index":2638,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all.decorator.ts",{"_index":1271,"title":{},"body":{"interfaces/FindAllOptions.html":{},"miscellaneous/functions.html":{}}}],["allgenres",{"_index":2639,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allgroups",{"_index":2641,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allmusicians",{"_index":2643,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allorganizers",{"_index":2645,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowing",{"_index":2414,"title":{},"body":{"index.html":{}}}],["allperformers",{"_index":2647,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allvenues",{"_index":2649,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":965,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["ambient",{"_index":1108,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"miscellaneous/enumerations.html":{}}}],["amenities",{"_index":2126,"title":{},"body":{"entities/Venue.html":{}}}],["amount",{"_index":2143,"title":{},"body":{"entities/Venue.html":{}}}],["amplifiers",{"_index":2157,"title":{},"body":{"entities/Venue.html":{}}}],["announcement",{"_index":199,"title":{"classes/Announcement.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["announcementtype",{"_index":202,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["api",{"_index":2410,"title":{},"body":{"index.html":{},"todo.html":{}}}],["apibearerauth",{"_index":542,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["apibearerauth('access",{"_index":553,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["apimetadata",{"_index":1276,"title":{},"body":{"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"interfaces/PatchOptions.html":{},"miscellaneous/functions.html":{}}}],["apimodule",{"_index":326,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules.html":{},"overview.html":{}}}],["apinotfoundresponse",{"_index":1281,"title":{},"body":{"interfaces/FindOneOptions.html":{},"interfaces/PatchOptions.html":{}}}],["apiokresponse",{"_index":1274,"title":{},"body":{"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"interfaces/PatchOptions.html":{}}}],["apiokresponse(apimetadata",{"_index":1282,"title":{},"body":{"interfaces/FindOneOptions.html":{},"interfaces/PatchOptions.html":{}}}],["apiproperty",{"_index":81,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"classes/Business.html":{},"entities/Contact.html":{},"classes/Content.html":{},"classes/CreateUserDto.html":{},"classes/EmailLoginDto.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/PasswordLogin.html":{},"classes/Performer.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/Resource-1.html":{},"entities/User.html":{},"classes/UsernameLoginDto.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VersionedResource-1.html":{}}}],["apiproperty({example",{"_index":1001,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"classes/PasswordLogin.html":{},"classes/RegisterDto.html":{},"classes/UsernameLoginDto.html":{}}}],["apiresponsemetadata",{"_index":1275,"title":{},"body":{"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"interfaces/PatchOptions.html":{}}}],["apis",{"_index":2413,"title":{},"body":{"index.html":{}}}],["apiunauthorizedresponse",{"_index":543,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["app",{"_index":1821,"title":{},"body":{"classes/SwaggerDocBuilder.html":{},"index.html":{},"properties.html":{}}}],["app/auth/auth.module",{"_index":344,"title":{},"body":{"modules/ApiModule.html":{}}}],["app/auth/entities",{"_index":1949,"title":{},"body":{"entities/User.html":{}}}],["app/auth/guards/auth.guard",{"_index":544,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["app/constants",{"_index":524,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CoreAuthService.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/SwaggerDocBuilder.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["app/data",{"_index":342,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{}}}],["app/data/connection/connection.module",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["app/data/dto",{"_index":627,"title":{},"body":{"injectables/BandsService.html":{},"injectables/CoreAuthService.html":{},"injectables/EventsService.html":{},"injectables/LocationsService.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"injectables/OrganizersService.html":{},"injectables/UsersService.html":{},"injectables/VenuesService.html":{}}}],["app/data/entities/account",{"_index":2191,"title":{},"body":{"modules/VenuesModule.html":{}}}],["app/data/entities/common",{"_index":2192,"title":{},"body":{"modules/VenuesModule.html":{}}}],["app/data/entities/event",{"_index":1242,"title":{},"body":{"modules/EventsModule.html":{},"injectables/EventsService.html":{}}}],["app/data/entities/user",{"_index":410,"title":{},"body":{"entities/AuthAccount.html":{},"interfaces/AuthOptions.html":{},"injectables/CoreAuthService.html":{},"controllers/NotificationController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["app/data/enums",{"_index":411,"title":{},"body":{"entities/AuthAccount.html":{},"entities/PublishedEvent.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{}}}],["app/data/examples/user.example",{"_index":1067,"title":{},"body":{"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"classes/UsernameLoginDto.html":{}}}],["app/decorators",{"_index":1521,"title":{},"body":{"classes/NetworksController.html":{},"guards/RolesGuard.html":{}}}],["app/notification/notification.module",{"_index":345,"title":{},"body":{"modules/ApiModule.html":{}}}],["app/ws/constants",{"_index":173,"title":{},"body":{"classes/AdminGateway.html":{},"classes/EventsGateway.html":{},"classes/MessagingGateway.html":{}}}],["applicable",{"_index":2138,"title":{},"body":{"entities/Venue.html":{}}}],["application",{"_index":293,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"index.html":{},"todo.html":{}}}],["application_name",{"_index":1827,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["application_url",{"_index":1828,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["applications",{"_index":2384,"title":{},"body":{"index.html":{}}}],["applies",{"_index":2142,"title":{},"body":{"entities/Venue.html":{}}}],["applydecorators",{"_index":541,"title":{},"body":{"interfaces/AuthOptions.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"interfaces/PatchOptions.html":{}}}],["appmodule",{"_index":349,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approuter",{"_index":2651,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../channel.schema.ts",{"_index":2277,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../credentials.entity.ts",{"_index":2270,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../login.dto.ts",{"_index":2275,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../main.ts",{"_index":2294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../user.schema.ts",{"_index":2276,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/api/src/api.module.ts",{"_index":340,"title":{},"body":{"modules/ApiModule.html":{}}}],["apps/api/src/auth/guards/auth.guard",{"_index":547,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["apps/api/src/auth/roles/roles.enum",{"_index":546,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["apps/api/src/main.ts",{"_index":2306,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/api/src/resources/bands/bands.module.ts",{"_index":618,"title":{},"body":{"modules/BandsModule.html":{}}}],["apps/api/src/resources/bands/bands.service.ts",{"_index":621,"title":{},"body":{"injectables/BandsService.html":{}}}],["apps/api/src/resources/bands/bands.service.ts:10",{"_index":623,"title":{},"body":{"injectables/BandsService.html":{}}}],["apps/api/src/resources/bands/bands.service.ts:14",{"_index":624,"title":{},"body":{"injectables/BandsService.html":{}}}],["apps/api/src/resources/bands/bands.service.ts:18",{"_index":626,"title":{},"body":{"injectables/BandsService.html":{}}}],["apps/api/src/resources/bands/bands.service.ts:22",{"_index":625,"title":{},"body":{"injectables/BandsService.html":{}}}],["apps/api/src/resources/bands/bands.service.ts:6",{"_index":622,"title":{},"body":{"injectables/BandsService.html":{}}}],["apps/api/src/resources/events/events.module.ts",{"_index":1241,"title":{},"body":{"modules/EventsModule.html":{}}}],["apps/api/src/resources/events/events.service.ts",{"_index":1245,"title":{},"body":{"injectables/EventsService.html":{}}}],["apps/api/src/resources/events/events.service.ts:10",{"_index":1247,"title":{},"body":{"injectables/EventsService.html":{}}}],["apps/api/src/resources/events/events.service.ts:19",{"_index":1248,"title":{},"body":{"injectables/EventsService.html":{}}}],["apps/api/src/resources/events/events.service.ts:23",{"_index":1249,"title":{},"body":{"injectables/EventsService.html":{}}}],["apps/api/src/resources/events/events.service.ts:27",{"_index":1250,"title":{},"body":{"injectables/EventsService.html":{}}}],["apps/api/src/resources/events/events.service.ts:31",{"_index":1252,"title":{},"body":{"injectables/EventsService.html":{}}}],["apps/api/src/resources/events/events.service.ts:35",{"_index":1251,"title":{},"body":{"injectables/EventsService.html":{}}}],["apps/api/src/resources/locations/locations.module.ts",{"_index":1418,"title":{},"body":{"modules/LocationsModule.html":{}}}],["apps/api/src/resources/locations/locations.service.ts",{"_index":1420,"title":{},"body":{"injectables/LocationsService.html":{}}}],["apps/api/src/resources/locations/locations.service.ts:10",{"_index":1423,"title":{},"body":{"injectables/LocationsService.html":{}}}],["apps/api/src/resources/locations/locations.service.ts:14",{"_index":1424,"title":{},"body":{"injectables/LocationsService.html":{}}}],["apps/api/src/resources/locations/locations.service.ts:18",{"_index":1427,"title":{},"body":{"injectables/LocationsService.html":{}}}],["apps/api/src/resources/locations/locations.service.ts:22",{"_index":1425,"title":{},"body":{"injectables/LocationsService.html":{}}}],["apps/api/src/resources/locations/locations.service.ts:6",{"_index":1422,"title":{},"body":{"injectables/LocationsService.html":{}}}],["apps/api/src/resources/musicians/musicians.module.ts",{"_index":1488,"title":{},"body":{"modules/MusiciansModule.html":{}}}],["apps/api/src/resources/musicians/musicians.service.ts",{"_index":1491,"title":{},"body":{"injectables/MusiciansService.html":{}}}],["apps/api/src/resources/musicians/musicians.service.ts:10",{"_index":1493,"title":{},"body":{"injectables/MusiciansService.html":{}}}],["apps/api/src/resources/musicians/musicians.service.ts:14",{"_index":1494,"title":{},"body":{"injectables/MusiciansService.html":{}}}],["apps/api/src/resources/musicians/musicians.service.ts:18",{"_index":1496,"title":{},"body":{"injectables/MusiciansService.html":{}}}],["apps/api/src/resources/musicians/musicians.service.ts:22",{"_index":1495,"title":{},"body":{"injectables/MusiciansService.html":{}}}],["apps/api/src/resources/musicians/musicians.service.ts:6",{"_index":1492,"title":{},"body":{"injectables/MusiciansService.html":{}}}],["apps/api/src/resources/networks/networks.controller.ts",{"_index":1509,"title":{},"body":{"classes/NetworksController.html":{}}}],["apps/api/src/resources/networks/networks.controller.ts:11",{"_index":1514,"title":{},"body":{"classes/NetworksController.html":{}}}],["apps/api/src/resources/networks/networks.controller.ts:16",{"_index":1515,"title":{},"body":{"classes/NetworksController.html":{}}}],["apps/api/src/resources/networks/networks.controller.ts:21",{"_index":1516,"title":{},"body":{"classes/NetworksController.html":{}}}],["apps/api/src/resources/networks/networks.controller.ts:26",{"_index":1519,"title":{},"body":{"classes/NetworksController.html":{}}}],["apps/api/src/resources/networks/networks.controller.ts:31",{"_index":1517,"title":{},"body":{"classes/NetworksController.html":{}}}],["apps/api/src/resources/networks/networks.controller.ts:7",{"_index":1512,"title":{},"body":{"classes/NetworksController.html":{}}}],["apps/api/src/resources/networks/networks.module.ts",{"_index":1531,"title":{},"body":{"modules/NetworksModule.html":{}}}],["apps/api/src/resources/networks/networks.service.ts",{"_index":1533,"title":{},"body":{"injectables/NetworksService.html":{}}}],["apps/api/src/resources/networks/networks.service.ts:10",{"_index":1535,"title":{},"body":{"injectables/NetworksService.html":{}}}],["apps/api/src/resources/networks/networks.service.ts:14",{"_index":1536,"title":{},"body":{"injectables/NetworksService.html":{}}}],["apps/api/src/resources/networks/networks.service.ts:18",{"_index":1538,"title":{},"body":{"injectables/NetworksService.html":{}}}],["apps/api/src/resources/networks/networks.service.ts:22",{"_index":1537,"title":{},"body":{"injectables/NetworksService.html":{}}}],["apps/api/src/resources/networks/networks.service.ts:6",{"_index":1534,"title":{},"body":{"injectables/NetworksService.html":{}}}],["apps/api/src/resources/organizers/organizers.module.ts",{"_index":1650,"title":{},"body":{"modules/OrganizersModule.html":{}}}],["apps/api/src/resources/organizers/organizers.service.ts",{"_index":1653,"title":{},"body":{"injectables/OrganizersService.html":{}}}],["apps/api/src/resources/organizers/organizers.service.ts:10",{"_index":1655,"title":{},"body":{"injectables/OrganizersService.html":{}}}],["apps/api/src/resources/organizers/organizers.service.ts:14",{"_index":1656,"title":{},"body":{"injectables/OrganizersService.html":{}}}],["apps/api/src/resources/organizers/organizers.service.ts:18",{"_index":1658,"title":{},"body":{"injectables/OrganizersService.html":{}}}],["apps/api/src/resources/organizers/organizers.service.ts:22",{"_index":1657,"title":{},"body":{"injectables/OrganizersService.html":{}}}],["apps/api/src/resources/organizers/organizers.service.ts:6",{"_index":1654,"title":{},"body":{"injectables/OrganizersService.html":{}}}],["apps/api/src/resources/users/users.module.ts",{"_index":1996,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/api/src/resources/users/users.service.ts",{"_index":1999,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/resources/users/users.service.ts:12",{"_index":2006,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/resources/users/users.service.ts:27",{"_index":2007,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/resources/users/users.service.ts:38",{"_index":2008,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/resources/users/users.service.ts:42",{"_index":2010,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/resources/users/users.service.ts:45",{"_index":2009,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/resources/users/users.service.ts:49",{"_index":2011,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/resources/users/users.service.ts:53",{"_index":2013,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/resources/users/users.service.ts:57",{"_index":2017,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/resources/users/users.service.ts:63",{"_index":2016,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/resources/users/users.service.ts:67",{"_index":2015,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/resources/venues/venues.module.ts",{"_index":2188,"title":{},"body":{"modules/VenuesModule.html":{}}}],["apps/api/src/resources/venues/venues.service.ts",{"_index":2194,"title":{},"body":{"injectables/VenuesService.html":{}}}],["apps/api/src/resources/venues/venues.service.ts:11",{"_index":2196,"title":{},"body":{"injectables/VenuesService.html":{}}}],["apps/api/src/resources/venues/venues.service.ts:15",{"_index":2197,"title":{},"body":{"injectables/VenuesService.html":{}}}],["apps/api/src/resources/venues/venues.service.ts:19",{"_index":2199,"title":{},"body":{"injectables/VenuesService.html":{}}}],["apps/api/src/resources/venues/venues.service.ts:24",{"_index":2198,"title":{},"body":{"injectables/VenuesService.html":{}}}],["apps/api/src/resources/venues/venues.service.ts:6",{"_index":2195,"title":{},"body":{"injectables/VenuesService.html":{}}}],["apps/api/src/swagger/swagger",{"_index":1812,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["apps/auth/src/auth.module.ts",{"_index":514,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/auth/src/core.service.ts",{"_index":895,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["apps/auth/src/core.service.ts:103",{"_index":908,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["apps/auth/src/core.service.ts:111",{"_index":911,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["apps/auth/src/core.service.ts:119",{"_index":925,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["apps/auth/src/core.service.ts:129",{"_index":932,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["apps/auth/src/core.service.ts:154",{"_index":928,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["apps/auth/src/core.service.ts:169",{"_index":914,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["apps/auth/src/core.service.ts:21",{"_index":906,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["apps/auth/src/core.service.ts:32",{"_index":930,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["apps/auth/src/core.service.ts:41",{"_index":920,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["apps/auth/src/core.service.ts:75",{"_index":923,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["apps/auth/src/dto/login.dto.ts",{"_index":1062,"title":{},"body":{"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/UsernameLoginDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/auth/src/dto/login.dto.ts:16",{"_index":1662,"title":{},"body":{"classes/PasswordLogin.html":{}}}],["apps/auth/src/dto/login.dto.ts:21",{"_index":1979,"title":{},"body":{"classes/UsernameLoginDto.html":{}}}],["apps/auth/src/dto/login.dto.ts:24",{"_index":1980,"title":{},"body":{"classes/UsernameLoginDto.html":{}}}],["apps/auth/src/dto/login.dto.ts:29",{"_index":1065,"title":{},"body":{"classes/EmailLoginDto.html":{}}}],["apps/auth/src/dto/login.dto.ts:32",{"_index":1064,"title":{},"body":{"classes/EmailLoginDto.html":{}}}],["apps/auth/src/dto/login.dto.ts:37",{"_index":1324,"title":{},"body":{"classes/GoogleLoginDto.html":{}}}],["apps/auth/src/dto/login.dto.ts:40",{"_index":1322,"title":{},"body":{"classes/GoogleLoginDto.html":{}}}],["apps/auth/src/dto/login.dto.ts:43",{"_index":1323,"title":{},"body":{"classes/GoogleLoginDto.html":{}}}],["apps/auth/src/dto/register.dto.ts",{"_index":1735,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/auth/src/dto/register.dto.ts:12",{"_index":1739,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/auth/src/dto/register.dto.ts:15",{"_index":1738,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/auth/src/dto/register.dto.ts:6",{"_index":1736,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/auth/src/dto/register.dto.ts:9",{"_index":1737,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/auth/src/entities/account.entity.ts",{"_index":390,"title":{},"body":{"entities/AuthAccount.html":{}}}],["apps/auth/src/entities/account.entity.ts:19",{"_index":402,"title":{},"body":{"entities/AuthAccount.html":{}}}],["apps/auth/src/entities/account.entity.ts:26",{"_index":396,"title":{},"body":{"entities/AuthAccount.html":{}}}],["apps/auth/src/entities/account.entity.ts:29",{"_index":394,"title":{},"body":{"entities/AuthAccount.html":{}}}],["apps/auth/src/entities/account.entity.ts:32",{"_index":399,"title":{},"body":{"entities/AuthAccount.html":{}}}],["apps/auth/src/entities/common.entity.ts",{"_index":500,"title":{},"body":{"classes/AuthMetadata.html":{}}}],["apps/auth/src/entities/common.entity.ts:12",{"_index":504,"title":{},"body":{"classes/AuthMetadata.html":{}}}],["apps/auth/src/entities/common.entity.ts:15",{"_index":502,"title":{},"body":{"classes/AuthMetadata.html":{}}}],["apps/auth/src/entities/common.entity.ts:18",{"_index":506,"title":{},"body":{"classes/AuthMetadata.html":{}}}],["apps/auth/src/entities/credentials.entity.ts",{"_index":1015,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"miscellaneous/enumerations.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:102",{"_index":1617,"title":{},"body":{"classes/OAuthCredentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:105",{"_index":1615,"title":{},"body":{"classes/OAuthCredentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:108",{"_index":1614,"title":{},"body":{"classes/OAuthCredentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:29",{"_index":1031,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:35",{"_index":1049,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:38",{"_index":1028,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:41",{"_index":1035,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:44",{"_index":1043,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:47",{"_index":1044,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:50",{"_index":1047,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:53",{"_index":1045,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:56",{"_index":1036,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:59",{"_index":1046,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:65",{"_index":1050,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:68",{"_index":1034,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:71",{"_index":1039,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:74",{"_index":1041,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:77",{"_index":1042,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:80",{"_index":1038,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:83",{"_index":1037,"title":{},"body":{"entities/Credentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:88",{"_index":1661,"title":{},"body":{"classes/PasswordCredentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:91",{"_index":1659,"title":{},"body":{"classes/PasswordCredentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:94",{"_index":1660,"title":{},"body":{"classes/PasswordCredentials.html":{}}}],["apps/auth/src/entities/credentials.entity.ts:99",{"_index":1616,"title":{},"body":{"classes/OAuthCredentials.html":{}}}],["apps/auth/src/entities/session.entity.ts",{"_index":1973,"title":{},"body":{"entities/UserSession.html":{}}}],["apps/auth/src/entities/session.entity.ts:11",{"_index":1978,"title":{},"body":{"entities/UserSession.html":{}}}],["apps/auth/src/entities/session.entity.ts:14",{"_index":1977,"title":{},"body":{"entities/UserSession.html":{}}}],["apps/auth/src/entities/session.entity.ts:8",{"_index":1976,"title":{},"body":{"entities/UserSession.html":{}}}],["apps/auth/src/guards/auth.guard.ts",{"_index":442,"title":{},"body":{"guards/AuthGuard.html":{}}}],["apps/auth/src/guards/auth.guard.ts:11",{"_index":447,"title":{},"body":{"guards/AuthGuard.html":{}}}],["apps/auth/src/guards/auth.guard.ts:14",{"_index":450,"title":{},"body":{"guards/AuthGuard.html":{}}}],["apps/auth/src/guards/auth.guard.ts:41",{"_index":453,"title":{},"body":{"guards/AuthGuard.html":{}}}],["apps/auth/src/guards/jwt",{"_index":1353,"title":{},"body":{"injectables/JWTAuthGuard.html":{}}}],["apps/auth/src/guards/local",{"_index":1401,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["apps/auth/src/guards/roles.guard.ts",{"_index":1761,"title":{},"body":{"guards/RolesGuard.html":{}}}],["apps/auth/src/guards/roles.guard.ts:10",{"_index":1765,"title":{},"body":{"guards/RolesGuard.html":{}}}],["apps/auth/src/guards/roles.guard.ts:7",{"_index":1764,"title":{},"body":{"guards/RolesGuard.html":{}}}],["apps/auth/src/guards/websocket.guard.ts",{"_index":2206,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["apps/auth/src/guards/websocket.guard.ts:12",{"_index":2208,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["apps/auth/src/guards/websocket.guard.ts:15",{"_index":2209,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["apps/auth/src/guards/websocket.guard.ts:46",{"_index":2212,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["apps/auth/src/main.ts",{"_index":2307,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/auth/src/services/account.service.ts",{"_index":131,"title":{},"body":{"injectables/AccountService.html":{}}}],["apps/auth/src/services/account.service.ts:13",{"_index":141,"title":{},"body":{"injectables/AccountService.html":{}}}],["apps/auth/src/services/account.service.ts:7",{"_index":138,"title":{},"body":{"injectables/AccountService.html":{}}}],["apps/auth/src/services/credentials.service.ts",{"_index":1060,"title":{},"body":{"injectables/CredentialsService.html":{}}}],["apps/auth/src/services/external.service.ts",{"_index":1262,"title":{},"body":{"injectables/ExternalAuthService.html":{}}}],["apps/auth/src/services/external.service.ts:4",{"_index":1264,"title":{},"body":{"injectables/ExternalAuthService.html":{}}}],["apps/auth/src/services/external.service.ts:7",{"_index":1267,"title":{},"body":{"injectables/ExternalAuthService.html":{}}}],["apps/auth/src/services/sessions.service.ts",{"_index":1786,"title":{},"body":{"injectables/SessionsService.html":{}}}],["apps/auth/src/services/social.service.ts",{"_index":1788,"title":{},"body":{"injectables/SocialAuthService.html":{}}}],["apps/auth/src/strategies/facebook.strategy.ts",{"_index":1357,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/auth/src/strategies/facebook.strategy.ts:15",{"_index":1361,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/auth/src/strategies/facebook.strategy.ts:6",{"_index":1359,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/auth/src/strategies/google.strategy.ts",{"_index":1373,"title":{},"body":{"injectables/JwtStrategy-1.html":{}}}],["apps/auth/src/strategies/google.strategy.ts:15",{"_index":1375,"title":{},"body":{"injectables/JwtStrategy-1.html":{}}}],["apps/auth/src/strategies/google.strategy.ts:6",{"_index":1374,"title":{},"body":{"injectables/JwtStrategy-1.html":{}}}],["apps/auth/src/strategies/jwt.strategy.ts",{"_index":1377,"title":{},"body":{"injectables/JwtStrategy-2.html":{}}}],["apps/auth/src/strategies/jwt.strategy.ts:15",{"_index":1379,"title":{},"body":{"injectables/JwtStrategy-2.html":{}}}],["apps/auth/src/strategies/jwt.strategy.ts:6",{"_index":1378,"title":{},"body":{"injectables/JwtStrategy-2.html":{}}}],["apps/auth/src/strategies/local.strategy.ts",{"_index":1403,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/auth/src/strategies/local.strategy.ts:12",{"_index":1406,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/auth/src/strategies/local.strategy.ts:7",{"_index":1405,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/auth/src/strategies/oauth.strategy.ts",{"_index":1386,"title":{},"body":{"injectables/JwtStrategy-3.html":{}}}],["apps/auth/src/strategies/oauth.strategy.ts:16",{"_index":1388,"title":{},"body":{"injectables/JwtStrategy-3.html":{}}}],["apps/auth/src/strategies/oauth.strategy.ts:6",{"_index":1387,"title":{},"body":{"injectables/JwtStrategy-3.html":{}}}],["apps/auth/src/strategies/strategy.module.ts",{"_index":1809,"title":{},"body":{"modules/StrategyModule.html":{}}}],["apps/auth/src/strategies/twitter.strategy.ts",{"_index":1393,"title":{},"body":{"injectables/JwtStrategy-4.html":{}}}],["apps/auth/src/strategies/twitter.strategy.ts:15",{"_index":1395,"title":{},"body":{"injectables/JwtStrategy-4.html":{}}}],["apps/auth/src/strategies/twitter.strategy.ts:6",{"_index":1394,"title":{},"body":{"injectables/JwtStrategy-4.html":{}}}],["apps/content/src/content.controller.ts",{"_index":883,"title":{},"body":{"controllers/ContentController.html":{}}}],["apps/content/src/content.controller.ts:9",{"_index":884,"title":{},"body":{"controllers/ContentController.html":{}}}],["apps/content/src/content.module.ts",{"_index":891,"title":{},"body":{"modules/ContentModule.html":{}}}],["apps/content/src/content.service.ts",{"_index":893,"title":{},"body":{"injectables/ContentService.html":{}}}],["apps/content/src/content.service.ts:5",{"_index":894,"title":{},"body":{"injectables/ContentService.html":{}}}],["apps/content/src/main.ts",{"_index":2308,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/media/src/main.ts",{"_index":2309,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/media/src/media.controller.ts",{"_index":1434,"title":{},"body":{"controllers/MediaController.html":{}}}],["apps/media/src/media.controller.ts:9",{"_index":1435,"title":{},"body":{"controllers/MediaController.html":{}}}],["apps/media/src/media.module.ts",{"_index":1444,"title":{},"body":{"modules/MediaModule.html":{}}}],["apps/media/src/media.service.ts",{"_index":1446,"title":{},"body":{"injectables/MediaService.html":{}}}],["apps/media/src/media.service.ts:5",{"_index":1447,"title":{},"body":{"injectables/MediaService.html":{}}}],["apps/notification/src/main.ts",{"_index":2310,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/notification/src/notification.controller.ts",{"_index":1567,"title":{},"body":{"controllers/NotificationController.html":{}}}],["apps/notification/src/notification.controller.ts:11",{"_index":1572,"title":{},"body":{"controllers/NotificationController.html":{}}}],["apps/notification/src/notification.module.ts",{"_index":1598,"title":{},"body":{"modules/NotificationModule.html":{}}}],["apps/notification/src/notification.service.ts",{"_index":1600,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/notification/src/notification.service.ts:6",{"_index":1601,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/notification/src/schemas/channel.schema.ts",{"_index":1542,"title":{},"body":{"classes/NotificationChannel.html":{},"miscellaneous/enumerations.html":{}}}],["apps/notification/src/schemas/channel.schema.ts:11",{"_index":1547,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["apps/notification/src/schemas/channel.schema.ts:14",{"_index":1548,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["apps/notification/src/schemas/channel.schema.ts:17",{"_index":1549,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["apps/notification/src/schemas/channel.schema.ts:20",{"_index":1552,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["apps/notification/src/schemas/channel.schema.ts:23",{"_index":1551,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["apps/notification/src/schemas/user.schema.ts",{"_index":1579,"title":{},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{},"miscellaneous/enumerations.html":{}}}],["apps/notification/src/schemas/user.schema.ts:26",{"_index":1972,"title":{},"body":{"classes/UserPreferences.html":{}}}],["apps/notification/src/schemas/user.schema.ts:29",{"_index":1969,"title":{},"body":{"classes/UserPreferences.html":{}}}],["apps/notification/src/schemas/user.schema.ts:30",{"_index":1966,"title":{},"body":{"classes/UserPreferences.html":{}}}],["apps/notification/src/schemas/user.schema.ts:31",{"_index":1971,"title":{},"body":{"classes/UserPreferences.html":{}}}],["apps/notification/src/schemas/user.schema.ts:34",{"_index":1970,"title":{},"body":{"classes/UserPreferences.html":{}}}],["apps/notification/src/schemas/user.schema.ts:42",{"_index":1968,"title":{},"body":{"classes/UserPreferences.html":{}}}],["apps/ws/src/gateways/admin/admin.gateway.ts",{"_index":156,"title":{},"body":{"classes/AdminGateway.html":{}}}],["apps/ws/src/gateways/admin/admin.gateway.ts:14",{"_index":160,"title":{},"body":{"classes/AdminGateway.html":{}}}],["apps/ws/src/gateways/admin/admin.gateway.ts:18",{"_index":164,"title":{},"body":{"classes/AdminGateway.html":{}}}],["apps/ws/src/gateways/admin/admin.module.ts",{"_index":196,"title":{},"body":{"modules/AdminModule.html":{}}}],["apps/ws/src/gateways/admin/admin.service.ts",{"_index":198,"title":{},"body":{"injectables/AdminService.html":{}}}],["apps/ws/src/gateways/events/events.gateway.ts",{"_index":1208,"title":{},"body":{"classes/EventsGateway.html":{}}}],["apps/ws/src/gateways/events/events.gateway.ts:20",{"_index":1216,"title":{},"body":{"classes/EventsGateway.html":{}}}],["apps/ws/src/gateways/events/events.gateway.ts:24",{"_index":1221,"title":{},"body":{"classes/EventsGateway.html":{}}}],["apps/ws/src/gateways/events/events.gateway.ts:28",{"_index":1223,"title":{},"body":{"classes/EventsGateway.html":{}}}],["apps/ws/src/gateways/events/events.gateway.ts:33",{"_index":1226,"title":{},"body":{"classes/EventsGateway.html":{}}}],["apps/ws/src/gateways/events/events.gateway.ts:39",{"_index":1227,"title":{},"body":{"classes/EventsGateway.html":{}}}],["apps/ws/src/gateways/events/events.service.ts",{"_index":1255,"title":{},"body":{"injectables/EventsService-1.html":{}}}],["apps/ws/src/gateways/events/events.service.ts:6",{"_index":1256,"title":{},"body":{"injectables/EventsService-1.html":{}}}],["apps/ws/src/gateways/messaging/messaging.gateway.ts",{"_index":1451,"title":{},"body":{"classes/MessagingGateway.html":{}}}],["apps/ws/src/gateways/messaging/messaging.gateway.ts:14",{"_index":1454,"title":{},"body":{"classes/MessagingGateway.html":{}}}],["apps/ws/src/gateways/messaging/messaging.gateway.ts:18",{"_index":1455,"title":{},"body":{"classes/MessagingGateway.html":{}}}],["apps/ws/src/gateways/messaging/messaging.service.ts",{"_index":1464,"title":{},"body":{"injectables/MessagingService-1.html":{}}}],["apps/ws/src/main.ts",{"_index":2311,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/ws/src/websocket.module.ts",{"_index":2227,"title":{},"body":{"modules/WebsocketModule.html":{}}}],["architecture",{"_index":2356,"title":{},"body":{"index.html":{},"todo.html":{}}}],["area",{"_index":770,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["array",{"_index":2069,"title":{},"body":{"entities/Venue.html":{}}}],["assignedtomoderator",{"_index":648,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["assignedtomoderatorat",{"_index":649,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["assigning",{"_index":475,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["associate",{"_index":381,"title":{},"body":{"classes/AssociateUser.html":{},"classes/OrganizerUser.html":{},"classes/PerformerUser.html":{},"classes/PublicUser.html":{},"classes/VenueUser.html":{},"miscellaneous/enumerations.html":{}}}],["associateuser",{"_index":374,"title":{"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{}},"body":{"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{},"classes/OrganizerUser.html":{},"classes/PerformerUser.html":{},"classes/PublicUser.html":{},"modules/UsersModule.html":{},"classes/VenueUser.html":{}}}],["async",{"_index":133,"title":{},"body":{"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/CoreAuthService.html":{},"classes/EventsGateway.html":{},"injectables/ExternalAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{},"classes/MessagingGateway.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"guards/WebsocketGuard.html":{}}}],["asynchronous",{"_index":2396,"title":{},"body":{"index.html":{}}}],["atmosphere",{"_index":2066,"title":{},"body":{"entities/Venue.html":{}}}],["attach",{"_index":468,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["attached",{"_index":270,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["attempts",{"_index":2607,"title":{},"body":{"todo.html":{}}}],["audience",{"_index":265,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PastEvent.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"entities/PublishedEvent.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"entities/User.html":{},"classes/VenueReview.html":{}}}],["audit",{"_index":662,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["auth",{"_index":377,"title":{},"body":{"classes/AssociateUser.html":{},"controllers/AuthController-1.html":{},"classes/OrganizerUser.html":{},"classes/PerformerUser.html":{},"classes/PublicUser.html":{},"entities/User.html":{},"classes/VenueUser.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["auth(options",{"_index":548,"title":{},"body":{"interfaces/AuthOptions.html":{},"miscellaneous/functions.html":{}}}],["auth.controller",{"_index":522,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":1354,"title":{},"body":{"injectables/JWTAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["auth.service",{"_index":423,"title":{},"body":{"controllers/AuthController.html":{}}}],["authaccount",{"_index":147,"title":{"entities/AuthAccount.html":{}},"body":{"injectables/AccountService.html":{},"entities/AuthAccount.html":{},"modules/AuthModule.html":{},"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"classes/Session.html":{},"entities/User.html":{},"entities/UserSession.html":{}}}],["authaccountrepository",{"_index":140,"title":{},"body":{"injectables/AccountService.html":{}}}],["authcontroller",{"_index":355,"title":{"controllers/AuthController.html":{},"controllers/AuthController-1.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{}}}],["authentication",{"_index":2453,"title":{},"body":{"index.html":{},"todo.html":{}}}],["authguard",{"_index":440,"title":{"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{}},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"interfaces/AuthOptions.html":{},"injectables/JWTAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":1355,"title":{},"body":{"injectables/JWTAuthGuard.html":{}}}],["authguard('local",{"_index":1402,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmetadata",{"_index":406,"title":{"classes/AuthMetadata.html":{}},"body":{"entities/AuthAccount.html":{},"classes/AuthMetadata.html":{},"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"entities/UserSession.html":{}}}],["authmodule",{"_index":329,"title":{"modules/AuthModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authoptions",{"_index":535,"title":{"interfaces/AuthOptions.html":{}},"body":{"interfaces/AuthOptions.html":{},"miscellaneous/functions.html":{}}}],["author",{"_index":203,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"properties.html":{}}}],["authorization",{"_index":2566,"title":{},"body":{"todo.html":{}}}],["authorizationurl",{"_index":1390,"title":{},"body":{"injectables/JwtStrategy-3.html":{}}}],["authservice",{"_index":422,"title":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["auto",{"_index":286,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["autoloadentities",{"_index":833,"title":{},"body":{"modules/ConnectionModule.html":{}}}],["availability",{"_index":2114,"title":{},"body":{"entities/Venue.html":{}}}],["available",{"_index":2152,"title":{},"body":{"entities/Venue.html":{},"modules.html":{}}}],["availablebyemail",{"_index":797,"title":{},"body":{"classes/BusinessContact.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{}}}],["availablebyphone",{"_index":795,"title":{},"body":{"classes/BusinessContact.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{}}}],["availablebytext",{"_index":796,"title":{},"body":{"classes/BusinessContact.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{}}}],["avatar",{"_index":32,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["avatarurl",{"_index":10,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["average",{"_index":2095,"title":{},"body":{"entities/Venue.html":{}}}],["await",{"_index":471,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CoreAuthService.html":{},"injectables/UsersService.html":{},"guards/WebsocketGuard.html":{}}}],["background",{"_index":2496,"title":{},"body":{"index.html":{}}}],["backline",{"_index":557,"title":{"classes/BackLine.html":{}},"body":{"classes/BackLine.html":{},"classes/PASystem.html":{},"classes/Stage-1.html":{},"entities/Venue.html":{}}}],["band",{"_index":87,"title":{"entities/Band.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"injectables/BandsService.html":{},"classes/BusinessAccount.html":{},"modules/ConnectionModule.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"entities/PublishedEvent.html":{},"classes/VenueAccount.html":{},"miscellaneous/enumerations.html":{}}}],["band.account",{"_index":117,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["band.dto",{"_index":1869,"title":{},"body":{"classes/UpdateBandDto.html":{}}}],["band.dto.ts",{"_index":983,"title":{},"body":{"classes/CreateBandDto.html":{},"classes/UpdateBandDto.html":{}}}],["band.entity",{"_index":88,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["band.members",{"_index":1473,"title":{},"body":{"entities/Musician.html":{}}}],["band.members)@apiproperty",{"_index":1468,"title":{},"body":{"entities/Musician.html":{}}}],["bandaccount",{"_index":116,"title":{"classes/BandAccount.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"modules/ConnectionModule.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["bandcampurl",{"_index":757,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{}}}],["bands",{"_index":580,"title":{},"body":{"controllers/BandsController.html":{},"injectables/BandsService.html":{},"classes/BusinessAccount.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"entities/Musician.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"entities/PublishedEvent.html":{}}}],["bands.controller",{"_index":620,"title":{},"body":{"modules/BandsModule.html":{}}}],["bands.service",{"_index":619,"title":{},"body":{"modules/BandsModule.html":{}}}],["bandscontroller",{"_index":360,"title":{"controllers/BandsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/BandsController.html":{},"modules/BandsModule.html":{}}}],["bandsmodule",{"_index":330,"title":{"modules/BandsModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/BandsModule.html":{},"modules.html":{},"overview.html":{}}}],["bandspecific",{"_index":565,"title":{},"body":{"entities/Band.html":{}}}],["bandsservice",{"_index":617,"title":{"injectables/BandsService.html":{}},"body":{"modules/BandsModule.html":{},"injectables/BandsService.html":{},"overview.html":{}}}],["banneduser",{"_index":631,"title":{"classes/BannedUser.html":{}},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["bar",{"_index":763,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["base.entity",{"_index":386,"title":{},"body":{"classes/AssociateUser-1.html":{},"entities/EventTemplate.html":{},"classes/OrganizerUser-1.html":{},"classes/PerformerUser-1.html":{},"classes/PublicUser-1.html":{},"entities/PublishedEvent.html":{},"classes/VenueUser-1.html":{}}}],["base/account.entity",{"_index":572,"title":{},"body":{"entities/Band.html":{},"entities/Musician.html":{},"entities/Organizer.html":{},"entities/Venue.html":{}}}],["base/business.class",{"_index":1626,"title":{},"body":{"entities/Organizer.html":{},"entities/Venue.html":{}}}],["base/performer.class",{"_index":573,"title":{},"body":{"entities/Band.html":{},"entities/Musician.html":{}}}],["based",{"_index":284,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"index.html":{},"todo.html":{}}}],["baseevent",{"_index":664,"title":{"classes/BaseEvent.html":{}},"body":{"classes/BaseEvent.html":{},"entities/EventTemplate.html":{},"entities/PublishedEvent.html":{}}}],["baseuser",{"_index":711,"title":{},"body":{"classes/BaseEvent.html":{}}}],["baseuserrole",{"_index":545,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["basic",{"_index":62,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/AssociateUser.html":{},"classes/BandAccount.html":{},"classes/BaseEvent.html":{},"classes/BusinessAccount.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerUser.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"classes/PerformerUser.html":{},"classes/PublicUser.html":{},"entities/User.html":{},"classes/VenueAccount.html":{},"classes/VenueUser.html":{},"todo.html":{}}}],["bass",{"_index":2159,"title":{},"body":{"entities/Venue.html":{}}}],["basses",{"_index":2158,"title":{},"body":{"entities/Venue.html":{}}}],["bcrypt",{"_index":933,"title":{},"body":{"injectables/CoreAuthService.html":{},"dependencies.html":{},"todo.html":{}}}],["bcrypt.compare(password",{"_index":974,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["bcrypt.hash(password",{"_index":980,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["bearer",{"_index":466,"title":{},"body":{"guards/AuthGuard.html":{},"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"classes/SwaggerDocBuilder.html":{},"guards/WebsocketGuard.html":{},"miscellaneous/enumerations.html":{}}}],["bearerformat",{"_index":1852,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["being",{"_index":2516,"title":{},"body":{"index.html":{}}}],["below",{"_index":1052,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["beta",{"_index":1523,"title":{},"body":{"classes/NetworksController.html":{}}}],["between",{"_index":2397,"title":{},"body":{"index.html":{}}}],["beyond",{"_index":2350,"title":{},"body":{"index.html":{}}}],["body",{"_index":600,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"classes/NetworksController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["bookingemail",{"_index":783,"title":{},"body":{"classes/BusinessContact.html":{},"classes/ContactDetails.html":{}}}],["bookingphone",{"_index":784,"title":{},"body":{"classes/BusinessContact.html":{},"classes/ContactDetails.html":{}}}],["bookmarkedby",{"_index":1125,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"classes/PastEvent.html":{},"entities/PublishedEvent.html":{}}}],["bookmarkedevents",{"_index":1898,"title":{},"body":{"entities/User.html":{}}}],["boolean",{"_index":36,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"classes/AssociateUser.html":{},"guards/AuthGuard-1.html":{},"classes/BandAccount.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"classes/Comment.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/MusicianAccount.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/Opinion.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{}}}],["bootstrap",{"_index":188,"title":{},"body":{"modules/AdminModule.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BandsModule.html":{},"modules/ChatModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/EventsModule.html":{},"modules/GraphqlModule.html":{},"modules/LocationsModule.html":{},"modules/MediaModule.html":{},"modules/MessagingModule.html":{},"modules/MusiciansModule.html":{},"modules/NetworksModule.html":{},"modules/NotificationModule.html":{},"modules/NotificationsModule.html":{},"modules/OrganizersModule.html":{},"modules/PresenceModule.html":{},"modules/StrategyModule.html":{},"modules/UsersModule.html":{},"modules/VenuesModule.html":{},"modules/WebsocketModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":957,"title":{},"body":{"injectables/CoreAuthService.html":{},"todo.html":{}}}],["brewery",{"_index":764,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["brief",{"_index":2064,"title":{},"body":{"entities/Venue.html":{}}}],["broadcast",{"_index":241,"title":{"classes/Broadcast.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["broadcast:152",{"_index":721,"title":{},"body":{"classes/Bulletin.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{}}}],["broadcast:153",{"_index":720,"title":{},"body":{"classes/Bulletin.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{}}}],["broadcast:154",{"_index":722,"title":{},"body":{"classes/Bulletin.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{}}}],["broadcastaudience",{"_index":263,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["broadcasts",{"_index":278,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["broadcasttype",{"_index":259,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["broker",{"_index":2395,"title":{},"body":{"index.html":{}}}],["browse",{"_index":2530,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2527,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1854,"title":{},"body":{"classes/SwaggerDocBuilder.html":{},"index.html":{}}}],["buildconfig",{"_index":1815,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["builddoc",{"_index":1816,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["builder.class.ts",{"_index":1814,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["builder.class.ts:21",{"_index":1820,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["builder.class.ts:24",{"_index":1824,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["builder.class.ts:34",{"_index":1823,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["builder.class.ts:43",{"_index":1822,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["building",{"_index":2381,"title":{},"body":{"index.html":{}}}],["built",{"_index":2355,"title":{},"body":{"index.html":{}}}],["bulletin",{"_index":242,"title":{"classes/Bulletin.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["bulletins",{"_index":279,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["business",{"_index":723,"title":{"classes/Business.html":{}},"body":{"classes/Business.html":{},"entities/Organizer.html":{},"entities/Venue.html":{}}}],["businessaccount",{"_index":729,"title":{"classes/BusinessAccount.html":{}},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["businesscontact",{"_index":781,"title":{"classes/BusinessContact.html":{}},"body":{"classes/BusinessContact.html":{},"classes/ContactDetails.html":{}}}],["cafe",{"_index":762,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["callbackurl",{"_index":1368,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-4.html":{}}}],["calls",{"_index":2610,"title":{},"body":{"todo.html":{}}}],["canactivate",{"_index":443,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"guards/WebsocketGuard.html":{}}}],["canactivate(context",{"_index":448,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"guards/WebsocketGuard.html":{}}}],["cancall",{"_index":11,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["cancelled",{"_index":1113,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"miscellaneous/enumerations.html":{}}}],["canemail",{"_index":12,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["cantext",{"_index":13,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["capacity",{"_index":562,"title":{},"body":{"classes/BackLine.html":{},"classes/BusinessAccount.html":{},"classes/Instrument.html":{},"classes/PASystem.html":{},"classes/PerformerAccount.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/Resource.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Tag.html":{},"entities/Venue.html":{},"classes/VenueKeyword.html":{},"classes/VersionedResource.html":{}}}],["card",{"_index":2109,"title":{},"body":{"entities/Venue.html":{}}}],["cascade",{"_index":1916,"title":{},"body":{"entities/User.html":{}}}],["case",{"_index":944,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["cash",{"_index":2110,"title":{},"body":{"entities/Venue.html":{}}}],["casino",{"_index":771,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["catch",{"_index":481,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["cd",{"_index":2447,"title":{},"body":{"index.html":{}}}],["certain",{"_index":2519,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":2231,"title":{"changelog.html":{}},"body":{}}],["changeme",{"_index":2038,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["channel",{"_index":430,"title":{},"body":{"controllers/AuthController.html":{},"classes/NotificationChannel.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{}}}],["channelid",{"_index":1543,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["channels",{"_index":2454,"title":{},"body":{"index.html":{},"todo.html":{}}}],["charge",{"_index":2141,"title":{},"body":{"entities/Venue.html":{}}}],["chat",{"_index":2405,"title":{},"body":{"index.html":{}}}],["chat.controller",{"_index":809,"title":{},"body":{"modules/ChatModule.html":{}}}],["chat.service",{"_index":803,"title":{},"body":{"controllers/ChatController.html":{},"modules/ChatModule.html":{}}}],["chatcontroller",{"_index":798,"title":{"controllers/ChatController.html":{}},"body":{"controllers/ChatController.html":{},"modules/ChatModule.html":{}}}],["chatmodule",{"_index":805,"title":{"modules/ChatModule.html":{}},"body":{"modules/ChatModule.html":{},"modules.html":{},"overview.html":{}}}],["chatservice",{"_index":802,"title":{"injectables/ChatService.html":{}},"body":{"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"overview.html":{}}}],["check",{"_index":969,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["childentity",{"_index":76,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/AssociateUser-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerUser-1.html":{},"classes/PerformerUser-1.html":{},"classes/PublicUser-1.html":{},"classes/VenueAccount.html":{},"classes/VenueUser-1.html":{}}}],["childentity(accounttype.band",{"_index":115,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["childentity(accounttype.musician",{"_index":110,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["childentity(accounttype.organizer",{"_index":121,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["childentity(accounttype.venue",{"_index":118,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["childentity(userrole.associate",{"_index":389,"title":{},"body":{"classes/AssociateUser-1.html":{}}}],["childentity(userrole.organizer",{"_index":1636,"title":{},"body":{"classes/OrganizerUser-1.html":{}}}],["childentity(userrole.performer",{"_index":1677,"title":{},"body":{"classes/PerformerUser-1.html":{}}}],["childentity(userrole.public",{"_index":1714,"title":{},"body":{"classes/PublicUser-1.html":{}}}],["childentity(userrole.venue",{"_index":2175,"title":{},"body":{"classes/VenueUser-1.html":{}}}],["children",{"_index":298,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["choose",{"_index":2435,"title":{},"body":{"index.html":{}}}],["city",{"_index":2076,"title":{},"body":{"entities/Venue.html":{}}}],["class",{"_index":99,"title":{"classes/Account-1.html":{},"classes/AdminGateway.html":{},"classes/Announcement.html":{},"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{},"classes/AuthMetadata.html":{},"classes/BackLine.html":{},"classes/BandAccount.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"classes/Comment.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"classes/CreateBandDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMusicianDto.html":{},"classes/CreateNetworkDto.html":{},"classes/CreateOrganizerDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateVenueDto.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"classes/EventReview.html":{},"classes/EventsGateway.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/GoogleLoginDto.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"classes/MessagingGateway.html":{},"classes/ModerationAction.html":{},"classes/MusicianAccount.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{},"classes/PASystem.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/PastEvent.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/PublicUser-1.html":{},"classes/RegisterDto.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"classes/Session.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"classes/UserPreferences.html":{},"classes/UsernameLoginDto.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VenueUser-1.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Announcement.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{},"entities/AuthAccount.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"classes/AuthMetadata.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/BackLine.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"modules/BandsModule.html":{},"injectables/BandsService.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/Comment.html":{},"modules/ConfigModule.html":{},"modules/ConnectionModule.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"classes/CreateBandDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMusicianDto.html":{},"classes/CreateNetworkDto.html":{},"classes/CreateOrganizerDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateVenueDto.html":{},"entities/Credentials.html":{},"injectables/CredentialsService.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"modules/GuardsModule.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"modules/LocationsModule.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"interfaces/LoginBase.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/MessagingGateway.html":{},"modules/MessagingModule.html":{},"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{},"classes/ModerationAction.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"modules/MusiciansModule.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"modules/NetworksModule.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"controllers/NotificationController.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"interfaces/NotificationServiceOptions.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{},"controllers/OrganizersController.html":{},"modules/OrganizersModule.html":{},"injectables/OrganizersService.html":{},"classes/PASystem.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/PastEvent.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{},"interfaces/PhysicalSpace.html":{},"classes/Post.html":{},"controllers/PresenceController.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/PublicUser-1.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/Session.html":{},"injectables/SessionsService.html":{},"injectables/SocialAuthService.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"modules/StrategyModule.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VenueUser-1.html":{},"controllers/VenuesController.html":{},"modules/VenuesModule.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"guards/WebsocketGuard.html":{},"modules/WebsocketModule.html":{}}}],["classes",{"_index":127,"title":{},"body":{"classes/Account-1.html":{},"classes/AdminGateway.html":{},"classes/Announcement.html":{},"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{},"classes/AuthMetadata.html":{},"classes/BackLine.html":{},"classes/BandAccount.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"classes/Comment.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"classes/CreateBandDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMusicianDto.html":{},"classes/CreateNetworkDto.html":{},"classes/CreateOrganizerDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateVenueDto.html":{},"entities/Credentials.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"classes/EventReview.html":{},"classes/EventsGateway.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/GoogleLoginDto.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"classes/MessagingGateway.html":{},"classes/ModerationAction.html":{},"classes/MusicianAccount.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{},"classes/PASystem.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/PastEvent.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/PublicUser-1.html":{},"classes/RegisterDto.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"classes/Session.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"classes/UserPreferences.html":{},"classes/UsernameLoginDto.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VenueUser-1.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"overview.html":{}}}],["clear",{"_index":2617,"title":{},"body":{"todo.html":{}}}],["client",{"_index":2415,"title":{},"body":{"index.html":{}}}],["clientid",{"_index":1071,"title":{},"body":{"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-3.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/UsernameLoginDto.html":{}}}],["clientproxy",{"_index":905,"title":{},"body":{"injectables/CoreAuthService.html":{},"injectables/EventsService.html":{},"injectables/NotificationService.html":{},"injectables/UsersService.html":{}}}],["clientsecret",{"_index":1072,"title":{},"body":{"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-3.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/UsernameLoginDto.html":{}}}],["clientsmodule",{"_index":519,"title":{},"body":{"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/NotificationModule.html":{},"modules/UsersModule.html":{}}}],["clientsmodule.register",{"_index":530,"title":{},"body":{"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/NotificationModule.html":{},"modules/UsersModule.html":{}}}],["clone",{"_index":2442,"title":{},"body":{"index.html":{}}}],["club",{"_index":767,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_adminmodule",{"_index":191,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":192,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_apimodule",{"_index":327,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_apimodule_imports",{"_index":328,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_authmodule",{"_index":508,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":2532,"title":{},"body":{"overview.html":{}}}],["cluster_authmodule_providers",{"_index":509,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bandsmodule",{"_index":615,"title":{},"body":{"modules/BandsModule.html":{},"overview.html":{}}}],["cluster_bandsmodule_providers",{"_index":616,"title":{},"body":{"modules/BandsModule.html":{},"overview.html":{}}}],["cluster_chatmodule",{"_index":806,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_chatmodule_providers",{"_index":807,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":818,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":819,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_connectionmodule",{"_index":2533,"title":{},"body":{"overview.html":{}}}],["cluster_connectionmodule_providers",{"_index":2534,"title":{},"body":{"overview.html":{}}}],["cluster_contentmodule",{"_index":889,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_providers",{"_index":890,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":1239,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_providers",{"_index":1240,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule",{"_index":1332,"title":{},"body":{"modules/GraphqlModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule_providers",{"_index":1333,"title":{},"body":{"modules/GraphqlModule.html":{},"overview.html":{}}}],["cluster_locationsmodule",{"_index":1416,"title":{},"body":{"modules/LocationsModule.html":{},"overview.html":{}}}],["cluster_locationsmodule_providers",{"_index":1417,"title":{},"body":{"modules/LocationsModule.html":{},"overview.html":{}}}],["cluster_mediamodule",{"_index":1442,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_mediamodule_providers",{"_index":1443,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_messagingmodule",{"_index":1459,"title":{},"body":{"modules/MessagingModule.html":{},"overview.html":{}}}],["cluster_messagingmodule_exports",{"_index":1461,"title":{},"body":{"modules/MessagingModule.html":{},"overview.html":{}}}],["cluster_messagingmodule_providers",{"_index":1460,"title":{},"body":{"modules/MessagingModule.html":{},"overview.html":{}}}],["cluster_musiciansmodule",{"_index":1485,"title":{},"body":{"modules/MusiciansModule.html":{},"overview.html":{}}}],["cluster_musiciansmodule_providers",{"_index":1486,"title":{},"body":{"modules/MusiciansModule.html":{},"overview.html":{}}}],["cluster_networksmodule",{"_index":1529,"title":{},"body":{"modules/NetworksModule.html":{},"overview.html":{}}}],["cluster_networksmodule_providers",{"_index":1530,"title":{},"body":{"modules/NetworksModule.html":{},"overview.html":{}}}],["cluster_notificationmodule",{"_index":1596,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_providers",{"_index":1597,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule",{"_index":1608,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_providers",{"_index":1609,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_organizersmodule",{"_index":1647,"title":{},"body":{"modules/OrganizersModule.html":{},"overview.html":{}}}],["cluster_organizersmodule_providers",{"_index":1648,"title":{},"body":{"modules/OrganizersModule.html":{},"overview.html":{}}}],["cluster_presencemodule",{"_index":1694,"title":{},"body":{"modules/PresenceModule.html":{},"overview.html":{}}}],["cluster_presencemodule_providers",{"_index":1695,"title":{},"body":{"modules/PresenceModule.html":{},"overview.html":{}}}],["cluster_strategymodule",{"_index":1806,"title":{},"body":{"modules/StrategyModule.html":{},"overview.html":{}}}],["cluster_strategymodule_exports",{"_index":1807,"title":{},"body":{"modules/StrategyModule.html":{},"overview.html":{}}}],["cluster_strategymodule_providers",{"_index":1808,"title":{},"body":{"modules/StrategyModule.html":{}}}],["cluster_usersmodule",{"_index":1994,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1995,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_venuesmodule",{"_index":2185,"title":{},"body":{"modules/VenuesModule.html":{},"overview.html":{}}}],["cluster_venuesmodule_providers",{"_index":2186,"title":{},"body":{"modules/VenuesModule.html":{},"overview.html":{}}}],["cluster_websocketmodule",{"_index":2225,"title":{},"body":{"modules/WebsocketModule.html":{},"overview.html":{}}}],["cluster_websocketmodule_imports",{"_index":2226,"title":{},"body":{"modules/WebsocketModule.html":{}}}],["cmd",{"_index":427,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CoreAuthService.html":{}}}],["code",{"_index":2081,"title":{},"body":{"entities/Venue.html":{},"index.html":{}}}],["column",{"_index":43,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/AuthAccount.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"classes/BaseEvent.html":{},"classes/Business.html":{},"entities/Contact.html":{},"classes/Content.html":{},"entities/Credentials.html":{},"entities/EventTemplate.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/OAuthCredentials.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/PasswordCredentials.html":{},"classes/Performer.html":{},"entities/PublishedEvent.html":{},"classes/Resource-1.html":{},"entities/Stage.html":{},"classes/Tag-1.html":{},"entities/User.html":{},"entities/User-1.html":{},"entities/UserSession.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VersionedResource-1.html":{}}}],["column()@apiproperty",{"_index":37,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Business.html":{},"entities/Contact.html":{},"entities/EventTemplate.html":{},"entities/Organizer.html":{},"classes/Performer.html":{}}}],["column()@apiproperty({description",{"_index":28,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Content.html":{},"entities/EventTemplate.html":{}}}],["column()@apiproperty({example",{"_index":1934,"title":{},"body":{"entities/User.html":{}}}],["column({default",{"_index":56,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BaseEvent.html":{},"entities/User.html":{}}}],["column({select",{"_index":1941,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":65,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/AuthAccount.html":{},"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"entities/PublishedEvent.html":{},"entities/Stage.html":{},"entities/User.html":{},"entities/Venue.html":{}}}],["column({unique",{"_index":1032,"title":{},"body":{"entities/Credentials.html":{},"classes/PasswordCredentials.html":{},"classes/Resource-1.html":{},"classes/Tag-1.html":{},"entities/User.html":{},"entities/UserSession.html":{}}}],["command",{"_index":2468,"title":{},"body":{"index.html":{}}}],["comment",{"_index":218,"title":{"classes/Comment.html":{}},"body":{"classes/Announcement.html":{},"classes/BannedUser.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["comments",{"_index":204,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["common",{"_index":231,"title":{},"body":{"classes/Announcement.html":{},"classes/BackLine.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PASystem.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["common.entity",{"_index":407,"title":{},"body":{"entities/AuthAccount.html":{},"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"entities/UserSession.html":{}}}],["common/resource.entity",{"_index":84,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BaseEvent.html":{},"classes/Content.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"entities/Stage.html":{},"classes/VenueAccount.html":{}}}],["common/tag.entity",{"_index":1171,"title":{},"body":{"entities/EventKeyword.html":{},"entities/Genre.html":{}}}],["commonmodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["communication",{"_index":2393,"title":{},"body":{"index.html":{},"todo.html":{}}}],["communities",{"_index":2361,"title":{},"body":{"index.html":{}}}],["community",{"_index":2286,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["complex",{"_index":772,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["components",{"_index":2155,"title":{},"body":{"entities/Venue.html":{}}}],["compose",{"_index":2489,"title":{},"body":{"index.html":{}}}],["compose.yml",{"_index":2491,"title":{},"body":{"index.html":{}}}],["comprehensive",{"_index":2503,"title":{},"body":{"index.html":{}}}],["config",{"_index":1843,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["config.options",{"_index":825,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configmodule",{"_index":361,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configoptions",{"_index":824,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configservice",{"_index":820,"title":{},"body":{"modules/ConfigModule.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"overview.html":{}}}],["configuration",{"_index":2490,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":2455,"title":{},"body":{"index.html":{}}}],["configure",{"_index":2428,"title":{},"body":{"index.html":{}}}],["conflictexception",{"_index":934,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["conflictexception('user",{"_index":964,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["connect",{"_index":2346,"title":{},"body":{"index.html":{}}}],["connected",{"_index":1257,"title":{},"body":{"injectables/EventsService-1.html":{}}}],["connection",{"_index":2215,"title":{},"body":{"guards/WebsocketGuard.html":{},"index.html":{}}}],["connectionmodule",{"_index":331,"title":{"modules/ConnectionModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConnectionModule.html":{},"modules.html":{},"overview.html":{}}}],["connectionmodule.forfeature([user",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionservice",{"_index":836,"title":{"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{}},"body":{"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"overview.html":{}}}],["consider",{"_index":2584,"title":{},"body":{"todo.html":{}}}],["considerations",{"_index":2602,"title":{},"body":{"todo.html":{}}}],["console.log('handshake",{"_index":2221,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["console.log('message",{"_index":1236,"title":{},"body":{"classes/EventsGateway.html":{}}}],["console.log('new",{"_index":1576,"title":{},"body":{"controllers/NotificationController.html":{}}}],["console.log('token",{"_index":2219,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["console.log(`socket",{"_index":1232,"title":{},"body":{"classes/EventsGateway.html":{},"injectables/EventsService-1.html":{}}}],["console.log(channel",{"_index":434,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(context.gettype",{"_index":2214,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["console.log(createvenuedto",{"_index":2200,"title":{},"body":{"injectables/VenuesService.html":{}}}],["console.log(data",{"_index":1238,"title":{},"body":{"classes/EventsGateway.html":{}}}],["console.log(err",{"_index":963,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["console.log(handshake.headers",{"_index":2223,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["console.log(message",{"_index":435,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(token",{"_index":2220,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["console.log(updatevenuedto",{"_index":2201,"title":{},"body":{"injectables/VenuesService.html":{}}}],["console.log(user",{"_index":1577,"title":{},"body":{"controllers/NotificationController.html":{}}}],["const",{"_index":429,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"injectables/CoreAuthService.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/SwaggerDocBuilder.html":{},"injectables/UsersService.html":{},"guards/WebsocketGuard.html":{}}}],["construction",{"_index":2520,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":135,"title":{},"body":{"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"controllers/AuthController-1.html":{},"guards/AuthGuard.html":{},"injectables/AuthService-1.html":{},"controllers/BandsController.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"injectables/CoreAuthService.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"injectables/EventsService.html":{},"injectables/ExternalAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{},"classes/MessagingGateway.html":{},"controllers/MusiciansController.html":{},"classes/NetworksController.html":{},"injectables/NotificationService.html":{},"controllers/OrganizersController.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/SwaggerDocBuilder.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"controllers/VenuesController.html":{},"guards/WebsocketGuard.html":{}}}],["constructor(adminservice",{"_index":158,"title":{},"body":{"classes/AdminGateway.html":{}}}],["constructor(app",{"_index":1818,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["constructor(authaccountrepository",{"_index":136,"title":{},"body":{"injectables/AccountService.html":{}}}],["constructor(authservice",{"_index":1404,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":843,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{}}}],["constructor(eventservice",{"_index":1215,"title":{},"body":{"classes/EventsGateway.html":{}}}],["constructor(jwtservice",{"_index":445,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["constructor(messagebroker",{"_index":904,"title":{},"body":{"injectables/CoreAuthService.html":{},"injectables/EventsService.html":{},"injectables/NotificationService.html":{},"injectables/UsersService.html":{}}}],["constructor(messagingservice",{"_index":1452,"title":{},"body":{"classes/MessagingGateway.html":{}}}],["constructor(networksservice",{"_index":1510,"title":{},"body":{"classes/NetworksController.html":{}}}],["constructor(private",{"_index":178,"title":{},"body":{"classes/AdminGateway.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/ChatController.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"controllers/ContentController.html":{},"controllers/EventsController.html":{},"classes/EventsGateway.html":{},"controllers/GraphqlController.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"classes/MessagingGateway.html":{},"classes/NetworksController.html":{},"controllers/NotificationController.html":{},"controllers/NotificationsController.html":{},"controllers/PresenceController.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/SwaggerDocBuilder.html":{},"controllers/UsersController.html":{},"guards/WebsocketGuard.html":{}}}],["constructor(reflector",{"_index":1762,"title":{},"body":{"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{}}}],["consumerkey",{"_index":1398,"title":{},"body":{"injectables/JwtStrategy-4.html":{}}}],["consumersecret",{"_index":1399,"title":{},"body":{"injectables/JwtStrategy-4.html":{}}}],["contact",{"_index":40,"title":{"entities/Contact.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"entities/Contact.html":{},"classes/MusicianAccount.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/UserPreferences.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{}}}],["contact_email",{"_index":1829,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["contact_name",{"_index":1830,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["contact_url",{"_index":1831,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["contactdetails",{"_index":791,"title":{"classes/ContactDetails.html":{}},"body":{"classes/BusinessContact.html":{},"classes/ContactDetails.html":{}}}],["containerization",{"_index":2385,"title":{},"body":{"index.html":{},"todo.html":{}}}],["containers",{"_index":2387,"title":{},"body":{"index.html":{}}}],["content",{"_index":205,"title":{"classes/Content.html":{}},"body":{"classes/Announcement.html":{},"classes/BannedUser.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/EventReview.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"index.html":{}}}],["content.controller",{"_index":892,"title":{},"body":{"modules/ContentModule.html":{}}}],["content.service",{"_index":886,"title":{},"body":{"controllers/ContentController.html":{},"modules/ContentModule.html":{}}}],["contentcontroller",{"_index":882,"title":{"controllers/ContentController.html":{}},"body":{"controllers/ContentController.html":{},"modules/ContentModule.html":{}}}],["contentmodule",{"_index":888,"title":{"modules/ContentModule.html":{}},"body":{"modules/ContentModule.html":{},"modules.html":{},"overview.html":{}}}],["contentservice",{"_index":885,"title":{"injectables/ContentService.html":{}},"body":{"controllers/ContentController.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"overview.html":{}}}],["context",{"_index":421,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"guards/WebsocketGuard.html":{}}}],["context.getchannelref",{"_index":431,"title":{},"body":{"controllers/AuthController.html":{}}}],["context.getclass",{"_index":1771,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":1770,"title":{},"body":{"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{}}}],["context.getmessage",{"_index":433,"title":{},"body":{"controllers/AuthController.html":{}}}],["context.switchtohttp().getrequest",{"_index":459,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{}}}],["context.switchtows().getclient",{"_index":2217,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["contributing",{"_index":2232,"title":{"contributing.html":{}},"body":{"index.html":{}}}],["contributions",{"_index":2509,"title":{},"body":{"index.html":{}}}],["controlled",{"_index":287,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["controller",{"_index":414,"title":{"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"controllers/BandsController.html":{},"controllers/ChatController.html":{},"controllers/ContentController.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"controllers/GraphqlController.html":{},"controllers/LocationsController.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"controllers/MusiciansController.html":{},"controllers/NotificationController.html":{},"controllers/NotificationsController.html":{},"controllers/OrganizersController.html":{},"controllers/PresenceController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"controllers/BandsController.html":{},"controllers/ChatController.html":{},"controllers/ContentController.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"controllers/GraphqlController.html":{},"controllers/LocationsController.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"controllers/MusiciansController.html":{},"controllers/NotificationController.html":{},"controllers/NotificationsController.html":{},"controllers/OrganizersController.html":{},"controllers/PresenceController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["controller('auth",{"_index":438,"title":{},"body":{"controllers/AuthController-1.html":{}}}],["controller('bands",{"_index":604,"title":{},"body":{"controllers/BandsController.html":{}}}],["controller('events",{"_index":1206,"title":{},"body":{"controllers/EventsController-1.html":{}}}],["controller('musicians",{"_index":1484,"title":{},"body":{"controllers/MusiciansController.html":{}}}],["controller('organizers",{"_index":1646,"title":{},"body":{"controllers/OrganizersController.html":{}}}],["controller('users",{"_index":1993,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["controller('venues",{"_index":2184,"title":{},"body":{"controllers/VenuesController.html":{}}}],["controllers",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"modules/AuthModule.html":{},"controllers/BandsController.html":{},"modules/BandsModule.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"controllers/ContentController.html":{},"modules/ContentModule.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"modules/EventsModule.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"controllers/LocationsController.html":{},"modules/LocationsModule.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"modules/MediaModule.html":{},"controllers/MusiciansController.html":{},"modules/MusiciansModule.html":{},"modules/NetworksModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"controllers/OrganizersController.html":{},"modules/OrganizersModule.html":{},"controllers/PresenceController.html":{},"modules/PresenceModule.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"controllers/VenuesController.html":{},"modules/VenuesModule.html":{},"overview.html":{}}}],["controllers/auth.controller",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/bands.controller",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/events.controller",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/musicians.controller",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/organizers.controller",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/users.controller",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/venues.controller",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["coordinate",{"_index":2084,"title":{},"body":{"entities/Venue.html":{}}}],["copyright",{"_index":642,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"miscellaneous/enumerations.html":{}}}],["core",{"_index":2515,"title":{},"body":{"index.html":{},"todo.html":{}}}],["core.service",{"_index":521,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["coreauthservice",{"_index":510,"title":{"injectables/CoreAuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/CoreAuthService.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["coupling",{"_index":2400,"title":{},"body":{"index.html":{}}}],["cover",{"_index":2140,"title":{},"body":{"entities/Venue.html":{}}}],["coverage",{"_index":2504,"title":{},"body":{"index.html":{}}}],["covercharge",{"_index":2139,"title":{},"body":{"entities/Venue.html":{}}}],["create",{"_index":581,"title":{},"body":{"controllers/BandsController.html":{},"injectables/BandsService.html":{},"injectables/CoreAuthService.html":{},"controllers/EventsController-1.html":{},"injectables/EventsService.html":{},"injectables/LocationsService.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"index.html":{}}}],["create(@body",{"_index":605,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"classes/NetworksController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["create(createbanddto",{"_index":586,"title":{},"body":{"controllers/BandsController.html":{},"injectables/BandsService.html":{}}}],["create(createeventdto",{"_index":1199,"title":{},"body":{"controllers/EventsController-1.html":{},"injectables/EventsService.html":{}}}],["create(createlocationdto",{"_index":1421,"title":{},"body":{"injectables/LocationsService.html":{}}}],["create(createmusiciandto",{"_index":1477,"title":{},"body":{"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{}}}],["create(createnetworkdto",{"_index":1513,"title":{},"body":{"classes/NetworksController.html":{},"injectables/NetworksService.html":{}}}],["create(createorganizerdto",{"_index":1639,"title":{},"body":{"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{}}}],["create(createuserdto",{"_index":1987,"title":{},"body":{"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["create(createvenuedto",{"_index":2178,"title":{},"body":{"controllers/VenuesController.html":{},"injectables/VenuesService.html":{}}}],["createbanddto",{"_index":588,"title":{"classes/CreateBandDto.html":{}},"body":{"controllers/BandsController.html":{},"injectables/BandsService.html":{},"classes/CreateBandDto.html":{},"classes/UpdateBandDto.html":{}}}],["created",{"_index":1571,"title":{},"body":{"controllers/NotificationController.html":{},"classes/Resource-1.html":{},"injectables/UsersService.html":{},"classes/VersionedResource-1.html":{}}}],["createdat",{"_index":210,"title":{},"body":{"classes/Announcement.html":{},"classes/AssociateUser.html":{},"classes/AuthMetadata.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/Instrument.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"interfaces/PhysicalSpace.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/Tag.html":{},"entities/User.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}}}],["createdatecolumn",{"_index":501,"title":{},"body":{"classes/AuthMetadata.html":{},"entities/Contact.html":{},"classes/Resource-1.html":{},"entities/User.html":{},"classes/VersionedResource-1.html":{}}}],["createdatecolumn()@apiproperty({description",{"_index":1745,"title":{},"body":{"classes/Resource-1.html":{}}}],["createdatecolumn()@apiproperty({example",{"_index":1920,"title":{},"body":{"entities/User.html":{}}}],["createdby",{"_index":668,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["createdeventdrafts",{"_index":1899,"title":{},"body":{"entities/User.html":{}}}],["createdevents",{"_index":1900,"title":{},"body":{"entities/User.html":{}}}],["createdeventtemplates",{"_index":1901,"title":{},"body":{"entities/User.html":{}}}],["createeventdto",{"_index":984,"title":{"classes/CreateEventDto.html":{}},"body":{"classes/CreateEventDto.html":{},"controllers/EventsController-1.html":{},"injectables/EventsService.html":{},"classes/UpdateEventDto.html":{}}}],["createlocationdto",{"_index":987,"title":{"classes/CreateLocationDto.html":{}},"body":{"classes/CreateLocationDto.html":{},"injectables/LocationsService.html":{},"classes/UpdateLocationDto.html":{}}}],["createmusiciandto",{"_index":990,"title":{"classes/CreateMusicianDto.html":{}},"body":{"classes/CreateMusicianDto.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/UpdateMusicianDto.html":{}}}],["createnetworkdto",{"_index":993,"title":{"classes/CreateNetworkDto.html":{}},"body":{"classes/CreateNetworkDto.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"classes/UpdateNetworkDto.html":{}}}],["createorganizerdto",{"_index":996,"title":{"classes/CreateOrganizerDto.html":{}},"body":{"classes/CreateOrganizerDto.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"classes/UpdateOrganizerDto.html":{}}}],["creates",{"_index":606,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{},"index.html":{}}}],["createuserdto",{"_index":939,"title":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{}},"body":{"injectables/CoreAuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["createvenuedto",{"_index":1012,"title":{"classes/CreateVenueDto.html":{}},"body":{"classes/CreateVenueDto.html":{},"classes/UpdateVenueDto.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{}}}],["credentials",{"_index":376,"title":{"entities/Credentials.html":{}},"body":{"classes/AssociateUser.html":{},"entities/AuthAccount.html":{},"modules/AuthModule.html":{},"injectables/CoreAuthService.html":{},"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/OrganizerUser.html":{},"classes/PasswordCredentials.html":{},"classes/PerformerUser.html":{},"classes/PublicUser.html":{},"classes/Session.html":{},"classes/VenueUser.html":{},"todo.html":{}}}],["credentials.account",{"_index":393,"title":{},"body":{"entities/AuthAccount.html":{}}}],["credentials.entity",{"_index":405,"title":{},"body":{"entities/AuthAccount.html":{}}}],["credentialsprovider",{"_index":1040,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"miscellaneous/enumerations.html":{}}}],["credentialsservice",{"_index":511,"title":{"injectables/CredentialsService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/CoreAuthService.html":{},"injectables/CredentialsService.html":{},"overview.html":{}}}],["credentialstype",{"_index":1048,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"miscellaneous/enumerations.html":{}}}],["credit",{"_index":2108,"title":{},"body":{"entities/Venue.html":{}}}],["crud",{"_index":2571,"title":{},"body":{"todo.html":{}}}],["csrf",{"_index":2614,"title":{},"body":{"todo.html":{}}}],["ctx",{"_index":424,"title":{},"body":{"controllers/AuthController.html":{}}}],["currently",{"_index":2506,"title":{},"body":{"index.html":{}}}],["d",{"_index":2495,"title":{},"body":{"index.html":{}}}],["daily",{"_index":1583,"title":{},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{},"entities/Venue.html":{},"miscellaneous/enumerations.html":{}}}],["data",{"_index":165,"title":{},"body":{"classes/AdminGateway.html":{},"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"classes/MessagingGateway.html":{},"controllers/MusiciansController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{},"todo.html":{}}}],["database",{"_index":346,"title":{},"body":{"modules/ApiModule.html":{},"index.html":{},"todo.html":{}}}],["database/datastore",{"_index":2576,"title":{},"body":{"todo.html":{}}}],["database_url=postgres://user:password@host:port/database",{"_index":2461,"title":{},"body":{"index.html":{}}}],["date",{"_index":42,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"classes/AssociateUser.html":{},"classes/AuthMetadata.html":{},"classes/BandAccount.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/MusicianAccount.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/Opinion.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"interfaces/PhysicalSpace.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"entities/PublishedEvent.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/Tag.html":{},"classes/Thread.html":{},"entities/User.html":{},"classes/UserPreferences.html":{},"entities/UserSession.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}}}],["deactivatedat",{"_index":14,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["decide",{"_index":2577,"title":{},"body":{"todo.html":{}}}],["declarations",{"_index":187,"title":{},"body":{"modules/AdminModule.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BandsModule.html":{},"modules/ChatModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/EventsModule.html":{},"modules/GraphqlModule.html":{},"modules/LocationsModule.html":{},"modules/MediaModule.html":{},"modules/MessagingModule.html":{},"modules/MusiciansModule.html":{},"modules/NetworksModule.html":{},"modules/NotificationModule.html":{},"modules/NotificationsModule.html":{},"modules/OrganizersModule.html":{},"modules/PresenceModule.html":{},"modules/StrategyModule.html":{},"modules/UsersModule.html":{},"modules/VenuesModule.html":{},"modules/WebsocketModule.html":{},"overview.html":{}}}],["decorators",{"_index":27,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/AdminGateway.html":{},"entities/AuthAccount.html":{},"controllers/AuthController.html":{},"classes/AuthMetadata.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"classes/BaseEvent.html":{},"classes/Business.html":{},"controllers/ChatController.html":{},"entities/Contact.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"classes/CreateUserDto.html":{},"entities/Credentials.html":{},"classes/EmailLoginDto.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"entities/EventTemplate.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"controllers/GraphqlController.html":{},"controllers/LocationsController.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"classes/MessagingGateway.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworksController.html":{},"controllers/NotificationController.html":{},"controllers/NotificationsController.html":{},"classes/OAuthCredentials.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerUser-1.html":{},"controllers/OrganizersController.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/Performer.html":{},"classes/PerformerUser-1.html":{},"controllers/PresenceController.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/Resource-1.html":{},"entities/Stage.html":{},"classes/Tag-1.html":{},"entities/User.html":{},"entities/User-1.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueUser-1.html":{},"controllers/VenuesController.html":{},"classes/VersionedResource-1.html":{}}}],["default",{"_index":101,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/AuthAccount.html":{},"classes/BandAccount.html":{},"classes/BaseEvent.html":{},"injectables/CoreAuthService.html":{},"classes/CreateUserDto.html":{},"classes/EventReview.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"entities/PublishedEvent.html":{},"entities/Stage.html":{},"entities/User.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"miscellaneous/functions.html":{}}}],["define",{"_index":320,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"index.html":{},"todo.html":{}}}],["defined",{"_index":30,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"classes/Announcement.html":{},"entities/AuthAccount.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"classes/AuthMetadata.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"injectables/BandsService.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"controllers/ChatController.html":{},"injectables/ChatService.html":{},"classes/Comment.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"classes/CreateUserDto.html":{},"entities/Credentials.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"controllers/GraphqlController.html":{},"injectables/GraphqlService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/MessagingGateway.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser-1.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser-1.html":{},"classes/Post.html":{},"controllers/PresenceController.html":{},"injectables/PresenceService.html":{},"classes/PrivateGroup.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"classes/VenueUser-1.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"guards/WebsocketGuard.html":{},"index.html":{}}}],["definition",{"_index":2616,"title":{},"body":{"todo.html":{}}}],["delete",{"_index":603,"title":{},"body":{"controllers/BandsController.html":{},"entities/Credentials.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"classes/NetworksController.html":{},"classes/OAuthCredentials.html":{},"controllers/OrganizersController.html":{},"classes/PasswordCredentials.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"controllers/VenuesController.html":{}}}],["delete(':id",{"_index":594,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"classes/NetworksController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["deletes",{"_index":614,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["dependencies",{"_index":185,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BandsModule.html":{},"modules/ChatModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/EventsModule.html":{},"modules/GraphqlModule.html":{},"modules/LocationsModule.html":{},"modules/MediaModule.html":{},"modules/MessagingModule.html":{},"modules/MusiciansModule.html":{},"modules/NetworksModule.html":{},"modules/NotificationModule.html":{},"modules/NotificationsModule.html":{},"modules/OrganizersModule.html":{},"modules/PresenceModule.html":{},"modules/StrategyModule.html":{},"modules/UsersModule.html":{},"modules/VenuesModule.html":{},"modules/WebsocketModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deployment",{"_index":2390,"title":{},"body":{"index.html":{},"todo.html":{}}}],["description",{"_index":102,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"interfaces/AuthOptions.html":{},"classes/BandAccount.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"interfaces/FindOneOptions.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/Instrument.html":{},"classes/MusicianAccount.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/PastEvent.html":{},"interfaces/PatchOptions.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"interfaces/PhysicalSpace.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Statement.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"properties.html":{}}}],["designed",{"_index":2345,"title":{},"body":{"index.html":{}}}],["details",{"_index":663,"title":{},"body":{"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/BusinessAccount.html":{},"entities/Contact.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"entities/Venue.html":{}}}],["dev",{"_index":832,"title":{},"body":{"modules/ConnectionModule.html":{}}}],["developed",{"_index":2518,"title":{},"body":{"index.html":{}}}],["development",{"_index":2341,"title":{},"body":{"index.html":{},"todo.html":{}}}],["different",{"_index":2391,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2451,"title":{},"body":{"index.html":{}}}],["disable",{"_index":492,"title":{},"body":{"guards/AuthGuard-1.html":{}}}],["disagrees",{"_index":244,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["disclaimer",{"_index":2513,"title":{},"body":{"index.html":{}}}],["disconnecting",{"_index":1234,"title":{},"body":{"classes/EventsGateway.html":{}}}],["discrimination",{"_index":636,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"miscellaneous/enumerations.html":{}}}],["discriminator",{"_index":68,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"entities/User.html":{},"classes/VenueAccount.html":{}}}],["display",{"_index":1560,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["displayname",{"_index":1351,"title":{},"body":{"classes/Instrument.html":{},"interfaces/PhysicalSpace.html":{},"classes/Resource.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/VenueKeyword.html":{},"classes/VersionedResource.html":{}}}],["distillery",{"_index":766,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["divided",{"_index":2366,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1813,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["docker",{"_index":2334,"title":{},"body":{"index.html":{},"todo.html":{}}}],["docs",{"_index":1839,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["documentation",{"_index":2431,"title":{},"body":{"index.html":{}}}],["documentbuilder",{"_index":1825,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["documented",{"_index":2618,"title":{},"body":{"todo.html":{}}}],["down",{"_index":2627,"title":{},"body":{"todo.html":{}}}],["draft",{"_index":1127,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["dress",{"_index":2125,"title":{},"body":{"entities/Venue.html":{}}}],["dresscode",{"_index":2123,"title":{},"body":{"entities/Venue.html":{}}}],["drink",{"_index":2146,"title":{},"body":{"entities/Venue.html":{}}}],["drinkminimum",{"_index":2145,"title":{},"body":{"entities/Venue.html":{}}}],["drum",{"_index":2153,"title":{},"body":{"entities/Venue.html":{}}}],["drums",{"_index":2150,"title":{},"body":{"entities/Venue.html":{}}}],["dto",{"_index":315,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"injectables/CoreAuthService.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["duration",{"_index":1135,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"entities/EventTemplate.html":{},"classes/PastEvent.html":{},"entities/Venue.html":{}}}],["e.g",{"_index":2098,"title":{},"body":{"entities/Venue.html":{},"index.html":{},"todo.html":{}}}],["each",{"_index":2369,"title":{},"body":{"index.html":{},"todo.html":{}}}],["easier",{"_index":2376,"title":{},"body":{"index.html":{},"todo.html":{}}}],["editor",{"_index":2433,"title":{},"body":{"index.html":{}}}],["editorof",{"_index":1902,"title":{},"body":{"entities/User.html":{}}}],["editorofdraft",{"_index":1903,"title":{},"body":{"entities/User.html":{}}}],["editoroftemplate",{"_index":1904,"title":{},"body":{"entities/User.html":{}}}],["editors",{"_index":669,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["efficient",{"_index":2382,"title":{},"body":{"index.html":{}}}],["effort",{"_index":2633,"title":{},"body":{"todo.html":{}}}],["email",{"_index":794,"title":{},"body":{"classes/BusinessContact.html":{},"classes/ContactDetails.html":{},"entities/Credentials.html":{},"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/NotificationChannel.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"entities/User.html":{},"classes/UserPreferences.html":{},"classes/UsernameLoginDto.html":{},"miscellaneous/enumerations.html":{}}}],["emaillogindto",{"_index":1061,"title":{"classes/EmailLoginDto.html":{}},"body":{"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/UsernameLoginDto.html":{},"miscellaneous/typealiases.html":{}}}],["employs",{"_index":2386,"title":{},"body":{"index.html":{}}}],["enable",{"_index":2404,"title":{},"body":{"index.html":{}}}],["enabled",{"_index":1580,"title":{},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{},"entities/Venue.html":{}}}],["encouraged",{"_index":2498,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":2619,"title":{},"body":{"todo.html":{}}}],["enforce",{"_index":2608,"title":{},"body":{"todo.html":{}}}],["ensure",{"_index":2422,"title":{},"body":{"index.html":{},"todo.html":{}}}],["ensuring",{"_index":2398,"title":{},"body":{"index.html":{}}}],["entertainment",{"_index":2348,"title":{},"body":{"index.html":{}}}],["enthusiasts",{"_index":2347,"title":{},"body":{"index.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/Account.html":{},"entities/AuthAccount.html":{},"modules/AuthModule.html":{},"entities/Band.html":{},"modules/ConnectionModule.html":{},"entities/Contact.html":{},"entities/Credentials.html":{},"entities/EventKeyword.html":{},"entities/EventTemplate.html":{},"entities/Genre.html":{},"entities/Musician.html":{},"entities/Network.html":{},"entities/Organizer.html":{},"entities/PublishedEvent.html":{},"entities/Stage.html":{},"entities/User.html":{},"entities/User-1.html":{},"entities/UserSession.html":{},"entities/Venue.html":{},"overview.html":{}}}],["entities/account",{"_index":828,"title":{},"body":{"modules/ConnectionModule.html":{}}}],["entities/account.entity",{"_index":148,"title":{},"body":{"injectables/AccountService.html":{}}}],["entity",{"_index":0,"title":{"entities/Account.html":{},"entities/AuthAccount.html":{},"entities/Band.html":{},"entities/Contact.html":{},"entities/Credentials.html":{},"entities/EventKeyword.html":{},"entities/EventTemplate.html":{},"entities/Genre.html":{},"entities/Musician.html":{},"entities/Network.html":{},"entities/Organizer.html":{},"entities/PublishedEvent.html":{},"entities/Stage.html":{},"entities/User.html":{},"entities/User-1.html":{},"entities/UserSession.html":{},"entities/Venue.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/AuthAccount.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"entities/Contact.html":{},"entities/Credentials.html":{},"entities/EventKeyword.html":{},"entities/EventTemplate.html":{},"entities/Genre.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/OAuthCredentials.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/PasswordCredentials.html":{},"entities/PublishedEvent.html":{},"entities/Stage.html":{},"entities/User.html":{},"entities/User-1.html":{},"entities/UserSession.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{}}}],["entry",{"_index":2135,"title":{},"body":{"entities/Venue.html":{}}}],["enum",{"_index":66,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"classes/AssociateUser.html":{},"entities/AuthAccount.html":{},"classes/BackLine.html":{},"classes/BandAccount.html":{},"classes/BannedUser.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"entities/Credentials.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/GoogleLoginDto.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/IssuedWarning.html":{},"interfaces/LoginBase.html":{},"classes/ModerationAction.html":{},"classes/MusicianAccount.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/PASystem.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"entities/PublishedEvent.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"entities/User.html":{},"classes/UserPreferences.html":{},"classes/UsernameLoginDto.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{}}}],["enumerations",{"_index":2265,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":1799,"title":{},"body":{"entities/Stage.html":{}}}],["enums/account",{"_index":85,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["enums/user",{"_index":387,"title":{},"body":{"classes/AssociateUser-1.html":{},"classes/OrganizerUser-1.html":{},"classes/PerformerUser-1.html":{},"classes/PublicUser-1.html":{},"entities/User.html":{},"classes/VenueUser-1.html":{}}}],["enums/venue",{"_index":2060,"title":{},"body":{"entities/Venue.html":{}}}],["env",{"_index":2449,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":2458,"title":{},"body":{"index.html":{}}}],["environment",{"_index":2418,"title":{},"body":{"index.html":{}}}],["environments",{"_index":2392,"title":{},"body":{"index.html":{}}}],["equipment",{"_index":2162,"title":{},"body":{"entities/Venue.html":{}}}],["eslint",{"_index":491,"title":{},"body":{"guards/AuthGuard-1.html":{}}}],["eslint/no",{"_index":496,"title":{},"body":{"guards/AuthGuard-1.html":{}}}],["essential",{"_index":2452,"title":{},"body":{"index.html":{}}}],["estimate",{"_index":2632,"title":{},"body":{"todo.html":{}}}],["etc",{"_index":271,"title":{},"body":{"classes/Announcement.html":{},"classes/BannedUser.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"index.html":{}}}],["event",{"_index":233,"title":{"classes/Event.html":{}},"body":{"classes/Announcement.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"controllers/EventsController-1.html":{},"injectables/EventsService.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PastEvent.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"entities/PublishedEvent.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"entities/User.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["event.admins",{"_index":1958,"title":{},"body":{"entities/User.html":{}}}],["event.bookmarkedby",{"_index":1918,"title":{},"body":{"entities/User.html":{}}}],["event.createdby",{"_index":1957,"title":{},"body":{"entities/User.html":{}}}],["event.dto",{"_index":1872,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["event.dto.ts",{"_index":986,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/UpdateEventDto.html":{}}}],["event.editors",{"_index":1959,"title":{},"body":{"entities/User.html":{}}}],["event.genres",{"_index":1319,"title":{},"body":{"entities/Genre.html":{}}}],["event.keywords",{"_index":1163,"title":{},"body":{"entities/EventKeyword.html":{}}}],["event.lastupdatedby",{"_index":1956,"title":{},"body":{"entities/User.html":{}}}],["event.registeredusers",{"_index":1955,"title":{},"body":{"entities/User.html":{}}}],["event.viewers",{"_index":1960,"title":{},"body":{"entities/User.html":{}}}],["event/draft.entity",{"_index":1169,"title":{},"body":{"entities/EventKeyword.html":{},"entities/Genre.html":{},"entities/User.html":{}}}],["event/published.entity",{"_index":1167,"title":{},"body":{"entities/EventKeyword.html":{},"entities/Genre.html":{},"entities/User.html":{}}}],["event/template.entity",{"_index":1168,"title":{},"body":{"entities/EventKeyword.html":{},"entities/Genre.html":{},"entities/User.html":{}}}],["event_update",{"_index":257,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["eventdetails",{"_index":2652,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["eventdraft",{"_index":1128,"title":{"classes/EventDraft.html":{},"classes/EventDraft-1.html":{}},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"entities/Genre.html":{},"classes/PastEvent.html":{},"entities/User.html":{}}}],["eventdraftedits",{"_index":1905,"title":{},"body":{"entities/User.html":{}}}],["eventdrafts",{"_index":1160,"title":{},"body":{"entities/EventKeyword.html":{},"entities/Genre.html":{}}}],["eventedits",{"_index":1906,"title":{},"body":{"entities/User.html":{}}}],["eventkeyword",{"_index":1087,"title":{"entities/EventKeyword.html":{}},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"entities/EventTemplate.html":{},"classes/Instrument.html":{},"classes/PastEvent.html":{},"interfaces/PhysicalSpace.html":{},"entities/PublishedEvent.html":{},"classes/Resource.html":{},"classes/Tag.html":{},"classes/VenueKeyword.html":{},"classes/VersionedResource.html":{}}}],["eventpattern",{"_index":1574,"title":{},"body":{"controllers/NotificationController.html":{}}}],["eventpattern('user",{"_index":1570,"title":{},"body":{"controllers/NotificationController.html":{}}}],["eventreview",{"_index":253,"title":{"classes/EventReview.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["events",{"_index":1198,"title":{},"body":{"controllers/EventsController-1.html":{},"entities/Venue.html":{},"index.html":{},"properties.html":{}}}],["events.controller",{"_index":1243,"title":{},"body":{"modules/EventsModule.html":{}}}],["events.service",{"_index":1195,"title":{},"body":{"controllers/EventsController.html":{},"classes/EventsGateway.html":{},"modules/EventsModule.html":{}}}],["eventscontroller",{"_index":356,"title":{"controllers/EventsController.html":{},"controllers/EventsController-1.html":{}},"body":{"modules/AppModule.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"modules/EventsModule.html":{}}}],["eventservice",{"_index":1217,"title":{},"body":{"classes/EventsGateway.html":{}}}],["eventsgateway",{"_index":1207,"title":{"classes/EventsGateway.html":{}},"body":{"classes/EventsGateway.html":{}}}],["eventsinputs",{"_index":2653,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["eventsmodule",{"_index":332,"title":{"modules/EventsModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/EventsModule.html":{},"modules/WebsocketModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsoutputs",{"_index":2654,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["eventsrepository",{"_index":1246,"title":{},"body":{"injectables/EventsService.html":{}}}],["eventsservice",{"_index":1194,"title":{"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{}},"body":{"controllers/EventsController.html":{},"classes/EventsGateway.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"overview.html":{}}}],["eventstatus",{"_index":1112,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"entities/PublishedEvent.html":{},"miscellaneous/enumerations.html":{}}}],["eventstatus.unscheduled",{"_index":1730,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["eventtemplate",{"_index":1131,"title":{"entities/EventTemplate.html":{}},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"entities/EventKeyword.html":{},"entities/EventTemplate.html":{},"entities/Genre.html":{},"classes/PastEvent.html":{},"entities/User.html":{}}}],["eventtemplateedits",{"_index":1907,"title":{},"body":{"entities/User.html":{}}}],["eventtemplates",{"_index":1161,"title":{},"body":{"entities/EventKeyword.html":{},"entities/Genre.html":{}}}],["eventtype",{"_index":1107,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"miscellaneous/enumerations.html":{}}}],["eventually",{"_index":1931,"title":{},"body":{"entities/User.html":{}}}],["example",{"_index":29,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"entities/Contact.html":{},"classes/Content.html":{},"classes/CreateUserDto.html":{},"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PasswordLogin.html":{},"classes/RegisterDto.html":{},"classes/Resource-1.html":{},"entities/User.html":{},"classes/UsernameLoginDto.html":{},"classes/VenueAccount.html":{},"classes/VersionedResource-1.html":{},"index.html":{}}}],["example_uuid",{"_index":1749,"title":{},"body":{"classes/Resource-1.html":{},"classes/VersionedResource-1.html":{}}}],["examples/user.example",{"_index":1007,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["examples/uuid.example",{"_index":1757,"title":{},"body":{"classes/Resource-1.html":{},"classes/VersionedResource-1.html":{}}}],["exampleuser",{"_index":1006,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"classes/UsernameLoginDto.html":{}}}],["exampleuser.createdat",{"_index":1951,"title":{},"body":{"entities/User.html":{}}}],["exampleuser.email",{"_index":1953,"title":{},"body":{"entities/User.html":{}}}],["exampleuser.firstname",{"_index":1008,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{}}}],["exampleuser.id",{"_index":1950,"title":{},"body":{"entities/User.html":{}}}],["exampleuser.lastname",{"_index":1009,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{}}}],["exampleuser.lastupdatedat",{"_index":1952,"title":{},"body":{"entities/User.html":{}}}],["exampleuser.username",{"_index":1010,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"classes/UsernameLoginDto.html":{}}}],["exclude",{"_index":213,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["executioncontext",{"_index":449,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"guards/WebsocketGuard.html":{}}}],["exists",{"_index":306,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"injectables/CoreAuthService.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["expand",{"_index":2574,"title":{},"body":{"todo.html":{}}}],["experiences",{"_index":2349,"title":{},"body":{"index.html":{}}}],["experiencesummary",{"_index":780,"title":{},"body":{"classes/BusinessAccount.html":{},"entities/Organizer.html":{},"classes/PerformerAccount.html":{}}}],["expiration",{"_index":2593,"title":{},"body":{"todo.html":{}}}],["expiresat",{"_index":1017,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"entities/UserSession.html":{}}}],["export",{"_index":98,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Announcement.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{},"entities/AuthAccount.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"classes/AuthMetadata.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/BackLine.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"modules/BandsModule.html":{},"injectables/BandsService.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/Comment.html":{},"modules/ConfigModule.html":{},"modules/ConnectionModule.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"classes/CreateBandDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMusicianDto.html":{},"classes/CreateNetworkDto.html":{},"classes/CreateOrganizerDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateVenueDto.html":{},"entities/Credentials.html":{},"injectables/CredentialsService.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"modules/GuardsModule.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"modules/LocationsModule.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"interfaces/LoginBase.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/MessagingGateway.html":{},"modules/MessagingModule.html":{},"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{},"classes/ModerationAction.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"modules/MusiciansModule.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"modules/NetworksModule.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"controllers/NotificationController.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"interfaces/NotificationServiceOptions.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{},"controllers/OrganizersController.html":{},"modules/OrganizersModule.html":{},"injectables/OrganizersService.html":{},"classes/PASystem.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/PastEvent.html":{},"interfaces/PatchOptions.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/Post.html":{},"controllers/PresenceController.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/PublicUser-1.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/Session.html":{},"injectables/SessionsService.html":{},"injectables/SocialAuthService.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"modules/StrategyModule.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VenueUser-1.html":{},"controllers/VenuesController.html":{},"modules/VenuesModule.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"guards/WebsocketGuard.html":{},"modules/WebsocketModule.html":{}}}],["exports",{"_index":190,"title":{},"body":{"modules/AdminModule.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BandsModule.html":{},"modules/ChatModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/EventsModule.html":{},"modules/GraphqlModule.html":{},"modules/LocationsModule.html":{},"modules/MediaModule.html":{},"modules/MessagingModule.html":{},"modules/MusiciansModule.html":{},"modules/NetworksModule.html":{},"modules/NotificationModule.html":{},"modules/NotificationsModule.html":{},"modules/OrganizersModule.html":{},"modules/PresenceModule.html":{},"modules/StrategyModule.html":{},"modules/UsersModule.html":{},"modules/VenuesModule.html":{},"modules/WebsocketModule.html":{},"overview.html":{}}}],["exposes",{"_index":2411,"title":{},"body":{"index.html":{}}}],["express",{"_index":456,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{}}}],["extended",{"_index":754,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["extends",{"_index":100,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"classes/AssociateUser-1.html":{},"entities/AuthAccount.html":{},"classes/BackLine.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Content.html":{},"entities/Credentials.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoginBase.html":{},"classes/ModerationAction.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser-1.html":{},"classes/PASystem.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/PastEvent.html":{},"interfaces/PatchOptions.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser-1.html":{},"interfaces/PhysicalSpace.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser-1.html":{},"entities/PublishedEvent.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/Tag.html":{},"classes/Thread.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser-1.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}}}],["external",{"_index":322,"title":{},"body":{"classes/Announcement.html":{},"modules/ApiModule.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["externalaccesstoken",{"_index":1266,"title":{},"body":{"injectables/ExternalAuthService.html":{}}}],["externalauthservice",{"_index":1261,"title":{"injectables/ExternalAuthService.html":{}},"body":{"injectables/ExternalAuthService.html":{}}}],["externalprovider",{"_index":1268,"title":{},"body":{"injectables/ExternalAuthService.html":{}}}],["extractjwt",{"_index":1380,"title":{},"body":{"injectables/JwtStrategy-2.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1382,"title":{},"body":{"injectables/JwtStrategy-2.html":{}}}],["extracttokenfromhandshake",{"_index":2207,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["extracttokenfromhandshake(handshake",{"_index":2210,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["extracttokenfromheader",{"_index":444,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":451,"title":{},"body":{"guards/AuthGuard.html":{}}}],["facebook",{"_index":1366,"title":{},"body":{"injectables/JwtStrategy.html":{},"entities/Venue.html":{},"dependencies.html":{}}}],["facebookurl",{"_index":15,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["facilitating",{"_index":2389,"title":{},"body":{"index.html":{},"properties.html":{}}}],["factors",{"_index":2585,"title":{},"body":{"todo.html":{}}}],["failed",{"_index":2606,"title":{},"body":{"todo.html":{}}}],["false",{"_index":687,"title":{},"body":{"classes/BaseEvent.html":{},"injectables/JwtStrategy-2.html":{},"guards/RolesGuard-1.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["fault",{"_index":2401,"title":{},"body":{"index.html":{}}}],["favoriteevents",{"_index":2655,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["favoritegroups",{"_index":2656,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["favoritemusicians",{"_index":2657,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["favoriteorganizers",{"_index":2658,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["favoriteperformers",{"_index":2659,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["favoritevenues",{"_index":2660,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["features",{"_index":2122,"title":{},"body":{"entities/Venue.html":{},"index.html":{}}}],["fi",{"_index":2129,"title":{},"body":{"entities/Venue.html":{}}}],["field",{"_index":2119,"title":{},"body":{"entities/Venue.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Announcement.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{},"entities/AuthAccount.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"classes/AuthMetadata.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/BackLine.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"modules/BandsModule.html":{},"injectables/BandsService.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/Comment.html":{},"modules/ConfigModule.html":{},"modules/ConnectionModule.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"classes/CreateBandDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMusicianDto.html":{},"classes/CreateNetworkDto.html":{},"classes/CreateOrganizerDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateVenueDto.html":{},"entities/Credentials.html":{},"injectables/CredentialsService.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"modules/GuardsModule.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"modules/LocationsModule.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"interfaces/LoginBase.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/MessagingGateway.html":{},"modules/MessagingModule.html":{},"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{},"classes/ModerationAction.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"modules/MusiciansModule.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"modules/NetworksModule.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"controllers/NotificationController.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"interfaces/NotificationServiceOptions.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{},"controllers/OrganizersController.html":{},"modules/OrganizersModule.html":{},"injectables/OrganizersService.html":{},"classes/PASystem.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/PastEvent.html":{},"interfaces/PatchOptions.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/Post.html":{},"controllers/PresenceController.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/PublicUser-1.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/Session.html":{},"injectables/SessionsService.html":{},"injectables/SocialAuthService.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"modules/StrategyModule.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VenueUser-1.html":{},"controllers/VenuesController.html":{},"modules/VenuesModule.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"guards/WebsocketGuard.html":{},"modules/WebsocketModule.html":{},"index.html":{},"todo.html":{}}}],["files",{"_index":2481,"title":{},"body":{"index.html":{}}}],["filters",{"_index":1587,"title":{},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{}}}],["findall",{"_index":582,"title":{},"body":{"controllers/BandsController.html":{},"injectables/BandsService.html":{},"controllers/EventsController-1.html":{},"injectables/EventsService.html":{},"interfaces/FindAllOptions.html":{},"injectables/LocationsService.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"miscellaneous/functions.html":{}}}],["findall(__namedparameters",{"_index":2322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findalloptions",{"_index":1269,"title":{"interfaces/FindAllOptions.html":{}},"body":{"interfaces/FindAllOptions.html":{},"miscellaneous/functions.html":{}}}],["findallperformerusers",{"_index":2000,"title":{},"body":{"injectables/UsersService.html":{}}}],["findallpublicusers",{"_index":2001,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":583,"title":{},"body":{"controllers/BandsController.html":{},"injectables/BandsService.html":{},"controllers/EventsController-1.html":{},"injectables/EventsService.html":{},"interfaces/FindOneOptions.html":{},"injectables/LocationsService.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"miscellaneous/functions.html":{}}}],["findone(@param('id",{"_index":609,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"classes/NetworksController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["findone(__namedparameters",{"_index":2323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findone(id",{"_index":590,"title":{},"body":{"controllers/BandsController.html":{},"injectables/BandsService.html":{},"controllers/EventsController-1.html":{},"injectables/EventsService.html":{},"injectables/LocationsService.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{}}}],["findone(username",{"_index":2035,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["findonebyusername",{"_index":2002,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername(username",{"_index":2012,"title":{},"body":{"injectables/UsersService.html":{}}}],["findoneoptions",{"_index":1279,"title":{"interfaces/FindOneOptions.html":{}},"body":{"interfaces/FindOneOptions.html":{},"miscellaneous/functions.html":{}}}],["finds",{"_index":608,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["firstname",{"_index":379,"title":{},"body":{"classes/AssociateUser.html":{},"injectables/CoreAuthService.html":{},"classes/CreateUserDto.html":{},"classes/OrganizerUser.html":{},"classes/PerformerUser.html":{},"classes/PublicUser.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/VenueUser.html":{}}}],["firstvaluefrom",{"_index":937,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["firstvaluefrom(ob$).catch((err",{"_index":962,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["flaggedat",{"_index":645,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["flaggedby",{"_index":646,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["flaggedcomment",{"_index":657,"title":{"classes/FlaggedComment.html":{}},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["flaggedevent",{"_index":655,"title":{"classes/FlaggedEvent.html":{}},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["flaggeditem",{"_index":644,"title":{"classes/FlaggedItem.html":{}},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["flaggeditem:24",{"_index":1291,"title":{},"body":{"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedPost.html":{}}}],["flaggeditem:25",{"_index":1288,"title":{},"body":{"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedPost.html":{}}}],["flaggeditem:26",{"_index":1289,"title":{},"body":{"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedPost.html":{}}}],["flaggeditem:27",{"_index":1290,"title":{},"body":{"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedPost.html":{}}}],["flaggeditem:28",{"_index":1294,"title":{},"body":{"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedPost.html":{}}}],["flaggeditem:29",{"_index":1286,"title":{},"body":{"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedPost.html":{}}}],["flaggeditem:30",{"_index":1287,"title":{},"body":{"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedPost.html":{}}}],["flaggeditem:31",{"_index":1292,"title":{},"body":{"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedPost.html":{}}}],["flaggeditem:32",{"_index":1293,"title":{},"body":{"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedPost.html":{}}}],["flaggeditem:33",{"_index":1295,"title":{},"body":{"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedPost.html":{}}}],["flaggeditem:34",{"_index":1296,"title":{},"body":{"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedPost.html":{}}}],["flaggeditem:35",{"_index":1285,"title":{},"body":{"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedPost.html":{}}}],["flaggedpost",{"_index":656,"title":{"classes/FlaggedPost.html":{}},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["flagtype",{"_index":634,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"miscellaneous/enumerations.html":{}}}],["foreign",{"_index":2590,"title":{},"body":{"todo.html":{}}}],["forget",{"_index":2570,"title":{},"body":{"todo.html":{}}}],["foster",{"_index":2358,"title":{},"body":{"index.html":{}}}],["found",{"_index":1283,"title":{},"body":{"interfaces/FindOneOptions.html":{},"interfaces/PatchOptions.html":{}}}],["foundation",{"_index":2343,"title":{},"body":{"index.html":{}}}],["framework",{"_index":2378,"title":{},"body":{"index.html":{}}}],["frameworks",{"_index":2500,"title":{},"body":{"index.html":{}}}],["frequency",{"_index":1581,"title":{},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{},"entities/Venue.html":{}}}],["full",{"_index":2075,"title":{},"body":{"entities/Venue.html":{}}}],["fully",{"_index":2521,"title":{},"body":{"index.html":{}}}],["function",{"_index":499,"title":{},"body":{"guards/AuthGuard-1.html":{},"interfaces/AuthOptions.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"interfaces/PatchOptions.html":{},"guards/RolesGuard-1.html":{}}}],["functionalities",{"_index":2406,"title":{},"body":{"index.html":{},"todo.html":{}}}],["functionality",{"_index":2371,"title":{},"body":{"index.html":{},"todo.html":{}}}],["functions",{"_index":2292,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":2512,"title":{},"body":{"index.html":{}}}],["future",{"_index":2505,"title":{},"body":{"index.html":{},"todo.html":{}}}],["gallery",{"_index":769,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["gateway.options",{"_index":175,"title":{},"body":{"classes/AdminGateway.html":{},"classes/EventsGateway.html":{},"classes/MessagingGateway.html":{}}}],["gatewayoptions",{"_index":174,"title":{},"body":{"classes/AdminGateway.html":{},"classes/EventsGateway.html":{},"classes/MessagingGateway.html":{}}}],["gateways",{"_index":2228,"title":{},"body":{"modules/WebsocketModule.html":{},"index.html":{}}}],["general",{"_index":258,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["generateaccesstoken",{"_index":896,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["generaterefreshtoken",{"_index":897,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["generation",{"_index":2596,"title":{},"body":{"todo.html":{}}}],["genre",{"_index":48,"title":{"entities/Genre.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"entities/Genre.html":{},"classes/Instrument.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"interfaces/PhysicalSpace.html":{},"entities/PublishedEvent.html":{},"classes/Resource.html":{},"classes/Tag.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"modules/VenuesModule.html":{},"classes/VersionedResource.html":{}}}],["genre.accounts",{"_index":103,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["genre.accounts)@jointable({name",{"_index":49,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["genre.eventdrafts",{"_index":1141,"title":{},"body":{"classes/EventDraft-1.html":{}}}],["genre.eventtemplates",{"_index":1181,"title":{},"body":{"entities/EventTemplate.html":{}}}],["genre.publishedevents",{"_index":1731,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["genre.publishedevents)@jointable({name",{"_index":1718,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["genres",{"_index":16,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"entities/PublishedEvent.html":{},"classes/VenueAccount.html":{}}}],["geographical",{"_index":2083,"title":{},"body":{"entities/Venue.html":{}}}],["get(':id",{"_index":591,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"classes/NetworksController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["get(path",{"_index":1277,"title":{},"body":{"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{}}}],["getallgroupsinput",{"_index":2661,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getallmusiciansinput",{"_index":2662,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getallorganizersinput",{"_index":2663,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getallperformersinput",{"_index":2664,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getallvenuesinput",{"_index":2665,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getdatabase",{"_index":838,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{}}}],["gethello",{"_index":800,"title":{},"body":{"controllers/ChatController.html":{},"injectables/ChatService.html":{},"controllers/ContentController.html":{},"injectables/ContentService.html":{},"controllers/EventsController.html":{},"injectables/EventsService-2.html":{},"controllers/GraphqlController.html":{},"injectables/GraphqlService.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService-1.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/PresenceController.html":{},"injectables/PresenceService.html":{},"controllers/UsersController.html":{}}}],["gethost",{"_index":839,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{}}}],["getpassword",{"_index":840,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"injectables/UsersService.html":{}}}],["getpassword(username",{"_index":2014,"title":{},"body":{"injectables/UsersService.html":{}}}],["getport",{"_index":841,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{}}}],["getting",{"_index":2229,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["getupcomingeventsinput",{"_index":2666,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getuser",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{}}}],["getuser(@ctx",{"_index":428,"title":{},"body":{"controllers/AuthController.html":{}}}],["getuser(context",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["getusername",{"_index":842,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{}}}],["getusersfavoriteeventsinput",{"_index":2667,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getusersfavoritegroupsinput",{"_index":2668,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getusersfavoritemusiciansinput",{"_index":2669,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getusersfavoriteperformersinput",{"_index":2670,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getusersfavoritevenuesinput",{"_index":2671,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["git",{"_index":2443,"title":{},"body":{"index.html":{}}}],["global",{"_index":533,"title":{},"body":{"modules/AuthModule.html":{}}}],["goals",{"_index":2553,"title":{},"body":{"todo.html":{}}}],["google",{"_index":1056,"title":{},"body":{"entities/Credentials.html":{},"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"injectables/JwtStrategy-1.html":{},"interfaces/LoginBase.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/UsernameLoginDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["googlebusinessurl",{"_index":725,"title":{},"body":{"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["googlelogindto",{"_index":1070,"title":{"classes/GoogleLoginDto.html":{}},"body":{"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/UsernameLoginDto.html":{},"miscellaneous/typealiases.html":{}}}],["graph",{"_index":2531,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":2409,"title":{},"body":{"index.html":{}}}],["graphql.controller",{"_index":1335,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["graphql.service",{"_index":1329,"title":{},"body":{"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{}}}],["graphqlcontroller",{"_index":1325,"title":{"controllers/GraphqlController.html":{}},"body":{"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{}}}],["graphqlmodule",{"_index":1331,"title":{"modules/GraphqlModule.html":{}},"body":{"modules/GraphqlModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlservice",{"_index":1328,"title":{"injectables/GraphqlService.html":{}},"body":{"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"overview.html":{}}}],["group",{"_index":273,"title":{"classes/Group.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["group:173",{"_index":1710,"title":{},"body":{"classes/PrivateGroup.html":{}}}],["group:174",{"_index":1706,"title":{},"body":{"classes/PrivateGroup.html":{}}}],["group:175",{"_index":1709,"title":{},"body":{"classes/PrivateGroup.html":{}}}],["group:176",{"_index":1708,"title":{},"body":{"classes/PrivateGroup.html":{}}}],["group:177",{"_index":1707,"title":{},"body":{"classes/PrivateGroup.html":{}}}],["group:180",{"_index":1712,"title":{},"body":{"classes/PrivateGroup.html":{}}}],["group:181",{"_index":1711,"title":{},"body":{"classes/PrivateGroup.html":{}}}],["group:182",{"_index":1704,"title":{},"body":{"classes/PrivateGroup.html":{}}}],["group:183",{"_index":1705,"title":{},"body":{"classes/PrivateGroup.html":{}}}],["groupbroadcast",{"_index":313,"title":{"classes/GroupBroadcast.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["groupdetails",{"_index":2672,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["groups",{"_index":301,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["groupsinputs",{"_index":2673,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["groupsoutputs",{"_index":2674,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["guard",{"_index":439,"title":{"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"guards/WebsocketGuard.html":{}},"body":{}}],["guards",{"_index":441,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"guards/WebsocketGuard.html":{},"overview.html":{}}}],["guardsmodule",{"_index":1348,"title":{"modules/GuardsModule.html":{}},"body":{"modules/GuardsModule.html":{},"modules.html":{}}}],["guess",{"_index":2040,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["guitars",{"_index":2156,"title":{},"body":{"entities/Venue.html":{}}}],["handleconnection",{"_index":1212,"title":{},"body":{"classes/EventsGateway.html":{},"injectables/EventsService-1.html":{}}}],["handleconnection(@messagebody",{"_index":1230,"title":{},"body":{"classes/EventsGateway.html":{}}}],["handleconnection(socket",{"_index":1219,"title":{},"body":{"classes/EventsGateway.html":{},"injectables/EventsService-1.html":{}}}],["handledisconnect",{"_index":1213,"title":{},"body":{"classes/EventsGateway.html":{}}}],["handledisconnect(socket",{"_index":1222,"title":{},"body":{"classes/EventsGateway.html":{}}}],["handleevent",{"_index":1214,"title":{},"body":{"classes/EventsGateway.html":{}}}],["handleevent(@messagebody",{"_index":1235,"title":{},"body":{"classes/EventsGateway.html":{}}}],["handleevent(data",{"_index":1224,"title":{},"body":{"classes/EventsGateway.html":{}}}],["handlers",{"_index":479,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["handleusercreated",{"_index":1568,"title":{},"body":{"controllers/NotificationController.html":{}}}],["handleusercreated(user",{"_index":1569,"title":{},"body":{"controllers/NotificationController.html":{}}}],["handshake",{"_index":2211,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["handshake.auth.token",{"_index":2224,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["happen",{"_index":1429,"title":{},"body":{"injectables/LocationsService.html":{}}}],["harassment",{"_index":637,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"miscellaneous/enumerations.html":{}}}],["hash",{"_index":915,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["hashedpassword",{"_index":966,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["hashing",{"_index":2594,"title":{},"body":{"todo.html":{}}}],["hashpassword",{"_index":898,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["hashpassword(password",{"_index":913,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["hate_speech",{"_index":635,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"miscellaneous/enumerations.html":{}}}],["header",{"_index":461,"title":{},"body":{"guards/AuthGuard.html":{},"classes/SwaggerDocBuilder.html":{},"guards/WebsocketGuard.html":{}}}],["headers",{"_index":2222,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["hello",{"_index":812,"title":{},"body":{"injectables/ChatService.html":{},"injectables/ContentService.html":{},"injectables/EventsService-2.html":{},"injectables/GraphqlService.html":{},"injectables/LocationsService-1.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"injectables/NotificationsService.html":{},"injectables/PresenceService.html":{}}}],["help",{"_index":319,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["here",{"_index":476,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["high",{"_index":2551,"title":{},"body":{"todo.html":{}}}],["http",{"_index":458,"title":{},"body":{"guards/AuthGuard.html":{},"classes/SwaggerDocBuilder.html":{}}}],["https",{"_index":2609,"title":{},"body":{"todo.html":{}}}],["https://docs.docker.com",{"_index":2432,"title":{},"body":{"index.html":{}}}],["https://example.com/image.png",{"_index":34,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["https://github.com/your",{"_index":2444,"title":{},"body":{"index.html":{}}}],["human",{"_index":1558,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["id",{"_index":154,"title":{},"body":{"injectables/AccountService.html":{},"classes/Announcement.html":{},"classes/AssociateUser.html":{},"classes/AuthMetadata.html":{},"entities/Band.html":{},"controllers/BandsController.html":{},"injectables/BandsService.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"classes/Comment.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"injectables/CoreAuthService.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"controllers/EventsController-1.html":{},"injectables/EventsService.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindOneOptions.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"injectables/LocationsService.html":{},"classes/ModerationAction.html":{},"entities/Musician.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"classes/PastEvent.html":{},"interfaces/PatchOptions.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"interfaces/PhysicalSpace.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"entities/Venue.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["ide",{"_index":2434,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":1748,"title":{},"body":{"classes/Resource-1.html":{},"classes/VersionedResource-1.html":{}}}],["identify",{"_index":2621,"title":{},"body":{"todo.html":{}}}],["identity",{"_index":157,"title":{},"body":{"classes/AdminGateway.html":{},"classes/EventsGateway.html":{},"classes/MessagingGateway.html":{}}}],["identity(@messagebody",{"_index":179,"title":{},"body":{"classes/AdminGateway.html":{},"classes/EventsGateway.html":{},"classes/MessagingGateway.html":{}}}],["identity(data",{"_index":161,"title":{},"body":{"classes/AdminGateway.html":{},"classes/EventsGateway.html":{},"classes/MessagingGateway.html":{}}}],["idtoken",{"_index":1018,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["ignoreexpiration",{"_index":1383,"title":{},"body":{"injectables/JwtStrategy-2.html":{}}}],["illegal_content",{"_index":641,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"miscellaneous/enumerations.html":{}}}],["image",{"_index":53,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["images",{"_index":2068,"title":{},"body":{"entities/Venue.html":{}}}],["imageurl",{"_index":17,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BaseEvent.html":{},"classes/BusinessAccount.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"entities/Stage.html":{},"classes/VenueAccount.html":{}}}],["implement",{"_index":2554,"title":{},"body":{"todo.html":{}}}],["implemented",{"_index":2522,"title":{},"body":{"index.html":{}}}],["implementing",{"_index":2636,"title":{},"body":{"todo.html":{}}}],["implements",{"_index":457,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"classes/BackLine.html":{},"classes/BusinessAccount.html":{},"classes/EmailLoginDto.html":{},"classes/EventsGateway.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PASystem.html":{},"classes/PasswordLogin.html":{},"classes/PerformerAccount.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/UsernameLoginDto.html":{},"entities/Venue.html":{},"guards/WebsocketGuard.html":{},"index.html":{}}}],["import",{"_index":73,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Announcement.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{},"entities/AuthAccount.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"classes/AuthMetadata.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/BackLine.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"modules/BandsModule.html":{},"injectables/BandsService.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/Comment.html":{},"modules/ConfigModule.html":{},"modules/ConnectionModule.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"entities/Contact.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"classes/CreateUserDto.html":{},"entities/Credentials.html":{},"injectables/CredentialsService.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"modules/GuardsModule.html":{},"classes/IssuedWarning.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"modules/LocationsModule.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"interfaces/LoginBase.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/MessagingGateway.html":{},"modules/MessagingModule.html":{},"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{},"classes/ModerationAction.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"modules/MusiciansModule.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"modules/NetworksModule.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{},"controllers/OrganizersController.html":{},"modules/OrganizersModule.html":{},"injectables/OrganizersService.html":{},"classes/PASystem.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/PastEvent.html":{},"interfaces/PatchOptions.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{},"classes/Post.html":{},"controllers/PresenceController.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/PublicUser-1.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"injectables/SessionsService.html":{},"injectables/SocialAuthService.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"modules/StrategyModule.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"entities/User.html":{},"entities/User-1.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VenueUser-1.html":{},"controllers/VenuesController.html":{},"modules/VenuesModule.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource-1.html":{},"guards/WebsocketGuard.html":{},"modules/WebsocketModule.html":{}}}],["imports",{"_index":341,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatModule.html":{},"modules/ConfigModule.html":{},"modules/ConnectionModule.html":{},"modules/ContentModule.html":{},"modules/EventsModule.html":{},"modules/GraphqlModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/NotificationsModule.html":{},"modules/PresenceModule.html":{},"modules/UsersModule.html":{},"modules/VenuesModule.html":{},"modules/WebsocketModule.html":{}}}],["in_app",{"_index":1555,"title":{},"body":{"classes/NotificationChannel.html":{},"miscellaneous/enumerations.html":{}}}],["inapp",{"_index":1595,"title":{},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{}}}],["includes",{"_index":2592,"title":{},"body":{"todo.html":{}}}],["including",{"_index":2589,"title":{},"body":{"todo.html":{}}}],["incorrect",{"_index":977,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["independent",{"_index":2367,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"classes/Announcement.html":{},"entities/AuthAccount.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"classes/AuthMetadata.html":{},"interfaces/AuthOptions.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"injectables/BandsService.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"controllers/ChatController.html":{},"injectables/ChatService.html":{},"classes/Comment.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"classes/CreateUserDto.html":{},"entities/Credentials.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"controllers/GraphqlController.html":{},"injectables/GraphqlService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"interfaces/LoginBase.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/MessagingGateway.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"controllers/NotificationController.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser-1.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"interfaces/PatchOptions.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser-1.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/Post.html":{},"controllers/PresenceController.html":{},"injectables/PresenceService.html":{},"classes/PrivateGroup.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"classes/VenueUser-1.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"guards/WebsocketGuard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indicates",{"_index":2113,"title":{},"body":{"entities/Venue.html":{}}}],["inestapplication",{"_index":1819,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Announcement.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{},"entities/AuthAccount.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"classes/AuthMetadata.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/BackLine.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"modules/BandsModule.html":{},"injectables/BandsService.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/Comment.html":{},"modules/ConfigModule.html":{},"modules/ConnectionModule.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"classes/CreateBandDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMusicianDto.html":{},"classes/CreateNetworkDto.html":{},"classes/CreateOrganizerDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateVenueDto.html":{},"entities/Credentials.html":{},"injectables/CredentialsService.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"modules/GuardsModule.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"modules/LocationsModule.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"interfaces/LoginBase.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/MessagingGateway.html":{},"modules/MessagingModule.html":{},"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{},"classes/ModerationAction.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"modules/MusiciansModule.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"modules/NetworksModule.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"controllers/NotificationController.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"interfaces/NotificationServiceOptions.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{},"controllers/OrganizersController.html":{},"modules/OrganizersModule.html":{},"injectables/OrganizersService.html":{},"classes/PASystem.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/PastEvent.html":{},"interfaces/PatchOptions.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/Post.html":{},"controllers/PresenceController.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/PublicUser-1.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/Session.html":{},"injectables/SessionsService.html":{},"injectables/SocialAuthService.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"modules/StrategyModule.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VenueUser-1.html":{},"controllers/VenuesController.html":{},"modules/VenuesModule.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"guards/WebsocketGuard.html":{},"modules/WebsocketModule.html":{}}}],["information",{"_index":2591,"title":{},"body":{"todo.html":{}}}],["inherited",{"_index":216,"title":{},"body":{"classes/Announcement.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventReview.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedPost.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/UsernameLoginDto.html":{},"classes/VenueReview.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}}}],["inject",{"_index":935,"title":{},"body":{"injectables/CoreAuthService.html":{},"injectables/EventsService.html":{},"injectables/NotificationService.html":{},"injectables/UsersService.html":{}}}],["inject(message_broker",{"_index":940,"title":{},"body":{"injectables/CoreAuthService.html":{},"injectables/EventsService.html":{},"injectables/NotificationService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":128,"title":{"injectables/AccountService.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/BandsService.html":{},"injectables/ChatService.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"injectables/CredentialsService.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"injectables/GraphqlService.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{},"injectables/MusiciansService.html":{},"injectables/NetworksService.html":{},"injectables/NotificationService.html":{},"injectables/NotificationsService.html":{},"injectables/OrganizersService.html":{},"injectables/PresenceService.html":{},"injectables/SessionsService.html":{},"injectables/SocialAuthService.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/VenuesService.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/BandsService.html":{},"injectables/ChatService.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"injectables/CredentialsService.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"injectables/GraphqlService.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{},"injectables/MusiciansService.html":{},"injectables/NetworksService.html":{},"injectables/NotificationService.html":{},"injectables/NotificationsService.html":{},"injectables/OrganizersService.html":{},"injectables/PresenceService.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"injectables/SessionsService.html":{},"injectables/SocialAuthService.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/VenuesService.html":{},"guards/WebsocketGuard.html":{}}}],["injectables",{"_index":130,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/BandsService.html":{},"injectables/ChatService.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"injectables/CredentialsService.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"injectables/GraphqlService.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{},"injectables/MusiciansService.html":{},"injectables/NetworksService.html":{},"injectables/NotificationService.html":{},"injectables/NotificationsService.html":{},"injectables/OrganizersService.html":{},"injectables/PresenceService.html":{},"injectables/SessionsService.html":{},"injectables/SocialAuthService.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/VenuesService.html":{},"overview.html":{}}}],["injectrepository",{"_index":144,"title":{},"body":{"injectables/AccountService.html":{},"injectables/EventsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(authaccount",{"_index":149,"title":{},"body":{"injectables/AccountService.html":{}}}],["injectrepository(performeruser",{"_index":2020,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(publicuser",{"_index":2019,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(publishedevent",{"_index":1253,"title":{},"body":{"injectables/EventsService.html":{}}}],["injectrepository(user",{"_index":2018,"title":{},"body":{"injectables/UsersService.html":{}}}],["inside",{"_index":291,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["instagram",{"_index":2090,"title":{},"body":{"entities/Venue.html":{}}}],["instagramurl",{"_index":18,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["install",{"_index":2427,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2425,"title":{},"body":{"index.html":{}}}],["instrument",{"_index":752,"title":{"classes/Instrument.html":{}},"body":{"classes/BusinessAccount.html":{},"classes/Instrument.html":{},"classes/PerformerAccount.html":{},"interfaces/PhysicalSpace.html":{},"classes/Resource.html":{},"classes/Tag.html":{},"classes/VenueKeyword.html":{},"classes/VersionedResource.html":{}}}],["instruments",{"_index":759,"title":{},"body":{"classes/BusinessAccount.html":{},"entities/Musician.html":{},"classes/PerformerAccount.html":{}}}],["integer",{"_index":2091,"title":{},"body":{"entities/Venue.html":{}}}],["integration",{"_index":2486,"title":{},"body":{"index.html":{},"todo.html":{}}}],["interact",{"_index":2416,"title":{},"body":{"index.html":{}}}],["interface",{"_index":534,"title":{"interfaces/AuthOptions.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"interfaces/LoginBase.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"interfaces/PatchOptions.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{}},"body":{"interfaces/AuthOptions.html":{},"classes/EmailLoginDto.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/GoogleLoginDto.html":{},"classes/Instrument.html":{},"interfaces/LoginBase.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/PasswordLogin.html":{},"interfaces/PatchOptions.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/Resource.html":{},"classes/Tag.html":{},"classes/UserPreferences.html":{},"classes/UsernameLoginDto.html":{},"classes/VenueKeyword.html":{},"classes/VersionedResource.html":{}}}],["interfaces",{"_index":536,"title":{},"body":{"interfaces/AuthOptions.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"interfaces/LoginBase.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"interfaces/PatchOptions.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"overview.html":{}}}],["interfaces/physical",{"_index":1797,"title":{},"body":{"entities/Stage.html":{},"entities/Venue.html":{}}}],["internal",{"_index":292,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["invalid",{"_index":972,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["isactive",{"_index":19,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"classes/AssociateUser.html":{},"classes/BandAccount.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/MusicianAccount.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{}}}],["isarray",{"_index":1278,"title":{},"body":{"interfaces/FindAllOptions.html":{}}}],["ischildfriendly",{"_index":670,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["isfree",{"_index":671,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["isholiday",{"_index":672,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["isolate",{"_index":2388,"title":{},"body":{"index.html":{}}}],["isprivate",{"_index":673,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["ispublic",{"_index":309,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["issue",{"_index":2563,"title":{},"body":{"todo.html":{}}}],["issuedwarning",{"_index":658,"title":{"classes/IssuedWarning.html":{}},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["istrategyoption",{"_index":1396,"title":{},"body":{"injectables/JwtStrategy-4.html":{}}}],["istrategyoptions",{"_index":1407,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["jam_session",{"_index":1110,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"miscellaneous/enumerations.html":{}}}],["jest",{"_index":2501,"title":{},"body":{"index.html":{}}}],["john",{"_index":2037,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["joi",{"_index":2248,"title":{},"body":{"dependencies.html":{}}}],["joincolumn",{"_index":403,"title":{},"body":{"entities/AuthAccount.html":{}}}],["jointable",{"_index":79,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"classes/BaseEvent.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"entities/PublishedEvent.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{}}}],["json",{"_index":2595,"title":{},"body":{"todo.html":{}}}],["jwt",{"_index":951,"title":{},"body":{"injectables/CoreAuthService.html":{},"entities/Credentials.html":{},"injectables/JwtStrategy-2.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"dependencies.html":{},"todo.html":{}}}],["jwt_secret=your_secret_key",{"_index":2462,"title":{},"body":{"index.html":{}}}],["jwtauthguard",{"_index":1352,"title":{"injectables/JWTAuthGuard.html":{}},"body":{"injectables/JWTAuthGuard.html":{}}}],["jwtfromrequest",{"_index":1381,"title":{},"body":{"injectables/JwtStrategy-2.html":{}}}],["jwtmodule",{"_index":515,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":532,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwts",{"_index":2565,"title":{},"body":{"todo.html":{}}}],["jwtservice",{"_index":446,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CoreAuthService.html":{},"guards/WebsocketGuard.html":{}}}],["jwtstrategy",{"_index":1356,"title":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{}}}],["key",{"_index":1592,"title":{},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{},"todo.html":{}}}],["keyboards",{"_index":2160,"title":{},"body":{"entities/Venue.html":{}}}],["keyword",{"_index":1143,"title":{},"body":{"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"entities/PublishedEvent.html":{}}}],["keyword.entity",{"_index":1157,"title":{},"body":{"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"entities/PublishedEvent.html":{}}}],["keyword.entity.ts",{"_index":1159,"title":{},"body":{"entities/EventKeyword.html":{}}}],["keyword.entity.ts:10",{"_index":1166,"title":{},"body":{"entities/EventKeyword.html":{}}}],["keyword.entity.ts:13",{"_index":1164,"title":{},"body":{"entities/EventKeyword.html":{}}}],["keyword.entity.ts:16",{"_index":1165,"title":{},"body":{"entities/EventKeyword.html":{}}}],["keyword.eventdrafts",{"_index":1144,"title":{},"body":{"classes/EventDraft-1.html":{}}}],["keyword.eventtemplates",{"_index":1183,"title":{},"body":{"entities/EventTemplate.html":{}}}],["keyword.publishedevents",{"_index":1732,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["keywords",{"_index":775,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"entities/PublishedEvent.html":{},"entities/Venue.html":{},"properties.html":{}}}],["kits",{"_index":2154,"title":{},"body":{"entities/Venue.html":{}}}],["kubernetes",{"_index":2625,"title":{},"body":{"todo.html":{}}}],["last",{"_index":1752,"title":{},"body":{"classes/Resource-1.html":{},"classes/VersionedResource-1.html":{}}}],["lastinteractionat",{"_index":275,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["lastname",{"_index":380,"title":{},"body":{"classes/AssociateUser.html":{},"injectables/CoreAuthService.html":{},"classes/CreateUserDto.html":{},"classes/OrganizerUser.html":{},"classes/PerformerUser.html":{},"classes/PublicUser.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/VenueUser.html":{}}}],["lastnotified",{"_index":1589,"title":{},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{}}}],["lastupdatedat",{"_index":211,"title":{},"body":{"classes/Announcement.html":{},"classes/AssociateUser.html":{},"classes/AuthMetadata.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/Event.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/Instrument.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"interfaces/PhysicalSpace.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/Tag.html":{},"entities/User.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}}}],["lastupdatedby",{"_index":674,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["later",{"_index":2424,"title":{},"body":{"index.html":{}}}],["latitude",{"_index":2082,"title":{},"body":{"entities/Venue.html":{}}}],["lazy",{"_index":1314,"title":{},"body":{"entities/Genre.html":{}}}],["legend",{"_index":186,"title":{},"body":{"modules/AdminModule.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BandsModule.html":{},"modules/ChatModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/EventsModule.html":{},"modules/GraphqlModule.html":{},"modules/LocationsModule.html":{},"modules/MediaModule.html":{},"modules/MessagingModule.html":{},"modules/MusiciansModule.html":{},"modules/NetworksModule.html":{},"modules/NotificationModule.html":{},"modules/NotificationsModule.html":{},"modules/OrganizersModule.html":{},"modules/PresenceModule.html":{},"modules/StrategyModule.html":{},"modules/UsersModule.html":{},"modules/VenuesModule.html":{},"modules/WebsocketModule.html":{},"overview.html":{}}}],["level",{"_index":2552,"title":{},"body":{"todo.html":{}}}],["leverages",{"_index":2379,"title":{},"body":{"index.html":{}}}],["libs/.../account",{"_index":2267,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../account.ts",{"_index":2278,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../auth.decorator.ts",{"_index":2293,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../content.ts",{"_index":2269,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../controller.decorator.ts",{"_index":2299,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../enums.ts",{"_index":2266,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../event",{"_index":2272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../event.ts",{"_index":2271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../find",{"_index":2296,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../moderation.ts",{"_index":2274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../stage",{"_index":2280,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../stage.ts",{"_index":2279,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../update.decorator.ts",{"_index":2302,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../user",{"_index":2282,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../user.ts",{"_index":2281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../venue",{"_index":2284,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/common.module",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["libs/common/config/config.module",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["libs/config/src/config.module.ts",{"_index":821,"title":{},"body":{"modules/ConfigModule.html":{}}}],["libs/data/__tmp/account.ts",{"_index":730,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["libs/data/__tmp/account.ts:53",{"_index":1672,"title":{},"body":{"classes/PerformerAccount.html":{}}}],["libs/data/__tmp/account.ts:54",{"_index":1670,"title":{},"body":{"classes/PerformerAccount.html":{}}}],["libs/data/__tmp/account.ts:55",{"_index":1671,"title":{},"body":{"classes/PerformerAccount.html":{}}}],["libs/data/__tmp/account.ts:59",{"_index":731,"title":{},"body":{"classes/BusinessAccount.html":{}}}],["libs/data/__tmp/account.ts:60",{"_index":732,"title":{},"body":{"classes/BusinessAccount.html":{}}}],["libs/data/__tmp/auth.ts",{"_index":1785,"title":{},"body":{"classes/Session.html":{}}}],["libs/data/__tmp/common.ts",{"_index":1350,"title":{},"body":{"classes/Instrument.html":{},"interfaces/PhysicalSpace.html":{},"classes/Resource.html":{},"classes/Tag.html":{},"classes/VenueKeyword.html":{},"classes/VersionedResource.html":{}}}],["libs/data/__tmp/common.ts:12",{"_index":1857,"title":{},"body":{"classes/Tag.html":{}}}],["libs/data/__tmp/common.ts:13",{"_index":1856,"title":{},"body":{"classes/Tag.html":{}}}],["libs/data/__tmp/common.ts:14",{"_index":1855,"title":{},"body":{"classes/Tag.html":{}}}],["libs/data/__tmp/common.ts:2",{"_index":1742,"title":{},"body":{"classes/Resource.html":{}}}],["libs/data/__tmp/common.ts:3",{"_index":1741,"title":{},"body":{"classes/Resource.html":{}}}],["libs/data/__tmp/common.ts:4",{"_index":1743,"title":{},"body":{"classes/Resource.html":{}}}],["libs/data/__tmp/common.ts:8",{"_index":2202,"title":{},"body":{"classes/VersionedResource.html":{}}}],["libs/data/__tmp/contact.ts",{"_index":782,"title":{},"body":{"classes/BusinessContact.html":{},"classes/ContactDetails.html":{}}}],["libs/data/__tmp/contact.ts:12",{"_index":788,"title":{},"body":{"classes/BusinessContact.html":{}}}],["libs/data/__tmp/contact.ts:13",{"_index":787,"title":{},"body":{"classes/BusinessContact.html":{}}}],["libs/data/__tmp/contact.ts:14",{"_index":790,"title":{},"body":{"classes/BusinessContact.html":{}}}],["libs/data/__tmp/contact.ts:15",{"_index":789,"title":{},"body":{"classes/BusinessContact.html":{}}}],["libs/data/__tmp/contact.ts:2",{"_index":875,"title":{},"body":{"classes/ContactDetails.html":{}}}],["libs/data/__tmp/contact.ts:3",{"_index":876,"title":{},"body":{"classes/ContactDetails.html":{}}}],["libs/data/__tmp/contact.ts:4",{"_index":877,"title":{},"body":{"classes/ContactDetails.html":{}}}],["libs/data/__tmp/contact.ts:5",{"_index":874,"title":{},"body":{"classes/ContactDetails.html":{}}}],["libs/data/__tmp/contact.ts:6",{"_index":872,"title":{},"body":{"classes/ContactDetails.html":{}}}],["libs/data/__tmp/contact.ts:7",{"_index":873,"title":{},"body":{"classes/ContactDetails.html":{}}}],["libs/data/__tmp/contact.ts:8",{"_index":871,"title":{},"body":{"classes/ContactDetails.html":{}}}],["libs/data/__tmp/content.ts",{"_index":200,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["libs/data/__tmp/content.ts:107",{"_index":1539,"title":{},"body":{"classes/Newsletter.html":{}}}],["libs/data/__tmp/content.ts:108",{"_index":1540,"title":{},"body":{"classes/Newsletter.html":{}}}],["libs/data/__tmp/content.ts:124",{"_index":212,"title":{},"body":{"classes/Announcement.html":{}}}],["libs/data/__tmp/content.ts:125",{"_index":214,"title":{},"body":{"classes/Announcement.html":{}}}],["libs/data/__tmp/content.ts:126",{"_index":215,"title":{},"body":{"classes/Announcement.html":{}}}],["libs/data/__tmp/content.ts:152",{"_index":718,"title":{},"body":{"classes/Broadcast.html":{}}}],["libs/data/__tmp/content.ts:153",{"_index":717,"title":{},"body":{"classes/Broadcast.html":{}}}],["libs/data/__tmp/content.ts:154",{"_index":719,"title":{},"body":{"classes/Broadcast.html":{}}}],["libs/data/__tmp/content.ts:173",{"_index":1344,"title":{},"body":{"classes/Group.html":{}}}],["libs/data/__tmp/content.ts:174",{"_index":1340,"title":{},"body":{"classes/Group.html":{}}}],["libs/data/__tmp/content.ts:175",{"_index":1343,"title":{},"body":{"classes/Group.html":{}}}],["libs/data/__tmp/content.ts:176",{"_index":1342,"title":{},"body":{"classes/Group.html":{}}}],["libs/data/__tmp/content.ts:177",{"_index":1341,"title":{},"body":{"classes/Group.html":{}}}],["libs/data/__tmp/content.ts:180",{"_index":1346,"title":{},"body":{"classes/Group.html":{}}}],["libs/data/__tmp/content.ts:181",{"_index":1345,"title":{},"body":{"classes/Group.html":{}}}],["libs/data/__tmp/content.ts:182",{"_index":1338,"title":{},"body":{"classes/Group.html":{}}}],["libs/data/__tmp/content.ts:183",{"_index":1339,"title":{},"body":{"classes/Group.html":{}}}],["libs/data/__tmp/content.ts:198",{"_index":1864,"title":{},"body":{"classes/Thread.html":{}}}],["libs/data/__tmp/content.ts:199",{"_index":1866,"title":{},"body":{"classes/Thread.html":{}}}],["libs/data/__tmp/content.ts:200",{"_index":1865,"title":{},"body":{"classes/Thread.html":{}}}],["libs/data/__tmp/content.ts:203",{"_index":1701,"title":{},"body":{"classes/PrivateGroup.html":{}}}],["libs/data/__tmp/content.ts:204",{"_index":1702,"title":{},"body":{"classes/PrivateGroup.html":{}}}],["libs/data/__tmp/content.ts:205",{"_index":1700,"title":{},"body":{"classes/PrivateGroup.html":{}}}],["libs/data/__tmp/content.ts:206",{"_index":1703,"title":{},"body":{"classes/PrivateGroup.html":{}}}],["libs/data/__tmp/content.ts:210",{"_index":1507,"title":{},"body":{"classes/NetworkBroadcast.html":{}}}],["libs/data/__tmp/content.ts:214",{"_index":1347,"title":{},"body":{"classes/GroupBroadcast.html":{}}}],["libs/data/__tmp/content.ts:23",{"_index":1685,"title":{},"body":{"classes/Post.html":{}}}],["libs/data/__tmp/content.ts:24",{"_index":1680,"title":{},"body":{"classes/Post.html":{}}}],["libs/data/__tmp/content.ts:25",{"_index":1682,"title":{},"body":{"classes/Post.html":{}}}],["libs/data/__tmp/content.ts:26",{"_index":1683,"title":{},"body":{"classes/Post.html":{}}}],["libs/data/__tmp/content.ts:27",{"_index":1684,"title":{},"body":{"classes/Post.html":{}}}],["libs/data/__tmp/content.ts:28",{"_index":1681,"title":{},"body":{"classes/Post.html":{}}}],["libs/data/__tmp/content.ts:29",{"_index":1686,"title":{},"body":{"classes/Post.html":{}}}],["libs/data/__tmp/content.ts:39",{"_index":814,"title":{},"body":{"classes/Comment.html":{}}}],["libs/data/__tmp/content.ts:40",{"_index":815,"title":{},"body":{"classes/Comment.html":{}}}],["libs/data/__tmp/content.ts:41",{"_index":816,"title":{},"body":{"classes/Comment.html":{}}}],["libs/data/__tmp/content.ts:42",{"_index":817,"title":{},"body":{"classes/Comment.html":{}}}],["libs/data/__tmp/content.ts:52",{"_index":1802,"title":{},"body":{"classes/Statement.html":{}}}],["libs/data/__tmp/content.ts:53",{"_index":1803,"title":{},"body":{"classes/Statement.html":{}}}],["libs/data/__tmp/content.ts:54",{"_index":1804,"title":{},"body":{"classes/Statement.html":{}}}],["libs/data/__tmp/content.ts:64",{"_index":1618,"title":{},"body":{"classes/Opinion.html":{}}}],["libs/data/__tmp/content.ts:65",{"_index":1619,"title":{},"body":{"classes/Opinion.html":{}}}],["libs/data/__tmp/content.ts:81",{"_index":1759,"title":{},"body":{"classes/Review.html":{}}}],["libs/data/__tmp/content.ts:85",{"_index":1673,"title":{},"body":{"classes/PerformerReview.html":{}}}],["libs/data/__tmp/content.ts:89",{"_index":2172,"title":{},"body":{"classes/VenueReview.html":{}}}],["libs/data/__tmp/content.ts:93",{"_index":1630,"title":{},"body":{"classes/OrganizerReview.html":{}}}],["libs/data/__tmp/content.ts:97",{"_index":1172,"title":{},"body":{"classes/EventReview.html":{}}}],["libs/data/__tmp/enums.ts",{"_index":2285,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/data/__tmp/event.ts",{"_index":1073,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"miscellaneous/enumerations.html":{}}}],["libs/data/__tmp/event.ts:29",{"_index":1078,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:30",{"_index":1089,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:33",{"_index":1075,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:34",{"_index":1080,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:35",{"_index":1104,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:38",{"_index":1102,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:39",{"_index":1079,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:40",{"_index":1082,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:43",{"_index":1081,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:44",{"_index":1088,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:47",{"_index":1099,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:48",{"_index":1101,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:49",{"_index":1100,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:52",{"_index":1086,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:53",{"_index":1084,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:54",{"_index":1083,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:55",{"_index":1085,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:56",{"_index":1076,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:57",{"_index":1090,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:58",{"_index":1096,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:59",{"_index":1097,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:60",{"_index":1094,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:61",{"_index":1093,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:62",{"_index":1095,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:65",{"_index":1103,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:66",{"_index":1098,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:69",{"_index":1091,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:70",{"_index":1077,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/event.ts:71",{"_index":1092,"title":{},"body":{"classes/Event.html":{}}}],["libs/data/__tmp/moderation.ts",{"_index":632,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"miscellaneous/enumerations.html":{}}}],["libs/data/__tmp/moderation.ts:24",{"_index":1304,"title":{},"body":{"classes/FlaggedItem.html":{}}}],["libs/data/__tmp/moderation.ts:25",{"_index":1301,"title":{},"body":{"classes/FlaggedItem.html":{}}}],["libs/data/__tmp/moderation.ts:26",{"_index":1302,"title":{},"body":{"classes/FlaggedItem.html":{}}}],["libs/data/__tmp/moderation.ts:27",{"_index":1303,"title":{},"body":{"classes/FlaggedItem.html":{}}}],["libs/data/__tmp/moderation.ts:28",{"_index":1307,"title":{},"body":{"classes/FlaggedItem.html":{}}}],["libs/data/__tmp/moderation.ts:29",{"_index":1299,"title":{},"body":{"classes/FlaggedItem.html":{}}}],["libs/data/__tmp/moderation.ts:30",{"_index":1300,"title":{},"body":{"classes/FlaggedItem.html":{}}}],["libs/data/__tmp/moderation.ts:31",{"_index":1305,"title":{},"body":{"classes/FlaggedItem.html":{}}}],["libs/data/__tmp/moderation.ts:32",{"_index":1306,"title":{},"body":{"classes/FlaggedItem.html":{}}}],["libs/data/__tmp/moderation.ts:33",{"_index":1308,"title":{},"body":{"classes/FlaggedItem.html":{}}}],["libs/data/__tmp/moderation.ts:34",{"_index":1309,"title":{},"body":{"classes/FlaggedItem.html":{}}}],["libs/data/__tmp/moderation.ts:35",{"_index":1298,"title":{},"body":{"classes/FlaggedItem.html":{}}}],["libs/data/__tmp/moderation.ts:39",{"_index":1297,"title":{},"body":{"classes/FlaggedEvent.html":{}}}],["libs/data/__tmp/moderation.ts:42",{"_index":1310,"title":{},"body":{"classes/FlaggedPost.html":{}}}],["libs/data/__tmp/moderation.ts:45",{"_index":1284,"title":{},"body":{"classes/FlaggedComment.html":{}}}],["libs/data/__tmp/moderation.ts:60",{"_index":1740,"title":{},"body":{"classes/ResolvedCases.html":{}}}],["libs/data/__tmp/stage.ts",{"_index":558,"title":{},"body":{"classes/BackLine.html":{},"classes/PASystem.html":{},"classes/Stage-1.html":{},"miscellaneous/enumerations.html":{}}}],["libs/data/__tmp/stage.ts:5",{"_index":1801,"title":{},"body":{"classes/Stage-1.html":{}}}],["libs/data/__tmp/user.ts",{"_index":375,"title":{},"body":{"classes/AssociateUser.html":{},"classes/OrganizerUser.html":{},"classes/PerformerUser.html":{},"classes/PublicUser.html":{},"classes/VenueUser.html":{},"miscellaneous/enumerations.html":{}}}],["libs/data/src/connection.module.ts",{"_index":827,"title":{},"body":{"modules/ConnectionModule.html":{}}}],["libs/data/src/dto/bands/create",{"_index":982,"title":{},"body":{"classes/CreateBandDto.html":{}}}],["libs/data/src/dto/bands/update",{"_index":1867,"title":{},"body":{"classes/UpdateBandDto.html":{}}}],["libs/data/src/dto/events/create",{"_index":985,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["libs/data/src/dto/events/update",{"_index":1870,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["libs/data/src/dto/locations/create",{"_index":988,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["libs/data/src/dto/locations/update",{"_index":1873,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["libs/data/src/dto/musicians/create",{"_index":991,"title":{},"body":{"classes/CreateMusicianDto.html":{}}}],["libs/data/src/dto/musicians/update",{"_index":1876,"title":{},"body":{"classes/UpdateMusicianDto.html":{}}}],["libs/data/src/dto/networks/create",{"_index":994,"title":{},"body":{"classes/CreateNetworkDto.html":{}}}],["libs/data/src/dto/networks/update",{"_index":1879,"title":{},"body":{"classes/UpdateNetworkDto.html":{}}}],["libs/data/src/dto/organizers/create",{"_index":997,"title":{},"body":{"classes/CreateOrganizerDto.html":{}}}],["libs/data/src/dto/organizers/update",{"_index":1882,"title":{},"body":{"classes/UpdateOrganizerDto.html":{}}}],["libs/data/src/dto/users/create",{"_index":999,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["libs/data/src/dto/users/update",{"_index":1886,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["libs/data/src/dto/venues/create",{"_index":1013,"title":{},"body":{"classes/CreateVenueDto.html":{}}}],["libs/data/src/dto/venues/update",{"_index":1891,"title":{},"body":{"classes/UpdateVenueDto.html":{}}}],["libs/data/src/entities/account/band.entity.ts",{"_index":564,"title":{},"body":{"entities/Band.html":{}}}],["libs/data/src/entities/account/band.entity.ts:19",{"_index":569,"title":{},"body":{"entities/Band.html":{}}}],["libs/data/src/entities/account/band.entity.ts:23",{"_index":567,"title":{},"body":{"entities/Band.html":{}}}],["libs/data/src/entities/account/band.entity.ts:27",{"_index":571,"title":{},"body":{"entities/Band.html":{}}}],["libs/data/src/entities/account/band.entity.ts:30",{"_index":568,"title":{},"body":{"entities/Band.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts",{"_index":6,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:102",{"_index":55,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:109",{"_index":39,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:113",{"_index":41,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:117",{"_index":38,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:138",{"_index":1474,"title":{},"body":{"classes/MusicianAccount.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:141",{"_index":1475,"title":{},"body":{"classes/MusicianAccount.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:147",{"_index":578,"title":{},"body":{"classes/BandAccount.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:150",{"_index":576,"title":{},"body":{"classes/BandAccount.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:156",{"_index":2169,"title":{},"body":{"classes/VenueAccount.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:159",{"_index":2170,"title":{},"body":{"classes/VenueAccount.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:165",{"_index":1628,"title":{},"body":{"classes/OrganizerAccount.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:168",{"_index":1629,"title":{},"body":{"classes/OrganizerAccount.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:33",{"_index":67,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:40",{"_index":59,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:43",{"_index":44,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:53",{"_index":61,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:60",{"_index":31,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:67",{"_index":35,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:74",{"_index":54,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:79",{"_index":51,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:86",{"_index":69,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:90",{"_index":72,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:94",{"_index":45,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/account.entity.ts:98",{"_index":63,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{}}}],["libs/data/src/entities/account/base/business.class.ts",{"_index":724,"title":{},"body":{"classes/Business.html":{}}}],["libs/data/src/entities/account/base/business.class.ts:11",{"_index":728,"title":{},"body":{"classes/Business.html":{}}}],["libs/data/src/entities/account/base/business.class.ts:7",{"_index":727,"title":{},"body":{"classes/Business.html":{}}}],["libs/data/src/entities/account/base/performer.class.ts",{"_index":1666,"title":{},"body":{"classes/Performer.html":{}}}],["libs/data/src/entities/account/base/performer.class.ts:11",{"_index":1667,"title":{},"body":{"classes/Performer.html":{}}}],["libs/data/src/entities/account/base/performer.class.ts:15",{"_index":1668,"title":{},"body":{"classes/Performer.html":{}}}],["libs/data/src/entities/account/base/performer.class.ts:7",{"_index":1669,"title":{},"body":{"classes/Performer.html":{}}}],["libs/data/src/entities/account/contact.entity.ts",{"_index":862,"title":{},"body":{"entities/Contact.html":{}}}],["libs/data/src/entities/account/contact.entity.ts:18",{"_index":868,"title":{},"body":{"entities/Contact.html":{}}}],["libs/data/src/entities/account/contact.entity.ts:25",{"_index":869,"title":{},"body":{"entities/Contact.html":{}}}],["libs/data/src/entities/account/contact.entity.ts:29",{"_index":870,"title":{},"body":{"entities/Contact.html":{}}}],["libs/data/src/entities/account/contact.entity.ts:36",{"_index":865,"title":{},"body":{"entities/Contact.html":{}}}],["libs/data/src/entities/account/contact.entity.ts:40",{"_index":864,"title":{},"body":{"entities/Contact.html":{}}}],["libs/data/src/entities/account/contact.entity.ts:44",{"_index":863,"title":{},"body":{"entities/Contact.html":{}}}],["libs/data/src/entities/account/musician.entity.ts",{"_index":1465,"title":{},"body":{"entities/Musician.html":{}}}],["libs/data/src/entities/account/musician.entity.ts:19",{"_index":1470,"title":{},"body":{"entities/Musician.html":{}}}],["libs/data/src/entities/account/musician.entity.ts:23",{"_index":1467,"title":{},"body":{"entities/Musician.html":{}}}],["libs/data/src/entities/account/musician.entity.ts:27",{"_index":1469,"title":{},"body":{"entities/Musician.html":{}}}],["libs/data/src/entities/account/musician.entity.ts:30",{"_index":1471,"title":{},"body":{"entities/Musician.html":{}}}],["libs/data/src/entities/account/organizer.entity.ts",{"_index":1620,"title":{},"body":{"entities/Organizer.html":{}}}],["libs/data/src/entities/account/organizer.entity.ts:17",{"_index":1624,"title":{},"body":{"entities/Organizer.html":{}}}],["libs/data/src/entities/account/organizer.entity.ts:21",{"_index":1622,"title":{},"body":{"entities/Organizer.html":{}}}],["libs/data/src/entities/account/organizer.entity.ts:25",{"_index":1623,"title":{},"body":{"entities/Organizer.html":{}}}],["libs/data/src/entities/account/organizer.entity.ts:29",{"_index":1625,"title":{},"body":{"entities/Organizer.html":{}}}],["libs/data/src/entities/account/stage.entity.ts",{"_index":1789,"title":{},"body":{"entities/Stage.html":{}}}],["libs/data/src/entities/account/stage.entity.ts:10",{"_index":1790,"title":{},"body":{"entities/Stage.html":{}}}],["libs/data/src/entities/account/stage.entity.ts:13",{"_index":1793,"title":{},"body":{"entities/Stage.html":{}}}],["libs/data/src/entities/account/stage.entity.ts:16",{"_index":1794,"title":{},"body":{"entities/Stage.html":{}}}],["libs/data/src/entities/account/stage.entity.ts:19",{"_index":1792,"title":{},"body":{"entities/Stage.html":{}}}],["libs/data/src/entities/account/stage.entity.ts:22",{"_index":1791,"title":{},"body":{"entities/Stage.html":{}}}],["libs/data/src/entities/account/stage.entity.ts:25",{"_index":1796,"title":{},"body":{"entities/Stage.html":{}}}],["libs/data/src/entities/account/venue.entity.ts",{"_index":2044,"title":{},"body":{"entities/Venue.html":{}}}],["libs/data/src/entities/account/venue.entity.ts:21",{"_index":2049,"title":{},"body":{"entities/Venue.html":{}}}],["libs/data/src/entities/account/venue.entity.ts:25",{"_index":2046,"title":{},"body":{"entities/Venue.html":{}}}],["libs/data/src/entities/account/venue.entity.ts:28",{"_index":2057,"title":{},"body":{"entities/Venue.html":{}}}],["libs/data/src/entities/account/venue.entity.ts:38",{"_index":2058,"title":{},"body":{"entities/Venue.html":{}}}],["libs/data/src/entities/account/venue.entity.ts:41",{"_index":2048,"title":{},"body":{"entities/Venue.html":{}}}],["libs/data/src/entities/account/venue.entity.ts:44",{"_index":2054,"title":{},"body":{"entities/Venue.html":{}}}],["libs/data/src/entities/account/venue.entity.ts:47",{"_index":2055,"title":{},"body":{"entities/Venue.html":{}}}],["libs/data/src/entities/account/venue.entity.ts:50",{"_index":2047,"title":{},"body":{"entities/Venue.html":{}}}],["libs/data/src/entities/account/venue.entity.ts:53",{"_index":2050,"title":{},"body":{"entities/Venue.html":{}}}],["libs/data/src/entities/account/venue.entity.ts:56",{"_index":2052,"title":{},"body":{"entities/Venue.html":{}}}],["libs/data/src/entities/account/venue.entity.ts:59",{"_index":2053,"title":{},"body":{"entities/Venue.html":{}}}],["libs/data/src/entities/account/venue.entity.ts:62",{"_index":2051,"title":{},"body":{"entities/Venue.html":{}}}],["libs/data/src/entities/common/resource.entity.ts",{"_index":1744,"title":{},"body":{"classes/Resource-1.html":{},"classes/VersionedResource-1.html":{}}}],["libs/data/src/entities/common/resource.entity.ts:17",{"_index":1750,"title":{},"body":{"classes/Resource-1.html":{}}}],["libs/data/src/entities/common/resource.entity.ts:21",{"_index":1756,"title":{},"body":{"classes/Resource-1.html":{}}}],["libs/data/src/entities/common/resource.entity.ts:28",{"_index":1746,"title":{},"body":{"classes/Resource-1.html":{}}}],["libs/data/src/entities/common/resource.entity.ts:35",{"_index":1754,"title":{},"body":{"classes/Resource-1.html":{}}}],["libs/data/src/entities/common/resource.entity.ts:41",{"_index":2204,"title":{},"body":{"classes/VersionedResource-1.html":{}}}],["libs/data/src/entities/common/tag.entity.ts",{"_index":1858,"title":{},"body":{"classes/Tag-1.html":{}}}],["libs/data/src/entities/common/tag.entity.ts:11",{"_index":1859,"title":{},"body":{"classes/Tag-1.html":{}}}],["libs/data/src/entities/common/tag.entity.ts:5",{"_index":1862,"title":{},"body":{"classes/Tag-1.html":{}}}],["libs/data/src/entities/common/tag.entity.ts:8",{"_index":1860,"title":{},"body":{"classes/Tag-1.html":{}}}],["libs/data/src/entities/content/content.entity.ts",{"_index":878,"title":{},"body":{"classes/Content.html":{}}}],["libs/data/src/entities/content/content.entity.ts:12",{"_index":880,"title":{},"body":{"classes/Content.html":{}}}],["libs/data/src/entities/content/content.entity.ts:19",{"_index":879,"title":{},"body":{"classes/Content.html":{}}}],["libs/data/src/entities/event/base.entity.ts",{"_index":665,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:10",{"_index":689,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:13",{"_index":697,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:20",{"_index":685,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:24",{"_index":691,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:28",{"_index":709,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:34",{"_index":708,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:37",{"_index":690,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:40",{"_index":692,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:46",{"_index":704,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:49",{"_index":707,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:52",{"_index":706,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:58",{"_index":696,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:61",{"_index":694,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:64",{"_index":693,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:67",{"_index":695,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:70",{"_index":688,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:73",{"_index":698,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:76",{"_index":702,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:79",{"_index":703,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:82",{"_index":700,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:85",{"_index":699,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/base.entity.ts:88",{"_index":701,"title":{},"body":{"classes/BaseEvent.html":{}}}],["libs/data/src/entities/event/draft.entity.ts",{"_index":1139,"title":{},"body":{"classes/EventDraft-1.html":{}}}],["libs/data/src/entities/event/draft.entity.ts:25",{"_index":1142,"title":{},"body":{"classes/EventDraft-1.html":{}}}],["libs/data/src/entities/event/draft.entity.ts:28",{"_index":1145,"title":{},"body":{"classes/EventDraft-1.html":{}}}],["libs/data/src/entities/event/draft.entity.ts:34",{"_index":1149,"title":{},"body":{"classes/EventDraft-1.html":{}}}],["libs/data/src/entities/event/draft.entity.ts:37",{"_index":1148,"title":{},"body":{"classes/EventDraft-1.html":{}}}],["libs/data/src/entities/event/draft.entity.ts:43",{"_index":1146,"title":{},"body":{"classes/EventDraft-1.html":{}}}],["libs/data/src/entities/event/draft.entity.ts:46",{"_index":1140,"title":{},"body":{"classes/EventDraft-1.html":{}}}],["libs/data/src/entities/event/draft.entity.ts:49",{"_index":1147,"title":{},"body":{"classes/EventDraft-1.html":{}}}],["libs/data/src/entities/event/published.entity.ts",{"_index":1715,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["libs/data/src/entities/event/published.entity.ts:21",{"_index":1726,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["libs/data/src/entities/event/published.entity.ts:24",{"_index":1728,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["libs/data/src/entities/event/published.entity.ts:26",{"_index":1727,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["libs/data/src/entities/event/published.entity.ts:33",{"_index":1720,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["libs/data/src/entities/event/published.entity.ts:36",{"_index":1721,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["libs/data/src/entities/event/published.entity.ts:42",{"_index":1729,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["libs/data/src/entities/event/published.entity.ts:45",{"_index":1725,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["libs/data/src/entities/event/published.entity.ts:51",{"_index":1722,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["libs/data/src/entities/event/published.entity.ts:54",{"_index":1716,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["libs/data/src/entities/event/published.entity.ts:57",{"_index":1723,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["libs/data/src/entities/event/published.entity.ts:64",{"_index":1717,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["libs/data/src/entities/event/published.entity.ts:68",{"_index":1724,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["libs/data/src/entities/event/template.entity.ts",{"_index":1177,"title":{},"body":{"entities/EventTemplate.html":{}}}],["libs/data/src/entities/event/template.entity.ts:19",{"_index":1182,"title":{},"body":{"entities/EventTemplate.html":{}}}],["libs/data/src/entities/event/template.entity.ts:22",{"_index":1184,"title":{},"body":{"entities/EventTemplate.html":{}}}],["libs/data/src/entities/event/template.entity.ts:29",{"_index":1189,"title":{},"body":{"entities/EventTemplate.html":{}}}],["libs/data/src/entities/event/template.entity.ts:33",{"_index":1188,"title":{},"body":{"entities/EventTemplate.html":{}}}],["libs/data/src/entities/event/template.entity.ts:37",{"_index":1180,"title":{},"body":{"entities/EventTemplate.html":{}}}],["libs/data/src/entities/event/template.entity.ts:43",{"_index":1190,"title":{},"body":{"entities/EventTemplate.html":{}}}],["libs/data/src/entities/event/template.entity.ts:46",{"_index":1187,"title":{},"body":{"entities/EventTemplate.html":{}}}],["libs/data/src/entities/event/template.entity.ts:52",{"_index":1185,"title":{},"body":{"entities/EventTemplate.html":{}}}],["libs/data/src/entities/event/template.entity.ts:55",{"_index":1178,"title":{},"body":{"entities/EventTemplate.html":{}}}],["libs/data/src/entities/event/template.entity.ts:58",{"_index":1186,"title":{},"body":{"entities/EventTemplate.html":{}}}],["libs/data/src/entities/location/network.entity.ts",{"_index":1497,"title":{},"body":{"entities/Network.html":{},"classes/Network-1.html":{}}}],["libs/data/src/entities/location/network.entity.ts:14",{"_index":1500,"title":{},"body":{"entities/Network.html":{},"classes/Network-1.html":{}}}],["libs/data/src/entities/location/network.entity.ts:17",{"_index":1501,"title":{},"body":{"entities/Network.html":{},"classes/Network-1.html":{}}}],["libs/data/src/entities/location/network.entity.ts:20",{"_index":1499,"title":{},"body":{"entities/Network.html":{},"classes/Network-1.html":{}}}],["libs/data/src/entities/location/network.entity.ts:23",{"_index":1503,"title":{},"body":{"entities/Network.html":{},"classes/Network-1.html":{}}}],["libs/data/src/entities/tags/event",{"_index":1158,"title":{},"body":{"entities/EventKeyword.html":{}}}],["libs/data/src/entities/tags/genre.entity.ts",{"_index":1311,"title":{},"body":{"entities/Genre.html":{}}}],["libs/data/src/entities/tags/genre.entity.ts:12",{"_index":1315,"title":{},"body":{"entities/Genre.html":{}}}],["libs/data/src/entities/tags/genre.entity.ts:15",{"_index":1320,"title":{},"body":{"entities/Genre.html":{}}}],["libs/data/src/entities/tags/genre.entity.ts:18",{"_index":1316,"title":{},"body":{"entities/Genre.html":{}}}],["libs/data/src/entities/tags/genre.entity.ts:21",{"_index":1317,"title":{},"body":{"entities/Genre.html":{}}}],["libs/data/src/entities/tags/genre.entity.ts:23",{"_index":1318,"title":{},"body":{"entities/Genre.html":{}}}],["libs/data/src/entities/user/associate.entity.ts",{"_index":385,"title":{},"body":{"classes/AssociateUser-1.html":{}}}],["libs/data/src/entities/user/base.entity.ts",{"_index":1894,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:101",{"_index":1912,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:104",{"_index":1925,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:107",{"_index":1946,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:110",{"_index":1929,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:113",{"_index":1922,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:116",{"_index":1913,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:119",{"_index":1926,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:122",{"_index":1947,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:125",{"_index":1933,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:128",{"_index":1924,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:131",{"_index":1914,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:134",{"_index":1927,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:137",{"_index":1948,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:31",{"_index":1944,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:38",{"_index":1936,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:42",{"_index":1921,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:46",{"_index":1940,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:50",{"_index":1937,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:58",{"_index":1917,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:62",{"_index":1945,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:66",{"_index":1928,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:69",{"_index":1942,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:76",{"_index":1935,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:80",{"_index":1938,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:86",{"_index":1919,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:89",{"_index":1943,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:95",{"_index":1930,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/base.entity.ts:98",{"_index":1923,"title":{},"body":{"entities/User.html":{}}}],["libs/data/src/entities/user/organizer.entity.ts",{"_index":1632,"title":{},"body":{"classes/OrganizerUser-1.html":{}}}],["libs/data/src/entities/user/organizer.entity.ts:9",{"_index":1635,"title":{},"body":{"classes/OrganizerUser-1.html":{}}}],["libs/data/src/entities/user/performer.entity.ts",{"_index":1675,"title":{},"body":{"classes/PerformerUser-1.html":{}}}],["libs/data/src/entities/user/performer.entity.ts:9",{"_index":1676,"title":{},"body":{"classes/PerformerUser-1.html":{}}}],["libs/data/src/entities/user/public.entity.ts",{"_index":1713,"title":{},"body":{"classes/PublicUser-1.html":{}}}],["libs/data/src/entities/user/venue.entity.ts",{"_index":2173,"title":{},"body":{"classes/VenueUser-1.html":{}}}],["libs/data/src/entities/user/venue.entity.ts:9",{"_index":2174,"title":{},"body":{"classes/VenueUser-1.html":{}}}],["libs/data/src/enums/account",{"_index":2287,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/data/src/enums/event",{"_index":2288,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/data/src/enums/stage",{"_index":2289,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/data/src/enums/user",{"_index":2290,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/data/src/enums/venue",{"_index":2291,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/data/src/interfaces/physical",{"_index":1678,"title":{},"body":{"interfaces/PhysicalSpace-1.html":{}}}],["libs/decorators/src/auth/auth.decorator.ts",{"_index":537,"title":{},"body":{"interfaces/AuthOptions.html":{},"miscellaneous/functions.html":{}}}],["libs/decorators/src/controller.decorator.ts",{"_index":2324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/decorators/src/resource/find",{"_index":1270,"title":{},"body":{"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"miscellaneous/functions.html":{}}}],["libs/decorators/src/resource/update.decorator.ts",{"_index":1664,"title":{},"body":{"interfaces/PatchOptions.html":{},"miscellaneous/functions.html":{}}}],["libs/messaging/src/messaging.module.ts",{"_index":1462,"title":{},"body":{"modules/MessagingModule.html":{}}}],["libs/messaging/src/messaging.service.ts",{"_index":1463,"title":{},"body":{"injectables/MessagingService.html":{}}}],["license",{"_index":2523,"title":{"license.html":{}},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2525,"title":{},"body":{"index.html":{}}}],["likes",{"_index":206,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["limiting",{"_index":2613,"title":{},"body":{"todo.html":{}}}],["line",{"_index":494,"title":{},"body":{"guards/AuthGuard-1.html":{},"index.html":{}}}],["link",{"_index":2088,"title":{},"body":{"entities/Venue.html":{}}}],["list",{"_index":2151,"title":{},"body":{"entities/Venue.html":{}}}],["listed",{"_index":2628,"title":{},"body":{"todo.html":{}}}],["listing",{"_index":2120,"title":{},"body":{"entities/Venue.html":{}}}],["literal",{"_index":1967,"title":{},"body":{"classes/UserPreferences.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":2332,"title":{},"body":{"index.html":{},"properties.html":{}}}],["local",{"_index":1408,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":1810,"title":{},"body":{"modules/StrategyModule.html":{}}}],["localauthguard",{"_index":1400,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"injectables/LocalAuthGuard.html":{}}}],["localstrategy",{"_index":512,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"modules/StrategyModule.html":{},"overview.html":{}}}],["located",{"_index":2077,"title":{},"body":{"entities/Venue.html":{}}}],["location",{"_index":285,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"injectables/LocationsService.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"entities/PublishedEvent.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"entities/Venue.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["location.dto",{"_index":1875,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["location.dto.ts",{"_index":989,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["locations",{"_index":1430,"title":{},"body":{"injectables/LocationsService.html":{}}}],["locations.controller",{"_index":1419,"title":{},"body":{"modules/LocationsModule.html":{}}}],["locations.service",{"_index":1414,"title":{},"body":{"controllers/LocationsController.html":{},"modules/LocationsModule.html":{}}}],["locationscontroller",{"_index":1410,"title":{"controllers/LocationsController.html":{}},"body":{"controllers/LocationsController.html":{},"modules/LocationsModule.html":{}}}],["locationsmodule",{"_index":333,"title":{"modules/LocationsModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/LocationsModule.html":{},"modules.html":{},"overview.html":{}}}],["locationsservice",{"_index":1413,"title":{"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{}},"body":{"controllers/LocationsController.html":{},"modules/LocationsModule.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"overview.html":{}}}],["lockout",{"_index":2605,"title":{},"body":{"todo.html":{}}}],["logging",{"_index":835,"title":{},"body":{"modules/ConnectionModule.html":{}}}],["logic",{"_index":2557,"title":{},"body":{"todo.html":{}}}],["login",{"_index":899,"title":{},"body":{"injectables/CoreAuthService.html":{},"todo.html":{}}}],["login(logindto",{"_index":918,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["loginbase",{"_index":1068,"title":{"interfaces/LoginBase.html":{}},"body":{"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/UsernameLoginDto.html":{}}}],["logindto",{"_index":919,"title":{},"body":{"injectables/CoreAuthService.html":{},"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/UsernameLoginDto.html":{},"miscellaneous/typealiases.html":{}}}],["logindto.password",{"_index":948,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["logindto.type",{"_index":943,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["logindto.username",{"_index":947,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["logins",{"_index":2562,"title":{},"body":{"todo.html":{}}}],["logintype",{"_index":938,"title":{},"body":{"injectables/CoreAuthService.html":{},"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/UsernameLoginDto.html":{},"miscellaneous/enumerations.html":{}}}],["logintype.email",{"_index":958,"title":{},"body":{"injectables/CoreAuthService.html":{},"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/UsernameLoginDto.html":{}}}],["logintype.google",{"_index":959,"title":{},"body":{"injectables/CoreAuthService.html":{},"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/UsernameLoginDto.html":{}}}],["logintype.username",{"_index":945,"title":{},"body":{"injectables/CoreAuthService.html":{},"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/UsernameLoginDto.html":{}}}],["longitude",{"_index":2085,"title":{},"body":{"entities/Venue.html":{}}}],["loose",{"_index":2399,"title":{},"body":{"index.html":{}}}],["lot",{"_index":2100,"title":{},"body":{"entities/Venue.html":{}}}],["machine",{"_index":2426,"title":{},"body":{"index.html":{}}}],["made",{"_index":303,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["main",{"_index":2558,"title":{},"body":{"todo.html":{}}}],["maintenance",{"_index":2377,"title":{},"body":{"index.html":{}}}],["manage",{"_index":2492,"title":{},"body":{"index.html":{},"todo.html":{}}}],["manageable",{"_index":2631,"title":{},"body":{"todo.html":{}}}],["managedaccounts",{"_index":1633,"title":{},"body":{"classes/OrganizerUser-1.html":{},"classes/PerformerUser-1.html":{},"classes/VenueUser-1.html":{}}}],["managedby",{"_index":113,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"classes/BandAccount.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/MusicianAccount.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{}}}],["management",{"_index":2372,"title":{},"body":{"index.html":{},"properties.html":{},"todo.html":{}}}],["managing",{"_index":2543,"title":{},"body":{"properties.html":{},"todo.html":{}}}],["manytomany",{"_index":78,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"classes/BaseEvent.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"entities/EventTemplate.html":{},"entities/Genre.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"entities/PublishedEvent.html":{},"entities/User.html":{},"classes/VenueAccount.html":{}}}],["manytomany(undefined",{"_index":47,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/Band.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"entities/EventTemplate.html":{},"entities/Genre.html":{},"entities/Musician.html":{},"entities/PublishedEvent.html":{},"entities/User.html":{}}}],["manytoone",{"_index":77,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BaseEvent.html":{},"entities/Credentials.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"classes/MusicianAccount.html":{},"classes/OAuthCredentials.html":{},"classes/OrganizerAccount.html":{},"classes/PasswordCredentials.html":{},"entities/PublishedEvent.html":{},"entities/Stage.html":{},"entities/UserSession.html":{},"classes/VenueAccount.html":{}}}],["manytoone(()=>user,user.createdcontent",{"_index":881,"title":{},"body":{"classes/Content.html":{}}}],["manytoone(undefined",{"_index":577,"title":{},"body":{"classes/BandAccount.html":{},"entities/Credentials.html":{},"entities/EventTemplate.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"entities/Stage.html":{},"entities/UserSession.html":{},"classes/VenueAccount.html":{}}}],["map",{"_index":1783,"title":{},"body":{"guards/RolesGuard-1.html":{}}}],["map[role",{"_index":1784,"title":{},"body":{"guards/RolesGuard-1.html":{}}}],["maria",{"_index":2039,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["matches",{"_index":1593,"title":{},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{}}}],["matching",{"_index":125,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Announcement.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{},"entities/AuthAccount.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"classes/AuthMetadata.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/BackLine.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"modules/BandsModule.html":{},"injectables/BandsService.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/Comment.html":{},"modules/ConfigModule.html":{},"modules/ConnectionModule.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"classes/CreateBandDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMusicianDto.html":{},"classes/CreateNetworkDto.html":{},"classes/CreateOrganizerDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateVenueDto.html":{},"entities/Credentials.html":{},"injectables/CredentialsService.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"modules/GuardsModule.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"modules/LocationsModule.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"interfaces/LoginBase.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/MessagingGateway.html":{},"modules/MessagingModule.html":{},"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{},"classes/ModerationAction.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"modules/MusiciansModule.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"modules/NetworksModule.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"controllers/NotificationController.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"interfaces/NotificationServiceOptions.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{},"controllers/OrganizersController.html":{},"modules/OrganizersModule.html":{},"injectables/OrganizersService.html":{},"classes/PASystem.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/PastEvent.html":{},"interfaces/PatchOptions.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/Post.html":{},"controllers/PresenceController.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/PublicUser-1.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/Session.html":{},"injectables/SessionsService.html":{},"injectables/SocialAuthService.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"modules/StrategyModule.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VenueUser-1.html":{},"controllers/VenuesController.html":{},"modules/VenuesModule.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"guards/WebsocketGuard.html":{},"modules/WebsocketModule.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["matchroles",{"_index":2297,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matchroles(roles",{"_index":1780,"title":{},"body":{"guards/RolesGuard-1.html":{},"miscellaneous/functions.html":{}}}],["maximum",{"_index":2092,"title":{},"body":{"entities/Venue.html":{}}}],["measures",{"_index":2611,"title":{},"body":{"todo.html":{}}}],["mechanisms",{"_index":2600,"title":{},"body":{"todo.html":{}}}],["media",{"_index":1312,"title":{},"body":{"entities/Genre.html":{}}}],["media.controller",{"_index":1445,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.service",{"_index":1437,"title":{},"body":{"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"modules/MediaModule.html":{}}}],["media_release",{"_index":256,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["mediacontroller",{"_index":1433,"title":{"controllers/MediaController.html":{},"controllers/MediaController-1.html":{}},"body":{"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"modules/MediaModule.html":{}}}],["mediamodule",{"_index":1441,"title":{"modules/MediaModule.html":{}},"body":{"modules/MediaModule.html":{},"modules.html":{},"overview.html":{}}}],["mediaservice",{"_index":1436,"title":{"injectables/MediaService.html":{},"injectables/MediaService-1.html":{}},"body":{"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"overview.html":{}}}],["meetup",{"_index":1111,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"miscellaneous/enumerations.html":{}}}],["members",{"_index":274,"title":{},"body":{"classes/Announcement.html":{},"entities/Band.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["message",{"_index":432,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CoreAuthService.html":{},"classes/MessagingGateway.html":{},"index.html":{}}}],["message_broker",{"_index":523,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CoreAuthService.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["messagebody",{"_index":169,"title":{},"body":{"classes/AdminGateway.html":{},"classes/EventsGateway.html":{},"classes/MessagingGateway.html":{}}}],["messagebroker",{"_index":907,"title":{},"body":{"injectables/CoreAuthService.html":{},"injectables/EventsService.html":{},"injectables/NotificationService.html":{},"injectables/UsersService.html":{}}}],["messagepattern",{"_index":425,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern({cmd",{"_index":419,"title":{},"body":{"controllers/AuthController.html":{}}}],["messaging.service",{"_index":1456,"title":{},"body":{"classes/MessagingGateway.html":{},"modules/MessagingModule.html":{}}}],["messaginggateway",{"_index":1450,"title":{"classes/MessagingGateway.html":{}},"body":{"classes/MessagingGateway.html":{}}}],["messagingmodule",{"_index":1458,"title":{"modules/MessagingModule.html":{}},"body":{"modules/MessagingModule.html":{},"modules/WebsocketModule.html":{},"modules.html":{},"overview.html":{}}}],["messagingservice",{"_index":1453,"title":{"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{}},"body":{"classes/MessagingGateway.html":{},"modules/MessagingModule.html":{},"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{},"overview.html":{}}}],["metadata",{"_index":60,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/AssociateUser.html":{},"classes/AuthMetadata.html":{},"classes/BandAccount.html":{},"classes/BaseEvent.html":{},"classes/BusinessAccount.html":{},"entities/Contact.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/MusicianAccount.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerUser.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"classes/PerformerUser.html":{},"classes/PublicUser.html":{},"entities/User.html":{},"classes/UserPreferences.html":{},"classes/VenueAccount.html":{},"classes/VenueUser.html":{},"dependencies.html":{}}}],["method",{"_index":909,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["methods",{"_index":132,"title":{},"body":{"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"controllers/BandsController.html":{},"injectables/BandsService.html":{},"controllers/ChatController.html":{},"injectables/ChatService.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"controllers/ContentController.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"controllers/GraphqlController.html":{},"injectables/GraphqlService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/MessagingGateway.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"controllers/NotificationController.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"controllers/PresenceController.html":{},"injectables/PresenceService.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/SwaggerDocBuilder.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"guards/WebsocketGuard.html":{},"todo.html":{}}}],["michael",{"_index":2546,"title":{},"body":{"properties.html":{}}}],["microphones",{"_index":2168,"title":{},"body":{"entities/Venue.html":{}}}],["microservice",{"_index":2476,"title":{},"body":{"index.html":{},"properties.html":{},"todo.html":{}}}],["microservices",{"_index":2331,"title":{},"body":{"index.html":{},"properties.html":{},"todo.html":{}}}],["mics",{"_index":2167,"title":{},"body":{"entities/Venue.html":{}}}],["migrate",{"_index":2466,"title":{},"body":{"index.html":{}}}],["migratethis",{"_index":2467,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":2465,"title":{},"body":{"index.html":{}}}],["minimum",{"_index":2136,"title":{},"body":{"entities/Venue.html":{}}}],["minimumage",{"_index":675,"title":{},"body":{"classes/BaseEvent.html":{},"classes/BusinessAccount.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"entities/Venue.html":{}}}],["minutes",{"_index":1179,"title":{},"body":{"entities/EventTemplate.html":{}}}],["miscellaneous",{"_index":2264,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["misinformation",{"_index":640,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"miscellaneous/enumerations.html":{}}}],["mit",{"_index":2526,"title":{},"body":{"index.html":{}}}],["mocha",{"_index":2502,"title":{},"body":{"index.html":{}}}],["mode",{"_index":2474,"title":{},"body":{"index.html":{}}}],["models",{"_index":2470,"title":{},"body":{"index.html":{}}}],["moderationaction",{"_index":633,"title":{"classes/ModerationAction.html":{}},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["moderatorreceived",{"_index":650,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["moderatorreceivedat",{"_index":651,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["moderators",{"_index":311,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["modularity",{"_index":2374,"title":{},"body":{"index.html":{}}}],["module",{"_index":182,"title":{"modules/AdminModule.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BandsModule.html":{},"modules/ChatModule.html":{},"modules/ConfigModule.html":{},"modules/ConnectionModule.html":{},"modules/ContentModule.html":{},"modules/EventsModule.html":{},"modules/GraphqlModule.html":{},"modules/GuardsModule.html":{},"modules/LocationsModule.html":{},"modules/MediaModule.html":{},"modules/MessagingModule.html":{},"modules/MusiciansModule.html":{},"modules/NetworksModule.html":{},"modules/NotificationModule.html":{},"modules/NotificationsModule.html":{},"modules/OrganizersModule.html":{},"modules/PresenceModule.html":{},"modules/StrategyModule.html":{},"modules/UsersModule.html":{},"modules/VenuesModule.html":{},"modules/WebsocketModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BandsModule.html":{},"modules/ChatModule.html":{},"modules/ConfigModule.html":{},"modules/ConnectionModule.html":{},"modules/ContentModule.html":{},"modules/EventsModule.html":{},"modules/GraphqlModule.html":{},"modules/GuardsModule.html":{},"modules/LocationsModule.html":{},"modules/MediaModule.html":{},"modules/MessagingModule.html":{},"modules/MusiciansModule.html":{},"modules/NetworksModule.html":{},"modules/NotificationModule.html":{},"modules/NotificationsModule.html":{},"modules/OrganizersModule.html":{},"modules/PresenceModule.html":{},"modules/StrategyModule.html":{},"modules/UsersModule.html":{},"modules/VenuesModule.html":{},"modules/WebsocketModule.html":{},"overview.html":{}}}],["modules",{"_index":184,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BandsModule.html":{},"modules/ChatModule.html":{},"modules/ConfigModule.html":{},"modules/ConnectionModule.html":{},"modules/ContentModule.html":{},"modules/EventsModule.html":{},"modules/GraphqlModule.html":{},"modules/GuardsModule.html":{},"modules/LocationsModule.html":{},"modules/MediaModule.html":{},"modules/MessagingModule.html":{},"modules/MusiciansModule.html":{},"modules/NetworksModule.html":{},"modules/NotificationModule.html":{},"modules/NotificationsModule.html":{},"modules/OrganizersModule.html":{},"modules/PresenceModule.html":{},"modules/StrategyModule.html":{},"modules/UsersModule.html":{},"modules/VenuesModule.html":{},"modules/WebsocketModule.html":{},"modules.html":{},"overview.html":{}}}],["monitors",{"_index":2166,"title":{},"body":{"entities/Venue.html":{}}}],["more",{"_index":268,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["move",{"_index":1932,"title":{},"body":{"entities/User.html":{}}}],["multiple",{"_index":2073,"title":{},"body":{"entities/Venue.html":{},"index.html":{}}}],["music",{"_index":2330,"title":{},"body":{"index.html":{},"properties.html":{}}}],["musical",{"_index":2360,"title":{},"body":{"index.html":{}}}],["musician",{"_index":91,"title":{"entities/Musician.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"modules/ConnectionModule.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/OrganizerAccount.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"entities/PublishedEvent.html":{},"classes/VenueAccount.html":{},"miscellaneous/enumerations.html":{}}}],["musician.account",{"_index":114,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["musician.bands",{"_index":575,"title":{},"body":{"entities/Band.html":{}}}],["musician.bands)@apiproperty",{"_index":570,"title":{},"body":{"entities/Band.html":{}}}],["musician.dto",{"_index":1878,"title":{},"body":{"classes/UpdateMusicianDto.html":{}}}],["musician.dto.ts",{"_index":992,"title":{},"body":{"classes/CreateMusicianDto.html":{},"classes/UpdateMusicianDto.html":{}}}],["musician.entity",{"_index":92,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["musician/venue/organizer",{"_index":2544,"title":{},"body":{"properties.html":{}}}],["musicianaccount",{"_index":111,"title":{"classes/MusicianAccount.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"modules/ConnectionModule.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerUser-1.html":{},"classes/VenueAccount.html":{}}}],["musicians",{"_index":1074,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/PastEvent.html":{},"entities/PublishedEvent.html":{},"index.html":{}}}],["musicians.controller",{"_index":1490,"title":{},"body":{"modules/MusiciansModule.html":{}}}],["musicians.service",{"_index":1489,"title":{},"body":{"modules/MusiciansModule.html":{}}}],["musicianscontroller",{"_index":359,"title":{"controllers/MusiciansController.html":{}},"body":{"modules/AppModule.html":{},"controllers/MusiciansController.html":{},"modules/MusiciansModule.html":{}}}],["musiciansinputs",{"_index":2675,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["musiciansmodule",{"_index":334,"title":{"modules/MusiciansModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/MusiciansModule.html":{},"modules.html":{},"overview.html":{}}}],["musiciansoutputs",{"_index":2676,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["musiciansservice",{"_index":1487,"title":{"injectables/MusiciansService.html":{}},"body":{"modules/MusiciansModule.html":{},"injectables/MusiciansService.html":{},"overview.html":{}}}],["name",{"_index":20,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"classes/Announcement.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"modules/AuthModule.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"injectables/BandsService.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"injectables/CoreAuthService.html":{},"classes/EventReview.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/ExternalAuthService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{},"injectables/LocationsService.html":{},"classes/MessagingGateway.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/Opinion.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"entities/PublishedEvent.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Statement.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Thread.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"guards/WebsocketGuard.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":176,"title":{},"body":{"classes/AdminGateway.html":{},"classes/EventsGateway.html":{},"classes/MessagingGateway.html":{}}}],["near",{"_index":2104,"title":{},"body":{"entities/Venue.html":{}}}],["needs",{"_index":2587,"title":{},"body":{"todo.html":{}}}],["nestconfigmodule",{"_index":822,"title":{},"body":{"modules/ConfigModule.html":{}}}],["nestconfigmodule.forroot(configoptions",{"_index":826,"title":{},"body":{"modules/ConfigModule.html":{}}}],["nestjs",{"_index":2333,"title":{},"body":{"index.html":{},"properties.html":{}}}],["nestjs/common",{"_index":146,"title":{},"body":{"injectables/AccountService.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"controllers/BandsController.html":{},"modules/BandsModule.html":{},"injectables/BandsService.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"modules/ConfigModule.html":{},"modules/ConnectionModule.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"controllers/ContentController.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"injectables/CredentialsService.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"modules/GuardsModule.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"modules/LocationsModule.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"modules/MessagingModule.html":{},"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{},"controllers/MusiciansController.html":{},"modules/MusiciansModule.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"modules/NetworksModule.html":{},"injectables/NetworksService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"controllers/OrganizersController.html":{},"modules/OrganizersModule.html":{},"injectables/OrganizersService.html":{},"interfaces/PatchOptions.html":{},"controllers/PresenceController.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"injectables/SessionsService.html":{},"injectables/SocialAuthService.html":{},"modules/StrategyModule.html":{},"classes/SwaggerDocBuilder.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"controllers/VenuesController.html":{},"modules/VenuesModule.html":{},"injectables/VenuesService.html":{},"guards/WebsocketGuard.html":{},"modules/WebsocketModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":823,"title":{},"body":{"modules/ConfigModule.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1766,"title":{},"body":{"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":455,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/CoreAuthService.html":{},"guards/WebsocketGuard.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":235,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PastEvent.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/UpdateUserDto.html":{},"classes/VenueReview.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":426,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/CoreAuthService.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":518,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2239,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":2240,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":82,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"interfaces/AuthOptions.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"classes/Business.html":{},"entities/Contact.html":{},"classes/Content.html":{},"classes/CreateUserDto.html":{},"classes/EmailLoginDto.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/PasswordLogin.html":{},"interfaces/PatchOptions.html":{},"classes/Performer.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/Resource-1.html":{},"classes/SwaggerDocBuilder.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"entities/User.html":{},"classes/UsernameLoginDto.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VersionedResource-1.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":145,"title":{},"body":{"injectables/AccountService.html":{},"modules/AuthModule.html":{},"modules/ConnectionModule.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/VenuesModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":170,"title":{},"body":{"classes/AdminGateway.html":{},"classes/EventsGateway.html":{},"classes/MessagingGateway.html":{},"dependencies.html":{}}}],["network",{"_index":294,"title":{"entities/Network.html":{},"classes/Network-1.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["network.dto",{"_index":1881,"title":{},"body":{"classes/UpdateNetworkDto.html":{}}}],["network.dto.ts",{"_index":995,"title":{},"body":{"classes/CreateNetworkDto.html":{},"classes/UpdateNetworkDto.html":{}}}],["networkbroadcast",{"_index":312,"title":{"classes/NetworkBroadcast.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["networking",{"_index":264,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"index.html":{},"properties.html":{}}}],["networks",{"_index":280,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["networks.controller",{"_index":1532,"title":{},"body":{"modules/NetworksModule.html":{}}}],["networks.service",{"_index":1522,"title":{},"body":{"classes/NetworksController.html":{},"modules/NetworksModule.html":{}}}],["networkscontroller",{"_index":1508,"title":{"classes/NetworksController.html":{}},"body":{"classes/NetworksController.html":{},"modules/NetworksModule.html":{}}}],["networksmodule",{"_index":335,"title":{"modules/NetworksModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/NetworksModule.html":{},"modules.html":{},"overview.html":{}}}],["networksservice",{"_index":1511,"title":{"injectables/NetworksService.html":{}},"body":{"classes/NetworksController.html":{},"modules/NetworksModule.html":{},"injectables/NetworksService.html":{},"overview.html":{}}}],["new",{"_index":288,"title":{},"body":{"classes/Announcement.html":{},"guards/AuthGuard.html":{},"injectables/BandsService.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"injectables/CoreAuthService.html":{},"classes/EventReview.html":{},"injectables/EventsService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"injectables/LocationsService.html":{},"injectables/MusiciansService.html":{},"classes/NetworkBroadcast.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"injectables/OrganizersService.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"injectables/VenuesService.html":{},"guards/WebsocketGuard.html":{}}}],["newsletter",{"_index":240,"title":{"classes/Newsletter.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["newuser",{"_index":2021,"title":{},"body":{"injectables/UsersService.html":{}}}],["next",{"_index":493,"title":{},"body":{"guards/AuthGuard-1.html":{},"todo.html":{}}}],["nights",{"_index":2144,"title":{},"body":{"entities/Venue.html":{}}}],["node.js",{"_index":2383,"title":{},"body":{"index.html":{}}}],["nosql",{"_index":2582,"title":{},"body":{"todo.html":{}}}],["note",{"_index":2573,"title":{},"body":{"todo.html":{}}}],["notfoundexception",{"_index":936,"title":{},"body":{"injectables/CoreAuthService.html":{},"interfaces/FindOneOptions.html":{},"interfaces/PatchOptions.html":{}}}],["notfoundexception('error",{"_index":978,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["notification",{"_index":1565,"title":{},"body":{"classes/NotificationChannel.html":{},"index.html":{}}}],["notification.controller",{"_index":1599,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification.service",{"_index":1573,"title":{},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{}}}],["notification_gateway_url",{"_index":2463,"title":{},"body":{"index.html":{}}}],["notificationchannel",{"_index":1541,"title":{"classes/NotificationChannel.html":{}},"body":{"classes/NotificationChannel.html":{}}}],["notificationcontroller",{"_index":1566,"title":{"controllers/NotificationController.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{}}}],["notificationfilter",{"_index":1578,"title":{"interfaces/NotificationFilter.html":{}},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{}}}],["notificationfrequency",{"_index":1582,"title":{},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{},"miscellaneous/enumerations.html":{}}}],["notificationmetadata",{"_index":1588,"title":{"interfaces/NotificationMetadata.html":{}},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{}}}],["notificationmodule",{"_index":336,"title":{"modules/NotificationModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/NotificationModule.html":{},"modules.html":{},"overview.html":{}}}],["notifications",{"_index":1562,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["notifications.controller",{"_index":1611,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["notifications.service",{"_index":1605,"title":{},"body":{"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{}}}],["notificationscontroller",{"_index":1602,"title":{"controllers/NotificationsController.html":{}},"body":{"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{}}}],["notificationservice",{"_index":1550,"title":{"injectables/NotificationService.html":{}},"body":{"classes/NotificationChannel.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["notificationserviceoptions",{"_index":1586,"title":{"interfaces/NotificationServiceOptions.html":{}},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{}}}],["notificationsmodule",{"_index":1607,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/NotificationsModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservice",{"_index":1575,"title":{"injectables/NotificationsService.html":{}},"body":{"controllers/NotificationController.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"overview.html":{}}}],["npm",{"_index":2420,"title":{},"body":{"index.html":{}}}],["null",{"_index":551,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["nullable",{"_index":1033,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"entities/User.html":{}}}],["number",{"_index":162,"title":{},"body":{"classes/AdminGateway.html":{},"classes/Announcement.html":{},"classes/BackLine.html":{},"injectables/BandsService.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"classes/Content.html":{},"entities/Credentials.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"classes/EventsGateway.html":{},"injectables/EventsService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/Instrument.html":{},"injectables/LocationsService.html":{},"classes/MessagingGateway.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"injectables/OrganizersService.html":{},"classes/PASystem.html":{},"classes/PasswordCredentials.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/Tag.html":{},"classes/Thread.html":{},"entities/User-1.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}}}],["oauth",{"_index":1055,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["oauth2",{"_index":1389,"title":{},"body":{"injectables/JwtStrategy-3.html":{},"dependencies.html":{}}}],["oauth20",{"_index":1376,"title":{},"body":{"injectables/JwtStrategy-1.html":{},"dependencies.html":{}}}],["oauthcredentials",{"_index":1059,"title":{"classes/OAuthCredentials.html":{}},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["oauthtoken",{"_index":1019,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["oauthtokensecret",{"_index":1020,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["ob",{"_index":960,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["object",{"_index":318,"title":{},"body":{"classes/Announcement.html":{},"guards/AuthGuard.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"entities/Venue.html":{},"classes/VenueReview.html":{},"guards/WebsocketGuard.html":{}}}],["observable",{"_index":488,"title":{},"body":{"guards/AuthGuard-1.html":{},"guards/RolesGuard-1.html":{}}}],["occasionally",{"_index":1585,"title":{},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{},"miscellaneous/enumerations.html":{}}}],["occupancy",{"_index":2093,"title":{},"body":{"entities/Venue.html":{}}}],["offered",{"_index":2127,"title":{},"body":{"entities/Venue.html":{}}}],["offerings",{"_index":2067,"title":{},"body":{"entities/Venue.html":{}}}],["official",{"_index":2430,"title":{},"body":{"index.html":{}}}],["oidc",{"_index":1054,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["omit",{"_index":1272,"title":{},"body":{"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"interfaces/PatchOptions.html":{}}}],["omittype",{"_index":1105,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"classes/PastEvent.html":{}}}],["omittype(publishedevent",{"_index":1129,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"classes/PastEvent.html":{}}}],["one.decorator.ts",{"_index":1280,"title":{},"body":{"interfaces/FindOneOptions.html":{},"miscellaneous/functions.html":{}}}],["onetomany",{"_index":404,"title":{},"body":{"entities/AuthAccount.html":{},"entities/Contact.html":{},"classes/OrganizerUser-1.html":{},"classes/PerformerUser-1.html":{},"entities/User.html":{},"entities/Venue.html":{},"classes/VenueUser-1.html":{}}}],["onetomany(undefined",{"_index":392,"title":{},"body":{"entities/AuthAccount.html":{},"classes/OrganizerUser-1.html":{},"classes/PerformerUser-1.html":{},"entities/Venue.html":{},"classes/VenueUser-1.html":{}}}],["onetoone",{"_index":74,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/AuthAccount.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"entities/User.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{}}}],["onetoone(undefined",{"_index":400,"title":{},"body":{"entities/AuthAccount.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"entities/User.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{}}}],["ongatewayconnection",{"_index":1209,"title":{},"body":{"classes/EventsGateway.html":{}}}],["ongatewaydisconnect",{"_index":1210,"title":{},"body":{"classes/EventsGateway.html":{}}}],["open",{"_index":2508,"title":{},"body":{"index.html":{}}}],["open_mic",{"_index":1109,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"miscellaneous/enumerations.html":{}}}],["operations",{"_index":2572,"title":{},"body":{"todo.html":{}}}],["opinion",{"_index":238,"title":{"classes/Opinion.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["opinion:64",{"_index":1175,"title":{},"body":{"classes/EventReview.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Review.html":{},"classes/VenueReview.html":{}}}],["opinion:65",{"_index":1176,"title":{},"body":{"classes/EventReview.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Review.html":{},"classes/VenueReview.html":{}}}],["opinions",{"_index":277,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["optional",{"_index":9,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"interfaces/AuthOptions.html":{},"entities/Band.html":{},"controllers/BandsController.html":{},"injectables/BandsService.html":{},"classes/BaseEvent.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"entities/Contact.html":{},"injectables/CoreAuthService.html":{},"entities/Credentials.html":{},"classes/Event.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{},"injectables/LocationsService.html":{},"classes/MessagingGateway.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"classes/OAuthCredentials.html":{},"entities/Organizer.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"classes/PasswordCredentials.html":{},"interfaces/PatchOptions.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"entities/PublishedEvent.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"guards/WebsocketGuard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["options",{"_index":2097,"title":{},"body":{"entities/Venue.html":{},"miscellaneous/functions.html":{}}}],["options?.roles",{"_index":550,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["orchestration",{"_index":2624,"title":{},"body":{"todo.html":{}}}],["organizer",{"_index":93,"title":{"entities/Organizer.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"classes/AssociateUser.html":{},"classes/BandAccount.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"modules/ConnectionModule.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/MusicianAccount.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"entities/PublishedEvent.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"miscellaneous/enumerations.html":{}}}],["organizer.account",{"_index":123,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["organizer.dto",{"_index":1884,"title":{},"body":{"classes/UpdateOrganizerDto.html":{}}}],["organizer.dto.ts",{"_index":998,"title":{},"body":{"classes/CreateOrganizerDto.html":{},"classes/UpdateOrganizerDto.html":{}}}],["organizer.entity",{"_index":94,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["organizer_seeking",{"_index":261,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["organizeraccount",{"_index":122,"title":{"classes/OrganizerAccount.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"modules/ConnectionModule.html":{},"classes/MusicianAccount.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerUser-1.html":{},"classes/VenueAccount.html":{}}}],["organizerreview",{"_index":251,"title":{"classes/OrganizerReview.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["organizers",{"_index":1638,"title":{},"body":{"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{}}}],["organizers.controller",{"_index":1652,"title":{},"body":{"modules/OrganizersModule.html":{}}}],["organizers.service",{"_index":1651,"title":{},"body":{"modules/OrganizersModule.html":{}}}],["organizerscontroller",{"_index":358,"title":{"controllers/OrganizersController.html":{}},"body":{"modules/AppModule.html":{},"controllers/OrganizersController.html":{},"modules/OrganizersModule.html":{}}}],["organizersinputs",{"_index":2677,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["organizersmodule",{"_index":337,"title":{"modules/OrganizersModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/OrganizersModule.html":{},"modules.html":{},"overview.html":{}}}],["organizersoutputs",{"_index":2678,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["organizersservice",{"_index":1649,"title":{"injectables/OrganizersService.html":{}},"body":{"modules/OrganizersModule.html":{},"injectables/OrganizersService.html":{},"overview.html":{}}}],["organizeruser",{"_index":384,"title":{"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{}},"body":{"classes/AssociateUser.html":{},"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{},"classes/PerformerUser.html":{},"classes/PublicUser.html":{},"modules/UsersModule.html":{},"classes/VenueUser.html":{}}}],["original/.../auth.guard.ts",{"_index":2304,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original/.../groups.ts",{"_index":2642,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/.../index.ts",{"_index":2640,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/.../main.ts",{"_index":2295,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["original/.../musicians.ts",{"_index":2644,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/.../organizers.ts",{"_index":2646,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/.../performers.ts",{"_index":2648,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/.../roles.guard.ts",{"_index":2298,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original/.../shared.ts",{"_index":2301,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original/.../users.service.ts",{"_index":2686,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/.../venues.ts",{"_index":2650,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/schema/accounts/shared.ts",{"_index":2326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original/trpc/accounts/groups.ts",{"_index":2691,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/trpc/accounts/musicians.ts",{"_index":2692,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/trpc/accounts/organizers.ts",{"_index":2693,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/trpc/accounts/performers.ts",{"_index":2694,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/trpc/accounts/venues.ts",{"_index":2695,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/trpc/events/main.ts",{"_index":2697,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/trpc/general/index.ts",{"_index":2690,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/trpc/index.ts",{"_index":2696,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original/xxx/apps/advanced/chat/src/chat.controller.ts",{"_index":799,"title":{},"body":{"controllers/ChatController.html":{}}}],["original/xxx/apps/advanced/chat/src/chat.controller.ts:9",{"_index":801,"title":{},"body":{"controllers/ChatController.html":{}}}],["original/xxx/apps/advanced/chat/src/chat.module.ts",{"_index":808,"title":{},"body":{"modules/ChatModule.html":{}}}],["original/xxx/apps/advanced/chat/src/chat.service.ts",{"_index":810,"title":{},"body":{"injectables/ChatService.html":{}}}],["original/xxx/apps/advanced/chat/src/chat.service.ts:5",{"_index":811,"title":{},"body":{"injectables/ChatService.html":{}}}],["original/xxx/apps/advanced/chat/src/main.ts",{"_index":2313,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original/xxx/apps/advanced/notification/src/main.ts",{"_index":2314,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original/xxx/apps/advanced/notification/src/notifications.controller.ts",{"_index":1603,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["original/xxx/apps/advanced/notification/src/notifications.controller.ts:9",{"_index":1604,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["original/xxx/apps/advanced/notification/src/notifications.module.ts",{"_index":1610,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["original/xxx/apps/advanced/notification/src/notifications.service.ts",{"_index":1612,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["original/xxx/apps/advanced/notification/src/notifications.service.ts:5",{"_index":1613,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["original/xxx/apps/advanced/presence/src/main.ts",{"_index":2315,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original/xxx/apps/advanced/presence/src/presence.controller.ts",{"_index":1688,"title":{},"body":{"controllers/PresenceController.html":{}}}],["original/xxx/apps/advanced/presence/src/presence.controller.ts:9",{"_index":1689,"title":{},"body":{"controllers/PresenceController.html":{}}}],["original/xxx/apps/advanced/presence/src/presence.module.ts",{"_index":1696,"title":{},"body":{"modules/PresenceModule.html":{}}}],["original/xxx/apps/advanced/presence/src/presence.service.ts",{"_index":1698,"title":{},"body":{"injectables/PresenceService.html":{}}}],["original/xxx/apps/advanced/presence/src/presence.service.ts:5",{"_index":1699,"title":{},"body":{"injectables/PresenceService.html":{}}}],["original/xxx/apps/auth/src/auth.controller.ts",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["original/xxx/apps/auth/src/auth.controller.ts:10",{"_index":420,"title":{},"body":{"controllers/AuthController.html":{}}}],["original/xxx/apps/auth/src/auth.service.ts",{"_index":556,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["original/xxx/apps/auth/src/main.ts",{"_index":2312,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original/xxx/apps/core/event/src/events.controller.ts",{"_index":1192,"title":{},"body":{"controllers/EventsController.html":{}}}],["original/xxx/apps/core/event/src/events.controller.ts:9",{"_index":1193,"title":{},"body":{"controllers/EventsController.html":{}}}],["original/xxx/apps/core/event/src/events.service.ts",{"_index":1259,"title":{},"body":{"injectables/EventsService-2.html":{}}}],["original/xxx/apps/core/event/src/events.service.ts:5",{"_index":1260,"title":{},"body":{"injectables/EventsService-2.html":{}}}],["original/xxx/apps/core/event/src/main.ts",{"_index":2316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original/xxx/apps/core/location/src/locations.controller.ts",{"_index":1411,"title":{},"body":{"controllers/LocationsController.html":{}}}],["original/xxx/apps/core/location/src/locations.controller.ts:9",{"_index":1412,"title":{},"body":{"controllers/LocationsController.html":{}}}],["original/xxx/apps/core/location/src/locations.service.ts",{"_index":1431,"title":{},"body":{"injectables/LocationsService-1.html":{}}}],["original/xxx/apps/core/location/src/locations.service.ts:5",{"_index":1432,"title":{},"body":{"injectables/LocationsService-1.html":{}}}],["original/xxx/apps/core/location/src/main.ts",{"_index":2317,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original/xxx/apps/core/media/src/main.ts",{"_index":2318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original/xxx/apps/core/media/src/media.controller.ts",{"_index":1439,"title":{},"body":{"controllers/MediaController-1.html":{}}}],["original/xxx/apps/core/media/src/media.controller.ts:9",{"_index":1440,"title":{},"body":{"controllers/MediaController-1.html":{}}}],["original/xxx/apps/core/media/src/media.service.ts",{"_index":1448,"title":{},"body":{"injectables/MediaService-1.html":{}}}],["original/xxx/apps/core/media/src/media.service.ts:5",{"_index":1449,"title":{},"body":{"injectables/MediaService-1.html":{}}}],["original/xxx/apps/core/user/src/main.ts",{"_index":2319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original/xxx/apps/core/user/src/users.controller.ts",{"_index":1981,"title":{},"body":{"controllers/UsersController.html":{}}}],["original/xxx/apps/core/user/src/users.controller.ts:9",{"_index":1982,"title":{},"body":{"controllers/UsersController.html":{}}}],["original/xxx/apps/core/user/src/users.service.ts",{"_index":2033,"title":{},"body":{"injectables/UsersService-1.html":{},"miscellaneous/typealiases.html":{}}}],["original/xxx/apps/core/user/src/users.service.ts:11",{"_index":2041,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["original/xxx/apps/core/user/src/users.service.ts:24",{"_index":2036,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["original/xxx/apps/core/user/src/users.service.ts:28",{"_index":2034,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["original/xxx/apps/gateways/graphql/src/graphql.controller.ts",{"_index":1326,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["original/xxx/apps/gateways/graphql/src/graphql.controller.ts:9",{"_index":1327,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["original/xxx/apps/gateways/graphql/src/graphql.module.ts",{"_index":1334,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["original/xxx/apps/gateways/graphql/src/graphql.service.ts",{"_index":1336,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["original/xxx/apps/gateways/graphql/src/graphql.service.ts:5",{"_index":1337,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["original/xxx/apps/gateways/graphql/src/main.ts",{"_index":2320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original/xxx/apps/gateways/rest/src/app.module.ts",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/auth.controller.ts",{"_index":436,"title":{},"body":{"controllers/AuthController-1.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/bands.controller.ts",{"_index":579,"title":{},"body":{"controllers/BandsController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/bands.controller.ts:16",{"_index":587,"title":{},"body":{"controllers/BandsController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/bands.controller.ts:21",{"_index":589,"title":{},"body":{"controllers/BandsController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/bands.controller.ts:26",{"_index":592,"title":{},"body":{"controllers/BandsController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/bands.controller.ts:31",{"_index":599,"title":{},"body":{"controllers/BandsController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/bands.controller.ts:36",{"_index":595,"title":{},"body":{"controllers/BandsController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/events.controller.ts",{"_index":1197,"title":{},"body":{"controllers/EventsController-1.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/events.controller.ts:16",{"_index":1200,"title":{},"body":{"controllers/EventsController-1.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/events.controller.ts:21",{"_index":1201,"title":{},"body":{"controllers/EventsController-1.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/events.controller.ts:26",{"_index":1202,"title":{},"body":{"controllers/EventsController-1.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/events.controller.ts:31",{"_index":1205,"title":{},"body":{"controllers/EventsController-1.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/events.controller.ts:36",{"_index":1203,"title":{},"body":{"controllers/EventsController-1.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/musicians.controller.ts",{"_index":1476,"title":{},"body":{"controllers/MusiciansController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/musicians.controller.ts:16",{"_index":1478,"title":{},"body":{"controllers/MusiciansController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/musicians.controller.ts:21",{"_index":1479,"title":{},"body":{"controllers/MusiciansController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/musicians.controller.ts:26",{"_index":1480,"title":{},"body":{"controllers/MusiciansController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/musicians.controller.ts:31",{"_index":1483,"title":{},"body":{"controllers/MusiciansController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/musicians.controller.ts:36",{"_index":1481,"title":{},"body":{"controllers/MusiciansController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/organizers.controller.ts",{"_index":1637,"title":{},"body":{"controllers/OrganizersController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/organizers.controller.ts:16",{"_index":1640,"title":{},"body":{"controllers/OrganizersController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/organizers.controller.ts:21",{"_index":1641,"title":{},"body":{"controllers/OrganizersController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/organizers.controller.ts:26",{"_index":1642,"title":{},"body":{"controllers/OrganizersController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/organizers.controller.ts:31",{"_index":1645,"title":{},"body":{"controllers/OrganizersController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/organizers.controller.ts:36",{"_index":1643,"title":{},"body":{"controllers/OrganizersController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/users.controller.ts",{"_index":1986,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/users.controller.ts:16",{"_index":1988,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/users.controller.ts:21",{"_index":1989,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/users.controller.ts:26",{"_index":1990,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/users.controller.ts:31",{"_index":1992,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/users.controller.ts:36",{"_index":1991,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/venues.controller.ts",{"_index":2176,"title":{},"body":{"controllers/VenuesController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/venues.controller.ts:16",{"_index":2179,"title":{},"body":{"controllers/VenuesController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/venues.controller.ts:21",{"_index":2180,"title":{},"body":{"controllers/VenuesController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/venues.controller.ts:26",{"_index":2181,"title":{},"body":{"controllers/VenuesController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/venues.controller.ts:31",{"_index":2183,"title":{},"body":{"controllers/VenuesController.html":{}}}],["original/xxx/apps/gateways/rest/src/controllers/venues.controller.ts:36",{"_index":2182,"title":{},"body":{"controllers/VenuesController.html":{}}}],["original/xxx/apps/gateways/rest/src/main.ts",{"_index":2321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original/xxx/auth/src/auth.service.ts",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["original/xxx/auth/src/guards/auth.guard.ts",{"_index":486,"title":{},"body":{"guards/AuthGuard-1.html":{},"miscellaneous/functions.html":{}}}],["original/xxx/auth/src/guards/auth.guard.ts:6",{"_index":487,"title":{},"body":{"guards/AuthGuard-1.html":{}}}],["original/xxx/auth/src/guards/guards.module.ts",{"_index":1349,"title":{},"body":{"modules/GuardsModule.html":{}}}],["original/xxx/auth/src/guards/roles.guard.ts",{"_index":1774,"title":{},"body":{"guards/RolesGuard-1.html":{},"miscellaneous/functions.html":{}}}],["original/xxx/auth/src/guards/roles.guard.ts:10",{"_index":1776,"title":{},"body":{"guards/RolesGuard-1.html":{}}}],["original/xxx/auth/src/guards/roles.guard.ts:7",{"_index":1775,"title":{},"body":{"guards/RolesGuard-1.html":{}}}],["original/xxx/data/src/connection.service.ts",{"_index":837,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["original/xxx/data/src/connection.service.ts:12",{"_index":848,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["original/xxx/data/src/connection.service.ts:16",{"_index":849,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["original/xxx/data/src/connection.service.ts:20",{"_index":847,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["original/xxx/data/src/connection.service.ts:24",{"_index":845,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["original/xxx/data/src/connection.service.ts:5",{"_index":844,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["original/xxx/data/src/connection.service.ts:8",{"_index":846,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["original/xxx/data/src/connection/connection.service.ts",{"_index":855,"title":{},"body":{"injectables/ConnectionService-1.html":{}}}],["original/xxx/data/src/connection/connection.service.ts:12",{"_index":860,"title":{},"body":{"injectables/ConnectionService-1.html":{}}}],["original/xxx/data/src/connection/connection.service.ts:16",{"_index":861,"title":{},"body":{"injectables/ConnectionService-1.html":{}}}],["original/xxx/data/src/connection/connection.service.ts:20",{"_index":859,"title":{},"body":{"injectables/ConnectionService-1.html":{}}}],["original/xxx/data/src/connection/connection.service.ts:24",{"_index":857,"title":{},"body":{"injectables/ConnectionService-1.html":{}}}],["original/xxx/data/src/connection/connection.service.ts:5",{"_index":856,"title":{},"body":{"injectables/ConnectionService-1.html":{}}}],["original/xxx/data/src/connection/connection.service.ts:8",{"_index":858,"title":{},"body":{"injectables/ConnectionService-1.html":{}}}],["original/xxx/data/src/dto/user/create",{"_index":1011,"title":{},"body":{"classes/CreateUserDto-1.html":{}}}],["original/xxx/data/src/dto/user/update",{"_index":1889,"title":{},"body":{"classes/UpdateUserDto-1.html":{}}}],["original/xxx/data/src/entities/user/user.entity.ts",{"_index":1961,"title":{},"body":{"entities/User-1.html":{}}}],["original/xxx/data/src/entities/user/user.entity.ts:12",{"_index":1965,"title":{},"body":{"entities/User-1.html":{}}}],["original/xxx/data/src/entities/user/user.entity.ts:15",{"_index":1964,"title":{},"body":{"entities/User-1.html":{}}}],["original/xxx/data/src/entities/user/user.entity.ts:6",{"_index":1963,"title":{},"body":{"entities/User-1.html":{}}}],["original/xxx/data/src/entities/user/user.entity.ts:9",{"_index":1962,"title":{},"body":{"entities/User-1.html":{}}}],["orphanedrowaction",{"_index":1030,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["otheraccessibilityfeatures",{"_index":2117,"title":{},"body":{"entities/Venue.html":{}}}],["out",{"_index":195,"title":{},"body":{"modules/AdminModule.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BandsModule.html":{},"modules/ChatModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/EventsModule.html":{},"modules/GraphqlModule.html":{},"modules/LocationsModule.html":{},"modules/MediaModule.html":{},"modules/MessagingModule.html":{},"modules/MusiciansModule.html":{},"modules/NetworksModule.html":{},"modules/NotificationModule.html":{},"modules/NotificationsModule.html":{},"modules/OrganizersModule.html":{},"modules/PresenceModule.html":{},"modules/StrategyModule.html":{},"modules/UsersModule.html":{},"modules/VenuesModule.html":{},"modules/WebsocketModule.html":{},"overview.html":{}}}],["outdoor",{"_index":2130,"title":{},"body":{"entities/Venue.html":{}}}],["outlines",{"_index":2549,"title":{},"body":{"todo.html":{}}}],["overview",{"_index":2365,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["pa",{"_index":2163,"title":{},"body":{"entities/Venue.html":{}}}],["package",{"_index":2233,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":2479,"title":{},"body":{"index.html":{}}}],["page",{"_index":2089,"title":{},"body":{"entities/Venue.html":{}}}],["param",{"_index":602,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"classes/NetworksController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["parameters",{"_index":139,"title":{},"body":{"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"controllers/BandsController.html":{},"injectables/BandsService.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"injectables/CoreAuthService.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/ExternalAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{},"injectables/LocationsService.html":{},"classes/MessagingGateway.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/SwaggerDocBuilder.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"guards/WebsocketGuard.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":297,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["parking",{"_index":2096,"title":{},"body":{"entities/Venue.html":{}}}],["partialtype",{"_index":234,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PastEvent.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"classes/VenueReview.html":{}}}],["partialtype(baseevent",{"_index":1191,"title":{},"body":{"entities/EventTemplate.html":{}}}],["partialtype(createbanddto",{"_index":1868,"title":{},"body":{"classes/UpdateBandDto.html":{}}}],["partialtype(createeventdto",{"_index":1871,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["partialtype(createlocationdto",{"_index":1874,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["partialtype(createmusiciandto",{"_index":1877,"title":{},"body":{"classes/UpdateMusicianDto.html":{}}}],["partialtype(createnetworkdto",{"_index":1880,"title":{},"body":{"classes/UpdateNetworkDto.html":{}}}],["partialtype(createorganizerdto",{"_index":1883,"title":{},"body":{"classes/UpdateOrganizerDto.html":{}}}],["partialtype(createuserdto",{"_index":1887,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{}}}],["partialtype(createvenuedto",{"_index":1892,"title":{},"body":{"classes/UpdateVenueDto.html":{}}}],["partialtype(event",{"_index":1132,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["partialtype(socialpost",{"_index":325,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["participants",{"_index":1119,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"classes/PastEvent.html":{},"entities/PublishedEvent.html":{}}}],["passowrd",{"_index":916,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["passport",{"_index":1365,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":517,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1362,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1358,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":917,"title":{},"body":{"injectables/CoreAuthService.html":{},"classes/CreateUserDto.html":{},"entities/Credentials.html":{},"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoginBase.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"classes/UsernameLoginDto.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["passwordcredentials",{"_index":1058,"title":{"classes/PasswordCredentials.html":{}},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["passwordlogin",{"_index":1063,"title":{"classes/PasswordLogin.html":{}},"body":{"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/UsernameLoginDto.html":{}}}],["passwordlogin:16",{"_index":1066,"title":{},"body":{"classes/EmailLoginDto.html":{},"classes/UsernameLoginDto.html":{}}}],["past",{"_index":1136,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["pastevent",{"_index":1137,"title":{"classes/PastEvent.html":{}},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["pasystem",{"_index":563,"title":{"classes/PASystem.html":{}},"body":{"classes/BackLine.html":{},"classes/PASystem.html":{},"classes/Stage-1.html":{},"entities/Venue.html":{}}}],["patch",{"_index":601,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"classes/NetworksController.html":{},"controllers/OrganizersController.html":{},"interfaces/PatchOptions.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["patch(':id",{"_index":598,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"classes/NetworksController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["patch(path",{"_index":1665,"title":{},"body":{"interfaces/PatchOptions.html":{}}}],["patchoptions",{"_index":1663,"title":{"interfaces/PatchOptions.html":{}},"body":{"interfaces/PatchOptions.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":1273,"title":{},"body":{"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/NetworksController.html":{},"interfaces/PatchOptions.html":{},"miscellaneous/functions.html":{}}}],["paths",{"_index":2072,"title":{},"body":{"entities/Venue.html":{}}}],["payload",{"_index":469,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CoreAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"guards/WebsocketGuard.html":{}}}],["payload.sub",{"_index":1371,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{}}}],["payload.username",{"_index":1372,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{}}}],["payment",{"_index":2107,"title":{},"body":{"entities/Venue.html":{}}}],["paymentmethods",{"_index":2105,"title":{},"body":{"entities/Venue.html":{}}}],["performance",{"_index":2588,"title":{},"body":{"todo.html":{}}}],["performant",{"_index":2363,"title":{},"body":{"index.html":{}}}],["performer",{"_index":246,"title":{"classes/Performer.html":{}},"body":{"classes/Announcement.html":{},"classes/AssociateUser.html":{},"entities/Band.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"entities/Musician.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/Performer.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"miscellaneous/enumerations.html":{}}}],["performer_seeking",{"_index":262,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["performeraccount",{"_index":755,"title":{"classes/PerformerAccount.html":{}},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["performerreview",{"_index":247,"title":{"classes/PerformerReview.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["performersinputs",{"_index":2679,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["performersoutputs",{"_index":2680,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["performeruser",{"_index":96,"title":{"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/AssociateUser.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerUser.html":{},"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{},"classes/PublicUser.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VenueAccount.html":{},"classes/VenueUser.html":{}}}],["performerusersrepository",{"_index":2005,"title":{},"body":{"injectables/UsersService.html":{}}}],["persistence",{"_index":2586,"title":{},"body":{"todo.html":{}}}],["pg",{"_index":2257,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":792,"title":{},"body":{"classes/BusinessContact.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{},"entities/Venue.html":{}}}],["physicalspace",{"_index":559,"title":{"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{}},"body":{"classes/BackLine.html":{},"classes/BusinessAccount.html":{},"classes/Instrument.html":{},"classes/PASystem.html":{},"classes/PerformerAccount.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/Resource.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Tag.html":{},"entities/Venue.html":{},"classes/VenueKeyword.html":{},"classes/VersionedResource.html":{}}}],["picktype",{"_index":1106,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["picktype(publishedevent",{"_index":1138,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["plan",{"_index":2507,"title":{},"body":{"index.html":{}}}],["platform",{"_index":2149,"title":{},"body":{"entities/Venue.html":{},"index.html":{}}}],["platform's",{"_index":2417,"title":{},"body":{"index.html":{}}}],["platform.git",{"_index":2446,"title":{},"body":{"index.html":{}}}],["platforms",{"_index":323,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["popular",{"_index":2380,"title":{},"body":{"index.html":{}}}],["populate",{"_index":2459,"title":{},"body":{"index.html":{}}}],["post",{"_index":201,"title":{"classes/Post.html":{}},"body":{"classes/Announcement.html":{},"controllers/BandsController.html":{},"classes/BannedUser.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"controllers/EventsController-1.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"controllers/MusiciansController.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"controllers/OrganizersController.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"controllers/UsersController-1.html":{},"classes/VenueReview.html":{},"controllers/VenuesController.html":{},"miscellaneous/enumerations.html":{}}}],["post:23",{"_index":223,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/EventReview.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Review.html":{},"classes/VenueReview.html":{}}}],["post:24",{"_index":217,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/EventReview.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Review.html":{},"classes/VenueReview.html":{}}}],["post:25",{"_index":220,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/EventReview.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Review.html":{},"classes/VenueReview.html":{}}}],["post:26",{"_index":221,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/EventReview.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Review.html":{},"classes/VenueReview.html":{}}}],["post:27",{"_index":222,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/EventReview.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Review.html":{},"classes/VenueReview.html":{}}}],["post:28",{"_index":219,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/EventReview.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Review.html":{},"classes/VenueReview.html":{}}}],["post:29",{"_index":225,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/EventReview.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Review.html":{},"classes/VenueReview.html":{}}}],["postgres",{"_index":830,"title":{},"body":{"modules/ConnectionModule.html":{}}}],["postgresql",{"_index":2581,"title":{},"body":{"todo.html":{}}}],["postgresql://user:password@postgres:5432/lmx",{"_index":831,"title":{},"body":{"modules/ConnectionModule.html":{}}}],["postponed",{"_index":1114,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"miscellaneous/enumerations.html":{}}}],["posts",{"_index":321,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["posttype",{"_index":224,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["potential",{"_index":2622,"title":{},"body":{"todo.html":{}}}],["potentially",{"_index":2561,"title":{},"body":{"todo.html":{}}}],["preferences",{"_index":866,"title":{},"body":{"entities/Contact.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{}}}],["preferred",{"_index":2436,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":437,"title":{},"body":{"controllers/AuthController-1.html":{},"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["prerequisites",{"_index":2419,"title":{},"body":{"index.html":{}}}],["presence.controller",{"_index":1697,"title":{},"body":{"modules/PresenceModule.html":{}}}],["presence.service",{"_index":1691,"title":{},"body":{"controllers/PresenceController.html":{},"modules/PresenceModule.html":{}}}],["presencecontroller",{"_index":1687,"title":{"controllers/PresenceController.html":{}},"body":{"controllers/PresenceController.html":{},"modules/PresenceModule.html":{}}}],["presencemodule",{"_index":1693,"title":{"modules/PresenceModule.html":{}},"body":{"modules/PresenceModule.html":{},"modules.html":{},"overview.html":{}}}],["presenceservice",{"_index":1690,"title":{"injectables/PresenceService.html":{}},"body":{"controllers/PresenceController.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"overview.html":{}}}],["press_release",{"_index":255,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["presskiturl",{"_index":758,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{}}}],["primary",{"_index":1556,"title":{},"body":{"classes/NotificationChannel.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{}}}],["primarycolumn",{"_index":1863,"title":{},"body":{"classes/Tag-1.html":{}}}],["primarycolumn({unique",{"_index":1861,"title":{},"body":{"classes/Tag-1.html":{}}}],["primarygeneratedcolumn",{"_index":507,"title":{},"body":{"classes/AuthMetadata.html":{},"entities/Band.html":{},"entities/Contact.html":{},"entities/Musician.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"entities/Organizer.html":{},"classes/Resource-1.html":{},"entities/User.html":{},"entities/User-1.html":{},"entities/Venue.html":{},"classes/VersionedResource-1.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":503,"title":{},"body":{"classes/AuthMetadata.html":{},"entities/Band.html":{},"entities/Contact.html":{},"entities/Musician.html":{},"entities/Organizer.html":{},"classes/Resource-1.html":{},"entities/User.html":{},"entities/Venue.html":{},"classes/VersionedResource-1.html":{}}}],["primarygeneratedcolumn('uuid')@apiproperty({description",{"_index":1747,"title":{},"body":{"classes/Resource-1.html":{}}}],["primarygeneratedcolumn('uuid')@apiproperty({example",{"_index":867,"title":{},"body":{"entities/Contact.html":{},"entities/User.html":{}}}],["prioritize",{"_index":2603,"title":{},"body":{"todo.html":{}}}],["private",{"_index":150,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"injectables/CoreAuthService.html":{},"injectables/EventsService.html":{},"injectables/NotificationService.html":{},"classes/SwaggerDocBuilder.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"guards/WebsocketGuard.html":{}}}],["privateaccess",{"_index":778,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"entities/Venue.html":{}}}],["privategroup",{"_index":302,"title":{"classes/PrivateGroup.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["privileges",{"_index":686,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["producer",{"_index":266,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["producerid",{"_index":1544,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["produces",{"_index":1561,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["production",{"_index":2484,"title":{},"body":{"index.html":{}}}],["progress",{"_index":2337,"title":{},"body":{"index.html":{}}}],["project",{"_index":2524,"title":{},"body":{"index.html":{}}}],["promise",{"_index":166,"title":{},"body":{"classes/AdminGateway.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"classes/EventsGateway.html":{},"injectables/EventsService.html":{},"injectables/LocalStrategy.html":{},"classes/MessagingGateway.html":{},"guards/RolesGuard-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"guards/WebsocketGuard.html":{}}}],["promotes",{"_index":2373,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"entities/AuthAccount.html":{},"classes/AuthMetadata.html":{},"interfaces/AuthOptions.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"classes/Comment.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"classes/CreateUserDto.html":{},"entities/Credentials.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"classes/EventsGateway.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"interfaces/LoginBase.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser-1.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"interfaces/PatchOptions.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser-1.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"classes/VenueUser-1.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"properties.html":{}}}],["protection",{"_index":2615,"title":{},"body":{"todo.html":{}}}],["provide",{"_index":464,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["provided",{"_index":483,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{},"index.html":{}}}],["provider",{"_index":1021,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["provideraccountid",{"_index":1022,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["providers",{"_index":189,"title":{},"body":{"modules/AdminModule.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BandsModule.html":{},"modules/ChatModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/EventsModule.html":{},"modules/GraphqlModule.html":{},"modules/LocationsModule.html":{},"modules/MediaModule.html":{},"modules/MessagingModule.html":{},"modules/MusiciansModule.html":{},"modules/NetworksModule.html":{},"modules/NotificationModule.html":{},"modules/NotificationsModule.html":{},"modules/OrganizersModule.html":{},"modules/PresenceModule.html":{},"modules/StrategyModule.html":{},"modules/UsersModule.html":{},"modules/VenuesModule.html":{},"modules/WebsocketModule.html":{},"overview.html":{},"todo.html":{}}}],["public",{"_index":304,"title":{},"body":{"classes/Announcement.html":{},"classes/AssociateUser.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Thread.html":{},"entities/Venue.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"miscellaneous/enumerations.html":{}}}],["publicly",{"_index":281,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["publictransportation",{"_index":2102,"title":{},"body":{"entities/Venue.html":{}}}],["publicuser",{"_index":382,"title":{"classes/PublicUser.html":{},"classes/PublicUser-1.html":{}},"body":{"classes/AssociateUser.html":{},"classes/OrganizerUser.html":{},"classes/PerformerUser.html":{},"classes/PublicUser.html":{},"classes/PublicUser-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VenueUser.html":{}}}],["publicusersrepository",{"_index":2004,"title":{},"body":{"injectables/UsersService.html":{}}}],["published",{"_index":1120,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"entities/PublishedEvent.html":{}}}],["published.entity",{"_index":1155,"title":{},"body":{"classes/EventDraft-1.html":{}}}],["published_event_genres",{"_index":1719,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["publishedevent",{"_index":1121,"title":{"entities/PublishedEvent.html":{}},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"entities/Genre.html":{},"classes/PastEvent.html":{},"entities/PublishedEvent.html":{},"entities/User.html":{}}}],["publishedevents",{"_index":1162,"title":{},"body":{"entities/EventKeyword.html":{},"entities/Genre.html":{}}}],["purposes",{"_index":2598,"title":{},"body":{"todo.html":{}}}],["push",{"_index":1554,"title":{},"body":{"classes/NotificationChannel.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{},"miscellaneous/enumerations.html":{}}}],["quality",{"_index":2499,"title":{},"body":{"index.html":{}}}],["quickviewevents",{"_index":2681,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["quickvieworganizers",{"_index":2682,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["quickviewperformers",{"_index":2683,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["quickviewvenues",{"_index":2684,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["rabbitmq",{"_index":2335,"title":{},"body":{"index.html":{}}}],["rate",{"_index":2612,"title":{},"body":{"todo.html":{}}}],["readable",{"_index":1559,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["readonly",{"_index":151,"title":{},"body":{"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/ChatController.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"controllers/ContentController.html":{},"injectables/CoreAuthService.html":{},"controllers/EventsController.html":{},"classes/EventsGateway.html":{},"injectables/EventsService.html":{},"controllers/GraphqlController.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"classes/MessagingGateway.html":{},"classes/NetworksController.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/NotificationsController.html":{},"controllers/PresenceController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"guards/WebsocketGuard.html":{}}}],["real",{"_index":2403,"title":{},"body":{"index.html":{}}}],["reason",{"_index":647,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["received",{"_index":1237,"title":{},"body":{"classes/EventsGateway.html":{}}}],["redis",{"_index":2583,"title":{},"body":{"todo.html":{}}}],["reference",{"_index":295,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"index.html":{},"todo.html":{}}}],["references",{"_index":1564,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["reflect",{"_index":2259,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1763,"title":{},"body":{"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{}}}],["refresh",{"_index":912,"title":{},"body":{"injectables/CoreAuthService.html":{},"todo.html":{}}}],["refreshtoken",{"_index":1023,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["refreshtokenexpiresin",{"_index":1024,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["register",{"_index":900,"title":{},"body":{"injectables/CoreAuthService.html":{},"todo.html":{}}}],["register(undefined",{"_index":921,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["registerdto",{"_index":922,"title":{"classes/RegisterDto.html":{}},"body":{"injectables/CoreAuthService.html":{},"classes/RegisterDto.html":{}}}],["registeredevents",{"_index":1908,"title":{},"body":{"entities/User.html":{}}}],["registeredusers",{"_index":1126,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"classes/PastEvent.html":{},"entities/PublishedEvent.html":{}}}],["registration",{"_index":2620,"title":{},"body":{"todo.html":{}}}],["registrationemail",{"_index":785,"title":{},"body":{"classes/BusinessContact.html":{},"classes/ContactDetails.html":{}}}],["registrationlink",{"_index":676,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["registrationphone",{"_index":786,"title":{},"body":{"classes/BusinessContact.html":{},"classes/ContactDetails.html":{}}}],["relation",{"_index":46,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/AuthAccount.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"entities/Genre.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerUser-1.html":{},"classes/PerformerUser-1.html":{},"entities/PublishedEvent.html":{},"entities/Stage.html":{},"entities/User.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueUser-1.html":{}}}],["relational",{"_index":2580,"title":{},"body":{"todo.html":{}}}],["remove",{"_index":584,"title":{},"body":{"controllers/BandsController.html":{},"injectables/BandsService.html":{},"controllers/EventsController-1.html":{},"injectables/EventsService.html":{},"injectables/LocationsService.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{}}}],["remove(@param('id",{"_index":613,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"classes/NetworksController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["remove(id",{"_index":593,"title":{},"body":{"controllers/BandsController.html":{},"injectables/BandsService.html":{},"controllers/EventsController-1.html":{},"injectables/EventsService.html":{},"injectables/LocationsService.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{}}}],["removedcomment",{"_index":659,"title":{"classes/RemovedComment.html":{}},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["removes",{"_index":630,"title":{},"body":{"injectables/BandsService.html":{},"injectables/EventsService.html":{},"injectables/LocationsService.html":{},"injectables/MusiciansService.html":{},"injectables/NetworksService.html":{},"injectables/OrganizersService.html":{},"injectables/VenuesService.html":{}}}],["repository",{"_index":137,"title":{},"body":{"injectables/AccountService.html":{},"injectables/EventsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["request",{"_index":452,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"guards/RolesGuard-1.html":{},"guards/WebsocketGuard.html":{},"miscellaneous/functions.html":{}}}],["request.headers.authorization?.split",{"_index":485,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.user",{"_index":1779,"title":{},"body":{"guards/RolesGuard-1.html":{}}}],["request['user",{"_index":480,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["requiredroles",{"_index":1768,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":1772,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requirement",{"_index":2137,"title":{},"body":{"entities/Venue.html":{}}}],["requirements",{"_index":2575,"title":{},"body":{"todo.html":{}}}],["requiresregistration",{"_index":677,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["requiresreservation",{"_index":776,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"entities/Venue.html":{}}}],["requiresticket",{"_index":678,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["rescheduled",{"_index":1116,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"miscellaneous/enumerations.html":{}}}],["reservationlink",{"_index":777,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"entities/Venue.html":{}}}],["reset",{"_index":194,"title":{},"body":{"modules/AdminModule.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BandsModule.html":{},"modules/ChatModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"injectables/CoreAuthService.html":{},"modules/EventsModule.html":{},"modules/GraphqlModule.html":{},"modules/LocationsModule.html":{},"modules/MediaModule.html":{},"modules/MessagingModule.html":{},"modules/MusiciansModule.html":{},"modules/NetworksModule.html":{},"modules/NotificationModule.html":{},"modules/NotificationsModule.html":{},"modules/OrganizersModule.html":{},"modules/PresenceModule.html":{},"modules/StrategyModule.html":{},"modules/UsersModule.html":{},"modules/VenuesModule.html":{},"modules/WebsocketModule.html":{},"overview.html":{},"todo.html":{}}}],["resetpassword",{"_index":901,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["resetpassword(username",{"_index":924,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["resides",{"_index":2477,"title":{},"body":{"index.html":{}}}],["resolutiondate",{"_index":661,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["resolved",{"_index":652,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["resolvedat",{"_index":653,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["resolvedcases",{"_index":660,"title":{"classes/ResolvedCases.html":{}},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{}}}],["resource",{"_index":227,"title":{"classes/Resource.html":{},"classes/Resource-1.html":{}},"body":{"classes/Announcement.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/Event.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/Instrument.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"interfaces/PhysicalSpace.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/Tag.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}}}],["resource:2",{"_index":229,"title":{},"body":{"classes/Announcement.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/Event.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/VenueReview.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}}}],["resource:3",{"_index":228,"title":{},"body":{"classes/Announcement.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/Event.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/VenueReview.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}}}],["resource:4",{"_index":230,"title":{},"body":{"classes/Announcement.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/Event.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/VenueReview.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}}}],["resources",{"_index":343,"title":{},"body":{"modules/ApiModule.html":{}}}],["responsible",{"_index":2370,"title":{},"body":{"index.html":{}}}],["rest",{"_index":2408,"title":{},"body":{"index.html":{}}}],["rest_api_prefix",{"_index":1832,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["rest_api_version",{"_index":1833,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["restaurant",{"_index":761,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["restaurants",{"_index":2353,"title":{},"body":{"index.html":{}}}],["restcontroller",{"_index":1520,"title":{},"body":{"classes/NetworksController.html":{},"miscellaneous/functions.html":{}}}],["restcontroller(options",{"_index":2325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["restful",{"_index":2412,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":2134,"title":{},"body":{"entities/Venue.html":{}}}],["restroomaccessibility",{"_index":2115,"title":{},"body":{"entities/Venue.html":{}}}],["restrooms",{"_index":2116,"title":{},"body":{"entities/Venue.html":{}}}],["result",{"_index":970,"title":{},"body":{"injectables/CoreAuthService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":124,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Announcement.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{},"entities/AuthAccount.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"classes/AuthMetadata.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/BackLine.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"modules/BandsModule.html":{},"injectables/BandsService.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/Comment.html":{},"modules/ConfigModule.html":{},"modules/ConnectionModule.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"classes/CreateBandDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMusicianDto.html":{},"classes/CreateNetworkDto.html":{},"classes/CreateOrganizerDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateVenueDto.html":{},"entities/Credentials.html":{},"injectables/CredentialsService.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"modules/GuardsModule.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"modules/LocationsModule.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"interfaces/LoginBase.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/MessagingGateway.html":{},"modules/MessagingModule.html":{},"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{},"classes/ModerationAction.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"modules/MusiciansModule.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"modules/NetworksModule.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"controllers/NotificationController.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"interfaces/NotificationServiceOptions.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{},"controllers/OrganizersController.html":{},"modules/OrganizersModule.html":{},"injectables/OrganizersService.html":{},"classes/PASystem.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/PastEvent.html":{},"interfaces/PatchOptions.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/Post.html":{},"controllers/PresenceController.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/PublicUser-1.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/Session.html":{},"injectables/SessionsService.html":{},"injectables/SocialAuthService.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"modules/StrategyModule.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VenueUser-1.html":{},"controllers/VenuesController.html":{},"modules/VenuesModule.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"guards/WebsocketGuard.html":{},"modules/WebsocketModule.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["retrieve",{"_index":929,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["retrieveuser",{"_index":902,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["retrieveuser(id",{"_index":927,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["retrieving",{"_index":979,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["return",{"_index":152,"title":{},"body":{"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"interfaces/AuthOptions.html":{},"controllers/BandsController.html":{},"injectables/BandsService.html":{},"controllers/ChatController.html":{},"injectables/ChatService.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"controllers/ContentController.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"injectables/EventsService.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"controllers/GraphqlController.html":{},"injectables/GraphqlService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/MessagingGateway.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"interfaces/PatchOptions.html":{},"controllers/PresenceController.html":{},"injectables/PresenceService.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/SwaggerDocBuilder.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"guards/WebsocketGuard.html":{}}}],["returns",{"_index":142,"title":{},"body":{"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"controllers/BandsController.html":{},"injectables/BandsService.html":{},"controllers/ChatController.html":{},"injectables/ChatService.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"controllers/ContentController.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"controllers/GraphqlController.html":{},"injectables/GraphqlService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/MessagingGateway.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"controllers/NotificationController.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"controllers/PresenceController.html":{},"injectables/PresenceService.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/SwaggerDocBuilder.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"guards/WebsocketGuard.html":{}}}],["review",{"_index":239,"title":{"classes/Review.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["review:84",{"_index":1674,"title":{},"body":{"classes/PerformerReview.html":{}}}],["review:88",{"_index":2171,"title":{},"body":{"classes/VenueReview.html":{}}}],["review:92",{"_index":1631,"title":{},"body":{"classes/OrganizerReview.html":{}}}],["review:96",{"_index":1174,"title":{},"body":{"classes/EventReview.html":{}}}],["reviews",{"_index":307,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["reviewtype",{"_index":245,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["reviewtype.event",{"_index":254,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["reviewtype.organizer",{"_index":252,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["reviewtype.performer",{"_index":248,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["reviewtype.venue",{"_index":250,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["rmqcontext",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{}}}],["roadmap",{"_index":2550,"title":{},"body":{"todo.html":{}}}],["robust",{"_index":2344,"title":{},"body":{"index.html":{}}}],["role",{"_index":378,"title":{},"body":{"classes/AssociateUser.html":{},"entities/AuthAccount.html":{},"classes/OrganizerUser.html":{},"classes/PerformerUser.html":{},"classes/PublicUser.html":{},"guards/RolesGuard-1.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/VenueUser.html":{}}}],["role.enum",{"_index":388,"title":{},"body":{"classes/AssociateUser-1.html":{},"classes/OrganizerUser-1.html":{},"classes/PerformerUser-1.html":{},"classes/PublicUser-1.html":{},"entities/User.html":{},"classes/VenueUser-1.html":{}}}],["role.enum.ts",{"_index":2283,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roles",{"_index":538,"title":{},"body":{"interfaces/AuthOptions.html":{},"guards/RolesGuard-1.html":{},"miscellaneous/functions.html":{}}}],["roles.decorator",{"_index":1777,"title":{},"body":{"guards/RolesGuard-1.html":{}}}],["roles_key",{"_index":1767,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":1760,"title":{"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{}},"body":{"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{}}}],["room",{"_index":774,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["root",{"_index":2450,"title":{},"body":{"index.html":{}}}],["route",{"_index":478,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["run",{"_index":2464,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":489,"title":{},"body":{"guards/AuthGuard-1.html":{},"injectables/CoreAuthService.html":{},"guards/RolesGuard-1.html":{},"dependencies.html":{}}}],["sample",{"_index":2457,"title":{},"body":{"index.html":{}}}],["satisfies",{"_index":1369,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{}}}],["scalability",{"_index":2375,"title":{},"body":{"index.html":{},"todo.html":{}}}],["scalable",{"_index":2338,"title":{},"body":{"index.html":{},"todo.html":{}}}],["scheduled",{"_index":1115,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"miscellaneous/enumerations.html":{}}}],["schema",{"_index":2063,"title":{},"body":{"entities/Venue.html":{},"todo.html":{}}}],["scheme",{"_index":1853,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["scope",{"_index":1025,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["seating",{"_index":2131,"title":{},"body":{"entities/Venue.html":{}}}],["secret",{"_index":473,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy-2.html":{},"guards/WebsocketGuard.html":{}}}],["secretorkey",{"_index":1384,"title":{},"body":{"injectables/JwtStrategy-2.html":{}}}],["secure",{"_index":2555,"title":{},"body":{"todo.html":{}}}],["security",{"_index":2601,"title":{},"body":{"todo.html":{}}}],["seeking",{"_index":267,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["segmentations",{"_index":283,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["select",{"_index":1954,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{}}}],["send",{"_index":968,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["separate",{"_index":2556,"title":{},"body":{"todo.html":{}}}],["server",{"_index":1211,"title":{},"body":{"classes/EventsGateway.html":{}}}],["serves",{"_index":2342,"title":{},"body":{"index.html":{}}}],["servesalcohol",{"_index":679,"title":{},"body":{"classes/BaseEvent.html":{},"classes/BusinessAccount.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"entities/Venue.html":{}}}],["servesfood",{"_index":680,"title":{},"body":{"classes/BaseEvent.html":{},"classes/BusinessAccount.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"entities/Venue.html":{}}}],["service",{"_index":1545,"title":{},"body":{"classes/NotificationChannel.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{},"guards/WebsocketGuard.html":{},"todo.html":{}}}],["services",{"_index":347,"title":{},"body":{"modules/ApiModule.html":{},"classes/BusinessAccount.html":{},"entities/Organizer.html":{},"classes/PerformerAccount.html":{},"index.html":{}}}],["services/account.service",{"_index":526,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CoreAuthService.html":{}}}],["services/credentials.service",{"_index":525,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CoreAuthService.html":{}}}],["services/sessions.service",{"_index":527,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CoreAuthService.html":{}}}],["session",{"_index":397,"title":{"classes/Session.html":{}},"body":{"entities/AuthAccount.html":{},"classes/Session.html":{},"todo.html":{}}}],["session.account",{"_index":398,"title":{},"body":{"entities/AuthAccount.html":{}}}],["session.entity",{"_index":409,"title":{},"body":{"entities/AuthAccount.html":{}}}],["sessions",{"_index":391,"title":{},"body":{"entities/AuthAccount.html":{},"todo.html":{}}}],["sessionsservice",{"_index":513,"title":{"injectables/SessionsService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/CoreAuthService.html":{},"injectables/SessionsService.html":{},"overview.html":{}}}],["sessionstate",{"_index":1026,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["sessiontoken",{"_index":1974,"title":{},"body":{"entities/UserSession.html":{}}}],["setcontact(contact_name",{"_index":1849,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["setdescription(swagger_description",{"_index":1847,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["setmetadata",{"_index":539,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["setmetadata('roles",{"_index":549,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["setting",{"_index":2440,"title":{},"body":{"index.html":{}}}],["settitle(application_name",{"_index":1846,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["setup",{"_index":1817,"title":{},"body":{"classes/SwaggerDocBuilder.html":{},"index.html":{}}}],["setversion(rest_api_version",{"_index":1848,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["sexual",{"_index":643,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"miscellaneous/enumerations.html":{}}}],["shape",{"_index":607,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["shares",{"_index":207,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["shows",{"_index":2352,"title":{},"body":{"index.html":{}}}],["sign",{"_index":950,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["simultaneously",{"_index":2494,"title":{},"body":{"index.html":{}}}],["single",{"_index":610,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["size",{"_index":2165,"title":{},"body":{"entities/Venue.html":{}}}],["slug",{"_index":1557,"title":{},"body":{"classes/NotificationChannel.html":{},"classes/Resource-1.html":{},"classes/VersionedResource-1.html":{}}}],["smaller",{"_index":2630,"title":{},"body":{"todo.html":{}}}],["sms",{"_index":1553,"title":{},"body":{"classes/NotificationChannel.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{},"miscellaneous/enumerations.html":{}}}],["smsprovider",{"_index":1594,"title":{},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{}}}],["social",{"_index":70,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{},"todo.html":{}}}],["socialauthservice",{"_index":1787,"title":{"injectables/SocialAuthService.html":{}},"body":{"injectables/SocialAuthService.html":{}}}],["socialmedia",{"_index":2087,"title":{},"body":{"entities/Venue.html":{}}}],["socialpost",{"_index":314,"title":{"classes/SocialPost.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["socialpostdraft",{"_index":324,"title":{"classes/SocialPostDraft.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["socket",{"_index":1220,"title":{},"body":{"classes/EventsGateway.html":{},"injectables/EventsService-1.html":{},"guards/WebsocketGuard.html":{}}}],["socket.id",{"_index":1233,"title":{},"body":{"classes/EventsGateway.html":{},"injectables/EventsService-1.html":{}}}],["socket.io",{"_index":1228,"title":{},"body":{"classes/EventsGateway.html":{},"injectables/EventsService-1.html":{},"guards/WebsocketGuard.html":{},"dependencies.html":{}}}],["socket.io/dist/socket",{"_index":2213,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["solution",{"_index":2579,"title":{},"body":{"todo.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Announcement.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{},"entities/AuthAccount.html":{},"controllers/AuthController.html":{},"controllers/AuthController-1.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"classes/AuthMetadata.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/BackLine.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"modules/BandsModule.html":{},"injectables/BandsService.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/Comment.html":{},"modules/ConfigModule.html":{},"modules/ConnectionModule.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"classes/CreateBandDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMusicianDto.html":{},"classes/CreateNetworkDto.html":{},"classes/CreateOrganizerDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateVenueDto.html":{},"entities/Credentials.html":{},"injectables/CredentialsService.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"modules/GuardsModule.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"injectables/JWTAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"modules/LocationsModule.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"interfaces/LoginBase.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/MessagingGateway.html":{},"modules/MessagingModule.html":{},"injectables/MessagingService.html":{},"injectables/MessagingService-1.html":{},"classes/ModerationAction.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"modules/MusiciansModule.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"modules/NetworksModule.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"controllers/NotificationController.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"interfaces/NotificationServiceOptions.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{},"controllers/OrganizersController.html":{},"modules/OrganizersModule.html":{},"injectables/OrganizersService.html":{},"classes/PASystem.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/PastEvent.html":{},"interfaces/PatchOptions.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/Post.html":{},"controllers/PresenceController.html":{},"modules/PresenceModule.html":{},"injectables/PresenceService.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/PublicUser-1.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/Session.html":{},"injectables/SessionsService.html":{},"injectables/SocialAuthService.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"modules/StrategyModule.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"classes/UpdateBandDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMusicianDto.html":{},"classes/UpdateNetworkDto.html":{},"classes/UpdateOrganizerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/UpdateVenueDto.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VenueUser-1.html":{},"controllers/VenuesController.html":{},"modules/VenuesModule.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"guards/WebsocketGuard.html":{},"modules/WebsocketModule.html":{}}}],["space.interface",{"_index":1798,"title":{},"body":{"entities/Stage.html":{},"entities/Venue.html":{}}}],["space.interface.ts",{"_index":1679,"title":{},"body":{"interfaces/PhysicalSpace-1.html":{}}}],["spam",{"_index":639,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"miscellaneous/enumerations.html":{}}}],["specific",{"_index":269,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PastEvent.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"entities/PublishedEvent.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"entities/Venue.html":{},"classes/VenueReview.html":{},"index.html":{},"todo.html":{}}}],["spotifyurl",{"_index":756,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{}}}],["stadium",{"_index":773,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["stage",{"_index":561,"title":{"entities/Stage.html":{},"classes/Stage-1.html":{}},"body":{"classes/BackLine.html":{},"classes/BusinessAccount.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"classes/PASystem.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"entities/PublishedEvent.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"entities/Venue.html":{},"modules/VenuesModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["stage.entity",{"_index":2059,"title":{},"body":{"entities/Venue.html":{}}}],["stage.venue",{"_index":2056,"title":{},"body":{"entities/Venue.html":{}}}],["stages",{"_index":779,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"entities/Venue.html":{}}}],["stagetype",{"_index":560,"title":{},"body":{"classes/BackLine.html":{},"classes/BusinessAccount.html":{},"classes/PASystem.html":{},"classes/PerformerAccount.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"miscellaneous/enumerations.html":{}}}],["stagetype.area",{"_index":1800,"title":{},"body":{"entities/Stage.html":{}}}],["start",{"_index":2471,"title":{},"body":{"index.html":{},"todo.html":{}}}],["start:dev",{"_index":2472,"title":{},"body":{"index.html":{}}}],["start:devthis",{"_index":2473,"title":{},"body":{"index.html":{}}}],["started",{"_index":2230,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["starting",{"_index":2493,"title":{},"body":{"index.html":{}}}],["state",{"_index":2078,"title":{},"body":{"entities/Venue.html":{}}}],["state,region,city,neighborhood",{"_index":296,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["statement",{"_index":237,"title":{"classes/Statement.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["statements",{"_index":276,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["static",{"_index":2241,"title":{},"body":{"dependencies.html":{}}}],["status",{"_index":1122,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"classes/PastEvent.html":{},"entities/PublishedEvent.html":{}}}],["status.enum.ts",{"_index":2273,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":2510,"title":{},"body":{"index.html":{}}}],["steps",{"_index":2626,"title":{},"body":{"todo.html":{}}}],["storage",{"_index":2578,"title":{},"body":{"todo.html":{}}}],["stories",{"_index":2567,"title":{},"body":{"todo.html":{}}}],["strategies",{"_index":2599,"title":{},"body":{"todo.html":{}}}],["strategies/local.strategy",{"_index":528,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":1363,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{},"todo.html":{}}}],["strategymodule",{"_index":1805,"title":{"modules/StrategyModule.html":{}},"body":{"modules/StrategyModule.html":{},"modules.html":{},"overview.html":{}}}],["strategyoptions",{"_index":1364,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{}}}],["street",{"_index":2101,"title":{},"body":{"entities/Venue.html":{}}}],["string",{"_index":26,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"classes/AssociateUser.html":{},"guards/AuthGuard.html":{},"classes/AuthMetadata.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"injectables/BandsService.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"controllers/ChatController.html":{},"injectables/ChatService.html":{},"classes/Comment.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"injectables/ContentService.html":{},"injectables/CoreAuthService.html":{},"classes/CreateUserDto.html":{},"entities/Credentials.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"controllers/EventsController.html":{},"controllers/EventsController-1.html":{},"injectables/EventsService.html":{},"injectables/EventsService-2.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"controllers/GraphqlController.html":{},"injectables/GraphqlService.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/Instrument.html":{},"classes/IssuedWarning.html":{},"injectables/LocalStrategy.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"injectables/LocationsService-1.html":{},"interfaces/LoginBase.html":{},"controllers/MediaController.html":{},"controllers/MediaController-1.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"classes/ModerationAction.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/PastEvent.html":{},"interfaces/PatchOptions.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"interfaces/PhysicalSpace.html":{},"classes/Post.html":{},"controllers/PresenceController.html":{},"injectables/PresenceService.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"guards/RolesGuard-1.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}}}],["stringornull",{"_index":2300,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stringornull(val",{"_index":2327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["strings",{"_index":2070,"title":{},"body":{"entities/Venue.html":{}}}],["studio",{"_index":2438,"title":{},"body":{"index.html":{}}}],["style",{"_index":316,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["sub",{"_index":952,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["subdirectory",{"_index":2478,"title":{},"body":{"index.html":{}}}],["subscibers",{"_index":1546,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["subscribed",{"_index":1563,"title":{},"body":{"classes/NotificationChannel.html":{}}}],["subscribemessage",{"_index":168,"title":{},"body":{"classes/AdminGateway.html":{},"classes/EventsGateway.html":{},"classes/MessagingGateway.html":{}}}],["subscribemessage('events",{"_index":1225,"title":{},"body":{"classes/EventsGateway.html":{}}}],["subscribemessage('identity",{"_index":163,"title":{},"body":{"classes/AdminGateway.html":{},"classes/EventsGateway.html":{},"classes/MessagingGateway.html":{}}}],["super",{"_index":1367,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":2528,"title":{},"body":{"modules.html":{},"todo.html":{}}}],["svg",{"_index":2529,"title":{},"body":{"modules.html":{}}}],["swagger.constants",{"_index":1838,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["swagger_custom_options",{"_index":1834,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["swagger_description",{"_index":1835,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["swagger_document_options",{"_index":1836,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["swagger_pathname",{"_index":1837,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["swaggerdocbuilder",{"_index":1811,"title":{"classes/SwaggerDocBuilder.html":{}},"body":{"classes/SwaggerDocBuilder.html":{}}}],["swaggermodule",{"_index":1826,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["swaggermodule.createdocument",{"_index":1845,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["swaggermodule.setup",{"_index":1841,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["switch",{"_index":942,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["synchronize",{"_index":834,"title":{},"body":{"modules/ConnectionModule.html":{}}}],["synthesizers",{"_index":2161,"title":{},"body":{"entities/Venue.html":{}}}],["system",{"_index":2164,"title":{},"body":{"entities/Venue.html":{},"todo.html":{}}}],["table",{"_index":1506,"title":{},"body":{"entities/Network.html":{},"classes/Network-1.html":{},"todo.html":{}}}],["tableinheritance",{"_index":75,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"entities/User.html":{},"classes/VenueAccount.html":{}}}],["tables",{"_index":2469,"title":{},"body":{"index.html":{},"todo.html":{}}}],["tag",{"_index":1170,"title":{"classes/Tag.html":{},"classes/Tag-1.html":{}},"body":{"entities/EventKeyword.html":{},"entities/Genre.html":{},"classes/Instrument.html":{},"interfaces/PhysicalSpace.html":{},"classes/Resource.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/VenueKeyword.html":{},"classes/VersionedResource.html":{}}}],["tags",{"_index":1118,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"classes/PastEvent.html":{},"entities/PublishedEvent.html":{}}}],["tags/event",{"_index":1156,"title":{},"body":{"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"entities/PublishedEvent.html":{}}}],["tags/genre.entity",{"_index":95,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/EventDraft-1.html":{},"entities/EventTemplate.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"entities/PublishedEvent.html":{},"classes/VenueAccount.html":{}}}],["task",{"_index":2635,"title":{},"body":{"todo.html":{}}}],["tasks",{"_index":2483,"title":{},"body":{"index.html":{},"todo.html":{}}}],["technical",{"_index":2364,"title":{},"body":{"index.html":{}}}],["template",{"_index":1130,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"entities/EventTemplate.html":{},"classes/PastEvent.html":{}}}],["templatedescription",{"_index":1134,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"entities/EventTemplate.html":{},"classes/PastEvent.html":{}}}],["templatename",{"_index":1133,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"entities/EventTemplate.html":{},"classes/PastEvent.html":{}}}],["test",{"_index":134,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CoreAuthService.html":{},"index.html":{}}}],["testing",{"_index":2497,"title":{},"body":{"index.html":{},"todo.html":{}}}],["tests",{"_index":2487,"title":{},"body":{"index.html":{},"todo.html":{}}}],["text",{"_index":2118,"title":{},"body":{"entities/Venue.html":{}}}],["textnumber",{"_index":793,"title":{},"body":{"classes/BusinessContact.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{}}}],["theater",{"_index":768,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["there's",{"_index":2132,"title":{},"body":{"entities/Venue.html":{}}}],["this.accountservice.test",{"_index":941,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["this.app",{"_index":1842,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["this.authaccountrepository.findoneby",{"_index":153,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.authservice.validate(username",{"_index":1409,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.buildconfig",{"_index":1844,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["this.builddoc",{"_index":1840,"title":{},"body":{"classes/SwaggerDocBuilder.html":{}}}],["this.chatservice.gethello",{"_index":804,"title":{},"body":{"controllers/ChatController.html":{}}}],["this.configservice.get('postgres_db",{"_index":854,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{}}}],["this.configservice.get('postgres_host",{"_index":850,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{}}}],["this.configservice.get('postgres_password",{"_index":853,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{}}}],["this.configservice.get('postgres_port",{"_index":851,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{}}}],["this.configservice.get('postgres_user",{"_index":852,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{}}}],["this.contentservice.gethello",{"_index":887,"title":{},"body":{"controllers/ContentController.html":{}}}],["this.eventservice.handleconnection(socket",{"_index":1231,"title":{},"body":{"classes/EventsGateway.html":{}}}],["this.eventsrepository.find",{"_index":1254,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.eventsservice.gethello",{"_index":1196,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.extracttokenfromhandshake(socket.handshake",{"_index":2218,"title":{},"body":{"guards/WebsocketGuard.html":{}}}],["this.extracttokenfromheader(request",{"_index":462,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.graphqlservice.gethello",{"_index":1330,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["this.hashpassword(password",{"_index":967,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":956,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":472,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["this.locationsservice.gethello",{"_index":1415,"title":{},"body":{"controllers/LocationsController.html":{}}}],["this.mediaservice.gethello",{"_index":1438,"title":{},"body":{"controllers/MediaController.html":{},"controllers/MediaController-1.html":{}}}],["this.messagebroker.emit('user",{"_index":2025,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.messagebroker.send",{"_index":961,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["this.networksservice.create(createnetworkdto",{"_index":1524,"title":{},"body":{"classes/NetworksController.html":{}}}],["this.networksservice.findall",{"_index":1525,"title":{},"body":{"classes/NetworksController.html":{}}}],["this.networksservice.findone(+id",{"_index":1526,"title":{},"body":{"classes/NetworksController.html":{}}}],["this.networksservice.remove(+id",{"_index":1528,"title":{},"body":{"classes/NetworksController.html":{}}}],["this.networksservice.update(+id",{"_index":1527,"title":{},"body":{"classes/NetworksController.html":{}}}],["this.notificationsservice.gethello",{"_index":1606,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["this.performerusersrepository.find",{"_index":2028,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.presenceservice.gethello",{"_index":1692,"title":{},"body":{"controllers/PresenceController.html":{}}}],["this.publicusersrepository.find",{"_index":2027,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.reflector.get(roles",{"_index":1778,"title":{},"body":{"guards/RolesGuard-1.html":{}}}],["this.reflector.getallandoverride",{"_index":1769,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.retrieveuser(credentials.id",{"_index":949,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["this.users",{"_index":2043,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["this.users.find((user",{"_index":2042,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["this.usersrepository.create",{"_index":2022,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.delete(id",{"_index":2031,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":2026,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":2032,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findoneby",{"_index":2029,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(newuser",{"_index":2024,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update(id",{"_index":2030,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.gethello",{"_index":1985,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.validate",{"_index":946,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["thread",{"_index":300,"title":{"classes/Thread.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["threads",{"_index":299,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["threats",{"_index":638,"title":{},"body":{"classes/BannedUser.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"miscellaneous/enumerations.html":{}}}],["through",{"_index":2362,"title":{},"body":{"index.html":{}}}],["throw",{"_index":463,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CoreAuthService.html":{},"guards/WebsocketGuard.html":{}}}],["thumbnail",{"_index":52,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["ticketing",{"_index":2147,"title":{},"body":{"entities/Venue.html":{}}}],["ticketlinks",{"_index":1124,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"entities/PublishedEvent.html":{}}}],["time",{"_index":705,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"index.html":{},"todo.html":{}}}],["timedoor",{"_index":681,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["timeend",{"_index":682,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["timeline",{"_index":2634,"title":{},"body":{"todo.html":{}}}],["timestart",{"_index":683,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["timestartprevious",{"_index":1123,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"classes/PastEvent.html":{},"entities/PublishedEvent.html":{}}}],["title",{"_index":208,"title":{},"body":{"classes/Announcement.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PastEvent.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["todo",{"_index":1051,"title":{"todo.html":{}},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["todo.md",{"_index":2548,"title":{},"body":{"todo.html":{}}}],["token",{"_index":460,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthOptions.html":{},"injectables/CoreAuthService.html":{},"classes/SwaggerDocBuilder.html":{},"guards/WebsocketGuard.html":{},"todo.html":{}}}],["tokens",{"_index":2564,"title":{},"body":{"todo.html":{}}}],["tokentype",{"_index":1027,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"miscellaneous/enumerations.html":{}}}],["tokenurl",{"_index":1391,"title":{},"body":{"injectables/JwtStrategy-3.html":{}}}],["tolerance",{"_index":2402,"title":{},"body":{"index.html":{}}}],["tools",{"_index":2482,"title":{},"body":{"index.html":{},"todo.html":{}}}],["topic",{"_index":308,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["traditional",{"_index":2351,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":317,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["transport",{"_index":520,"title":{},"body":{"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/NotificationModule.html":{},"modules/UsersModule.html":{}}}],["transport.tcp",{"_index":531,"title":{},"body":{"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/NotificationModule.html":{},"modules/UsersModule.html":{}}}],["transportation",{"_index":2103,"title":{},"body":{"entities/Venue.html":{}}}],["tree",{"_index":1504,"title":{},"body":{"entities/Network.html":{},"classes/Network-1.html":{}}}],["tree('closure",{"_index":1505,"title":{},"body":{"entities/Network.html":{},"classes/Network-1.html":{}}}],["treechildren",{"_index":1498,"title":{},"body":{"entities/Network.html":{},"classes/Network-1.html":{}}}],["treeparent",{"_index":1502,"title":{},"body":{"entities/Network.html":{},"classes/Network-1.html":{}}}],["true",{"_index":58,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"modules/AuthModule.html":{},"classes/BandAccount.html":{},"classes/BaseEvent.html":{},"modules/ConnectionModule.html":{},"entities/Credentials.html":{},"interfaces/FindAllOptions.html":{},"entities/Genre.html":{},"classes/MusicianAccount.html":{},"classes/OAuthCredentials.html":{},"classes/OrganizerAccount.html":{},"classes/PasswordCredentials.html":{},"classes/Resource-1.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/Tag-1.html":{},"entities/User.html":{},"entities/UserSession.html":{},"injectables/UsersService.html":{},"classes/VenueAccount.html":{},"classes/VersionedResource-1.html":{},"guards/WebsocketGuard.html":{}}}],["true})@apiproperty",{"_index":1755,"title":{},"body":{"classes/Resource-1.html":{}}}],["true})@apiproperty({example",{"_index":57,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"entities/User.html":{}}}],["try",{"_index":470,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["tsconfig.json",{"_index":2480,"title":{},"body":{"index.html":{}}}],["tuned",{"_index":2511,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":1397,"title":{},"body":{"injectables/JwtStrategy-4.html":{},"entities/Venue.html":{},"dependencies.html":{}}}],["twitterurl",{"_index":21,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["type",{"_index":22,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AdminGateway.html":{},"classes/Announcement.html":{},"entities/AuthAccount.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard-1.html":{},"classes/AuthMetadata.html":{},"interfaces/AuthOptions.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"controllers/BandsController.html":{},"injectables/BandsService.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/BusinessContact.html":{},"classes/Comment.html":{},"modules/ConnectionModule.html":{},"injectables/ConnectionService.html":{},"injectables/ConnectionService-1.html":{},"entities/Contact.html":{},"classes/ContactDetails.html":{},"classes/Content.html":{},"injectables/CoreAuthService.html":{},"classes/CreateUserDto.html":{},"entities/Credentials.html":{},"classes/EmailLoginDto.html":{},"classes/Event.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"controllers/EventsController-1.html":{},"classes/EventsGateway.html":{},"injectables/EventsService.html":{},"injectables/EventsService-1.html":{},"injectables/ExternalAuthService.html":{},"interfaces/FindAllOptions.html":{},"interfaces/FindOneOptions.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"entities/Genre.html":{},"classes/GoogleLoginDto.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{},"injectables/LocationsService.html":{},"interfaces/LoginBase.html":{},"classes/MessagingGateway.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"controllers/NotificationController.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"injectables/NotificationService.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser-1.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"interfaces/PatchOptions.html":{},"classes/Performer.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser-1.html":{},"interfaces/PhysicalSpace.html":{},"interfaces/PhysicalSpace-1.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"classes/ResolvedCases.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/SwaggerDocBuilder.html":{},"classes/Tag.html":{},"classes/Tag-1.html":{},"classes/Thread.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"entities/UserSession.html":{},"classes/UsernameLoginDto.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"classes/VenueUser-1.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"guards/WebsocketGuard.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type.enum",{"_index":86,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{}}}],["type.enum.ts",{"_index":2268,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":2637,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":80,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"injectables/AccountService.html":{},"classes/AssociateUser-1.html":{},"entities/AuthAccount.html":{},"classes/AuthMetadata.html":{},"entities/Band.html":{},"classes/BandAccount.html":{},"classes/BaseEvent.html":{},"classes/Business.html":{},"entities/Contact.html":{},"classes/Content.html":{},"entities/Credentials.html":{},"classes/EventDraft-1.html":{},"entities/EventKeyword.html":{},"entities/EventTemplate.html":{},"injectables/EventsService.html":{},"entities/Genre.html":{},"entities/Musician.html":{},"classes/MusicianAccount.html":{},"entities/Network.html":{},"classes/Network-1.html":{},"classes/OAuthCredentials.html":{},"entities/Organizer.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerUser-1.html":{},"classes/PasswordCredentials.html":{},"classes/Performer.html":{},"classes/PerformerUser-1.html":{},"classes/PublicUser-1.html":{},"entities/PublishedEvent.html":{},"classes/Resource-1.html":{},"entities/Stage.html":{},"classes/Tag-1.html":{},"entities/User.html":{},"entities/User-1.html":{},"entities/UserSession.html":{},"injectables/UsersService.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueUser-1.html":{},"classes/VersionedResource-1.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":516,"title":{},"body":{"modules/AuthModule.html":{},"modules/ConnectionModule.html":{},"modules/EventsModule.html":{},"modules/UsersModule.html":{},"modules/VenuesModule.html":{}}}],["typeormmodule.forfeature",{"_index":1998,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([authaccount",{"_index":529,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forfeature([genre",{"_index":2193,"title":{},"body":{"modules/VenuesModule.html":{}}}],["typeormmodule.forfeature([publishedevent",{"_index":1244,"title":{},"body":{"modules/EventsModule.html":{}}}],["typeormmodule.forroot",{"_index":829,"title":{},"body":{"modules/ConnectionModule.html":{}}}],["types",{"_index":236,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PastEvent.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/UpdateUserDto.html":{},"classes/VenueReview.html":{},"dependencies.html":{}}}],["types/passport",{"_index":2245,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":495,"title":{},"body":{"guards/AuthGuard-1.html":{},"index.html":{}}}],["typical",{"_index":2124,"title":{},"body":{"entities/Venue.html":{}}}],["typicalshowlength",{"_index":2094,"title":{},"body":{"entities/Venue.html":{}}}],["unauthorized",{"_index":554,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["unauthorizedexception",{"_index":454,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthOptions.html":{},"injectables/CoreAuthService.html":{},"guards/WebsocketGuard.html":{}}}],["unauthorizedexception('invalid",{"_index":482,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["unauthorizedexception('password",{"_index":976,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["unauthorizedexception('username",{"_index":971,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["undefined",{"_index":395,"title":{},"body":{"entities/AuthAccount.html":{},"guards/AuthGuard.html":{},"classes/CreateUserDto.html":{},"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"entities/PublishedEvent.html":{},"classes/RegisterDto.html":{},"entities/Stage.html":{},"entities/User.html":{},"classes/UsernameLoginDto.html":{},"entities/Venue.html":{}}}],["under",{"_index":2339,"title":{},"body":{"index.html":{}}}],["unique",{"_index":1057,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"classes/Resource-1.html":{},"classes/Tag-1.html":{},"entities/User.html":{},"entities/UserSession.html":{},"classes/VersionedResource-1.html":{}}}],["unit",{"_index":2485,"title":{},"body":{"index.html":{},"todo.html":{}}}],["unknown",{"_index":143,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CoreAuthService.html":{},"classes/EventsGateway.html":{},"injectables/ExternalAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"guards/WebsocketGuard.html":{}}}],["unless",{"_index":290,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["unlicensed",{"_index":2545,"title":{},"body":{"properties.html":{}}}],["unscheduled",{"_index":1117,"title":{},"body":{"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{},"miscellaneous/enumerations.html":{}}}],["unused",{"_index":497,"title":{},"body":{"guards/AuthGuard-1.html":{}}}],["up",{"_index":2441,"title":{},"body":{"index.html":{}}}],["upcomingevents",{"_index":2685,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["update",{"_index":585,"title":{},"body":{"controllers/BandsController.html":{},"injectables/BandsService.html":{},"injectables/CoreAuthService.html":{},"controllers/EventsController-1.html":{},"injectables/EventsService.html":{},"injectables/LocationsService.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"interfaces/PatchOptions.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"miscellaneous/functions.html":{}}}],["update(@param('id",{"_index":611,"title":{},"body":{"controllers/BandsController.html":{},"controllers/EventsController-1.html":{},"controllers/MusiciansController.html":{},"classes/NetworksController.html":{},"controllers/OrganizersController.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{}}}],["update(__namedparameters",{"_index":2329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["update(id",{"_index":596,"title":{},"body":{"controllers/BandsController.html":{},"injectables/BandsService.html":{},"controllers/EventsController-1.html":{},"injectables/EventsService.html":{},"injectables/LocationsService.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{}}}],["updatebanddto",{"_index":597,"title":{"classes/UpdateBandDto.html":{}},"body":{"controllers/BandsController.html":{},"injectables/BandsService.html":{},"classes/UpdateBandDto.html":{}}}],["updated",{"_index":1753,"title":{},"body":{"classes/Resource-1.html":{},"classes/VersionedResource-1.html":{}}}],["updatedatecolumn",{"_index":505,"title":{},"body":{"classes/AuthMetadata.html":{},"entities/Contact.html":{},"classes/Resource-1.html":{},"entities/User.html":{},"classes/VersionedResource-1.html":{}}}],["updatedatecolumn()@apiproperty({description",{"_index":1751,"title":{},"body":{"classes/Resource-1.html":{}}}],["updatedatecolumn()@apiproperty({example",{"_index":1939,"title":{},"body":{"entities/User.html":{}}}],["updateeventdto",{"_index":1204,"title":{"classes/UpdateEventDto.html":{}},"body":{"controllers/EventsController-1.html":{},"injectables/EventsService.html":{},"classes/UpdateEventDto.html":{}}}],["updatelocationdto",{"_index":1426,"title":{"classes/UpdateLocationDto.html":{}},"body":{"injectables/LocationsService.html":{},"classes/UpdateLocationDto.html":{}}}],["updatemusiciandto",{"_index":1482,"title":{"classes/UpdateMusicianDto.html":{}},"body":{"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"classes/UpdateMusicianDto.html":{}}}],["updatenetworkdto",{"_index":1518,"title":{"classes/UpdateNetworkDto.html":{}},"body":{"classes/NetworksController.html":{},"injectables/NetworksService.html":{},"classes/UpdateNetworkDto.html":{}}}],["updateorganizerdto",{"_index":1644,"title":{"classes/UpdateOrganizerDto.html":{}},"body":{"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"classes/UpdateOrganizerDto.html":{}}}],["updates",{"_index":612,"title":{},"body":{"controllers/BandsController.html":{},"injectables/BandsService.html":{},"controllers/EventsController-1.html":{},"injectables/EventsService.html":{},"injectables/LocationsService.html":{},"controllers/MusiciansController.html":{},"injectables/MusiciansService.html":{},"injectables/NetworksService.html":{},"controllers/OrganizersController.html":{},"injectables/OrganizersService.html":{},"controllers/UsersController-1.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"index.html":{}}}],["updateuserdto",{"_index":1885,"title":{"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{}},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["updatevenuedto",{"_index":1890,"title":{"classes/UpdateVenueDto.html":{}},"body":{"classes/UpdateVenueDto.html":{},"controllers/VenuesController.html":{},"injectables/VenuesService.html":{}}}],["url",{"_index":33,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"modules/ConnectionModule.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{}}}],["urls",{"_index":2071,"title":{},"body":{"entities/Venue.html":{}}}],["use",{"_index":2456,"title":{},"body":{"index.html":{}}}],["useguards",{"_index":540,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["useguards(authguard",{"_index":552,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["user",{"_index":97,"title":{"entities/User.html":{},"entities/User-1.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"modules/AppModule.html":{},"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{},"entities/AuthAccount.html":{},"controllers/AuthController.html":{},"classes/BandAccount.html":{},"classes/BannedUser.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/Content.html":{},"injectables/CoreAuthService.html":{},"entities/Credentials.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"classes/FlaggedComment.html":{},"classes/FlaggedEvent.html":{},"classes/FlaggedItem.html":{},"classes/FlaggedPost.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/IssuedWarning.html":{},"classes/ModerationAction.html":{},"classes/MusicianAccount.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"controllers/NotificationController.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/OAuthCredentials.html":{},"classes/Opinion.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{},"classes/PasswordCredentials.html":{},"classes/PastEvent.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/PublicUser-1.html":{},"entities/PublishedEvent.html":{},"classes/RemovedComment.html":{},"classes/ResolvedCases.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"guards/RolesGuard-1.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"entities/User.html":{},"entities/User-1.html":{},"classes/UserPreferences.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VenueUser-1.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["user.administratorof",{"_index":714,"title":{},"body":{"classes/BaseEvent.html":{}}}],["user.authaccount",{"_index":412,"title":{},"body":{"entities/AuthAccount.html":{}}}],["user.authaccount)@joincolumn",{"_index":401,"title":{},"body":{"entities/AuthAccount.html":{}}}],["user.bookmarkedevents",{"_index":1733,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["user.createdevents",{"_index":712,"title":{},"body":{"classes/BaseEvent.html":{}}}],["user.credentials",{"_index":1029,"title":{},"body":{"entities/Credentials.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{}}}],["user.dto",{"_index":1888,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{}}}],["user.dto.ts",{"_index":1000,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{}}}],["user.dto.ts:10",{"_index":1002,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:13",{"_index":1003,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:16",{"_index":1005,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:19",{"_index":1004,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.editorof",{"_index":715,"title":{},"body":{"classes/BaseEvent.html":{}}}],["user.eventedits",{"_index":713,"title":{},"body":{"classes/BaseEvent.html":{}}}],["user.id",{"_index":953,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["user.managedaccounts",{"_index":112,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["user.password",{"_index":975,"title":{},"body":{"injectables/CoreAuthService.html":{},"injectables/UsersService.html":{}}}],["user.registeredevents",{"_index":1734,"title":{},"body":{"entities/PublishedEvent.html":{}}}],["user.roles",{"_index":1781,"title":{},"body":{"guards/RolesGuard-1.html":{}}}],["user.roles?.includes(role",{"_index":1773,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.username",{"_index":954,"title":{},"body":{"injectables/CoreAuthService.html":{},"injectables/UsersService-1.html":{}}}],["user.viewerof",{"_index":716,"title":{},"body":{"classes/BaseEvent.html":{}}}],["user/base.entity",{"_index":710,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Content.html":{},"entities/PublishedEvent.html":{}}}],["userid",{"_index":1370,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{},"injectables/UsersService-1.html":{}}}],["userinteracted",{"_index":1590,"title":{},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{}}}],["username",{"_index":926,"title":{},"body":{"injectables/CoreAuthService.html":{},"classes/CreateUserDto.html":{},"entities/Credentials.html":{},"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoginBase.html":{},"classes/OAuthCredentials.html":{},"classes/PasswordCredentials.html":{},"classes/PasswordLogin.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"classes/UsernameLoginDto.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["username/music",{"_index":2445,"title":{},"body":{"index.html":{}}}],["username/password",{"_index":2560,"title":{},"body":{"todo.html":{}}}],["usernamelogindto",{"_index":1069,"title":{"classes/UsernameLoginDto.html":{}},"body":{"classes/EmailLoginDto.html":{},"classes/GoogleLoginDto.html":{},"interfaces/LoginBase.html":{},"classes/PasswordLogin.html":{},"classes/UsernameLoginDto.html":{},"miscellaneous/typealiases.html":{}}}],["userpreferences",{"_index":1591,"title":{"classes/UserPreferences.html":{}},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{}}}],["userrole",{"_index":232,"title":{},"body":{"classes/Announcement.html":{},"classes/AssociateUser.html":{},"classes/AssociateUser-1.html":{},"entities/AuthAccount.html":{},"interfaces/AuthOptions.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/OrganizerUser-1.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/PerformerUser-1.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"classes/PublicUser-1.html":{},"classes/Review.html":{},"guards/RolesGuard.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"classes/VenueUser-1.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.performer",{"_index":2023,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrole.public",{"_index":413,"title":{},"body":{"entities/AuthAccount.html":{},"entities/User.html":{}}}],["userroles",{"_index":1782,"title":{},"body":{"guards/RolesGuard-1.html":{},"miscellaneous/functions.html":{}}}],["users",{"_index":305,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/NotificationChannel.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService-1.html":{},"classes/VenueReview.html":{},"todo.html":{}}}],["users.controller",{"_index":1997,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1984,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userscontroller",{"_index":354,"title":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{}}}],["usersession",{"_index":408,"title":{"entities/UserSession.html":{}},"body":{"entities/AuthAccount.html":{},"modules/AuthModule.html":{},"entities/UserSession.html":{}}}],["usersmodule",{"_index":338,"title":{"modules/UsersModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":2003,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":1983,"title":{"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"overview.html":{}}}],["uses",{"_index":2148,"title":{},"body":{"entities/Venue.html":{}}}],["using",{"_index":2569,"title":{},"body":{"todo.html":{}}}],["utilize",{"_index":2488,"title":{},"body":{"index.html":{}}}],["utilizes",{"_index":2394,"title":{},"body":{"index.html":{}}}],["val",{"_index":2328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valet",{"_index":2099,"title":{},"body":{"entities/Venue.html":{}}}],["valid",{"_index":465,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["validate",{"_index":903,"title":{},"body":{"injectables/CoreAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1360,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/JwtStrategy-2.html":{},"injectables/JwtStrategy-3.html":{},"injectables/JwtStrategy-4.html":{}}}],["validate(username",{"_index":931,"title":{},"body":{"injectables/CoreAuthService.html":{},"injectables/LocalStrategy.html":{}}}],["validaterequest",{"_index":2303,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validaterequest(request",{"_index":490,"title":{},"body":{"guards/AuthGuard-1.html":{},"miscellaneous/functions.html":{}}}],["validation",{"_index":2597,"title":{},"body":{"todo.html":{}}}],["validlogin",{"_index":973,"title":{},"body":{"injectables/CoreAuthService.html":{}}}],["value",{"_index":1173,"title":{},"body":{"classes/EventReview.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"injectables/UsersService-1.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["values",{"_index":2460,"title":{},"body":{"index.html":{}}}],["variables",{"_index":2448,"title":{},"body":{"index.html":{}}}],["various",{"_index":2559,"title":{},"body":{"todo.html":{}}}],["vars",{"_index":498,"title":{},"body":{"guards/AuthGuard-1.html":{}}}],["venue",{"_index":89,"title":{"entities/Venue.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"classes/AssociateUser.html":{},"classes/BandAccount.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"modules/ConnectionModule.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventDraft-1.html":{},"classes/EventReview.html":{},"entities/EventTemplate.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/MusicianAccount.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/OrganizerUser.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/PerformerUser.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/PublicUser.html":{},"entities/PublishedEvent.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueReview.html":{},"classes/VenueUser.html":{},"controllers/VenuesController.html":{},"modules/VenuesModule.html":{},"injectables/VenuesService.html":{},"miscellaneous/enumerations.html":{}}}],["venue's",{"_index":2065,"title":{},"body":{"entities/Venue.html":{}}}],["venue.account",{"_index":120,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/VenueAccount.html":{}}}],["venue.dto",{"_index":1893,"title":{},"body":{"classes/UpdateVenueDto.html":{}}}],["venue.dto.ts",{"_index":1014,"title":{},"body":{"classes/CreateVenueDto.html":{},"classes/UpdateVenueDto.html":{}}}],["venue.entity",{"_index":90,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"entities/Stage.html":{},"classes/VenueAccount.html":{}}}],["venue.stages",{"_index":1795,"title":{},"body":{"entities/Stage.html":{}}}],["venue_seeking",{"_index":260,"title":{},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{},"miscellaneous/enumerations.html":{}}}],["venueaccount",{"_index":119,"title":{"classes/VenueAccount.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"modules/ConnectionModule.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"entities/Venue.html":{},"classes/VenueAccount.html":{},"classes/VenueUser-1.html":{}}}],["venuedetails",{"_index":2687,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["venuekeyword",{"_index":753,"title":{"classes/VenueKeyword.html":{}},"body":{"classes/BusinessAccount.html":{},"classes/Instrument.html":{},"classes/PerformerAccount.html":{},"interfaces/PhysicalSpace.html":{},"classes/Resource.html":{},"classes/Tag.html":{},"entities/Venue.html":{},"classes/VenueKeyword.html":{},"classes/VersionedResource.html":{}}}],["venuereview",{"_index":249,"title":{"classes/VenueReview.html":{}},"body":{"classes/Announcement.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/Comment.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"classes/Statement.html":{},"classes/Thread.html":{},"classes/VenueReview.html":{}}}],["venues",{"_index":2177,"title":{},"body":{"controllers/VenuesController.html":{},"injectables/VenuesService.html":{},"index.html":{}}}],["venues.controller",{"_index":2190,"title":{},"body":{"modules/VenuesModule.html":{}}}],["venues.service",{"_index":2189,"title":{},"body":{"modules/VenuesModule.html":{}}}],["venuescontroller",{"_index":357,"title":{"controllers/VenuesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/VenuesController.html":{},"modules/VenuesModule.html":{}}}],["venuesinputs",{"_index":2688,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["venuesmodule",{"_index":339,"title":{"modules/VenuesModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/VenuesModule.html":{},"modules.html":{},"overview.html":{}}}],["venuesoutputs",{"_index":2689,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["venuesservice",{"_index":2187,"title":{"injectables/VenuesService.html":{}},"body":{"modules/VenuesModule.html":{},"injectables/VenuesService.html":{},"overview.html":{}}}],["venuetype",{"_index":760,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"entities/Venue.html":{},"miscellaneous/enumerations.html":{}}}],["venuetype.venue",{"_index":2062,"title":{},"body":{"entities/Venue.html":{}}}],["venueuser",{"_index":383,"title":{"classes/VenueUser.html":{},"classes/VenueUser-1.html":{}},"body":{"classes/AssociateUser.html":{},"classes/OrganizerUser.html":{},"classes/PerformerUser.html":{},"classes/PublicUser.html":{},"modules/UsersModule.html":{},"classes/VenueUser.html":{},"classes/VenueUser-1.html":{}}}],["verify",{"_index":467,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["verifyexternallogin",{"_index":1263,"title":{},"body":{"injectables/ExternalAuthService.html":{}}}],["verifyexternallogin(externalprovider",{"_index":1265,"title":{},"body":{"injectables/ExternalAuthService.html":{}}}],["version",{"_index":209,"title":{},"body":{"classes/Announcement.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/Event.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/Instrument.html":{},"classes/NetworkBroadcast.html":{},"classes/NetworksController.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"interfaces/PhysicalSpace.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/Tag.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{},"index.html":{},"properties.html":{}}}],["versioncolumn",{"_index":1758,"title":{},"body":{"classes/Resource-1.html":{},"classes/VersionedResource-1.html":{}}}],["versioncolumn()@apiproperty",{"_index":2203,"title":{},"body":{"classes/VersionedResource-1.html":{}}}],["versionedresource",{"_index":83,"title":{"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/Announcement.html":{},"classes/BackLine.html":{},"classes/BandAccount.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/Instrument.html":{},"classes/MusicianAccount.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerAccount.html":{},"classes/OrganizerReview.html":{},"classes/PASystem.html":{},"classes/PastEvent.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"interfaces/PhysicalSpace.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Resource.html":{},"classes/Resource-1.html":{},"classes/Review.html":{},"classes/SocialPost.html":{},"classes/SocialPostDraft.html":{},"entities/Stage.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/Tag.html":{},"classes/Thread.html":{},"classes/VenueAccount.html":{},"classes/VenueKeyword.html":{},"classes/VenueReview.html":{},"classes/VersionedResource.html":{},"classes/VersionedResource-1.html":{}}}],["versionedresource:8",{"_index":226,"title":{},"body":{"classes/Announcement.html":{},"classes/BaseEvent.html":{},"classes/Broadcast.html":{},"classes/Bulletin.html":{},"classes/BusinessAccount.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/Event.html":{},"classes/EventReview.html":{},"classes/Group.html":{},"classes/GroupBroadcast.html":{},"classes/NetworkBroadcast.html":{},"classes/Newsletter.html":{},"classes/Opinion.html":{},"classes/OrganizerReview.html":{},"classes/PerformerAccount.html":{},"classes/PerformerReview.html":{},"classes/Post.html":{},"classes/PrivateGroup.html":{},"classes/Review.html":{},"classes/Stage-1.html":{},"classes/Statement.html":{},"classes/VenueReview.html":{}}}],["vibrant",{"_index":2359,"title":{},"body":{"index.html":{}}}],["viewerof",{"_index":1909,"title":{},"body":{"entities/User.html":{}}}],["viewerofdraft",{"_index":1910,"title":{},"body":{"entities/User.html":{}}}],["vieweroftemplate",{"_index":1911,"title":{},"body":{"entities/User.html":{}}}],["viewers",{"_index":684,"title":{},"body":{"classes/BaseEvent.html":{},"classes/Event.html":{},"classes/EventDraft.html":{},"classes/PastEvent.html":{}}}],["visual",{"_index":2437,"title":{},"body":{"index.html":{}}}],["void",{"_index":910,"title":{},"body":{"injectables/CoreAuthService.html":{},"classes/EventsGateway.html":{},"injectables/EventsService-1.html":{},"controllers/NotificationController.html":{},"classes/SwaggerDocBuilder.html":{}}}],["vulnerabilities",{"_index":2623,"title":{},"body":{"todo.html":{}}}],["want",{"_index":2568,"title":{},"body":{"todo.html":{}}}],["we're",{"_index":474,"title":{},"body":{"guards/AuthGuard.html":{},"guards/WebsocketGuard.html":{}}}],["web",{"_index":2216,"title":{},"body":{"guards/WebsocketGuard.html":{},"todo.html":{}}}],["website",{"_index":2086,"title":{},"body":{"entities/Venue.html":{}}}],["websiteurl",{"_index":23,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["websocketgateway",{"_index":167,"title":{},"body":{"classes/AdminGateway.html":{},"classes/EventsGateway.html":{},"classes/MessagingGateway.html":{}}}],["websocketguard",{"_index":2205,"title":{"guards/WebsocketGuard.html":{}},"body":{"guards/WebsocketGuard.html":{}}}],["websocketmodule",{"_index":348,"title":{"modules/WebsocketModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/WebsocketModule.html":{},"modules.html":{},"overview.html":{}}}],["websockets",{"_index":2336,"title":{},"body":{"index.html":{}}}],["websocketserver",{"_index":1218,"title":{},"body":{"classes/EventsGateway.html":{}}}],["webstorm",{"_index":2439,"title":{},"body":{"index.html":{}}}],["weekly",{"_index":1584,"title":{},"body":{"interfaces/NotificationFilter.html":{},"interfaces/NotificationMetadata.html":{},"interfaces/NotificationServiceOptions.html":{},"classes/UserPreferences.html":{},"miscellaneous/enumerations.html":{}}}],["weitzenhoffer",{"_index":2547,"title":{},"body":{"properties.html":{}}}],["well",{"_index":2368,"title":{},"body":{"index.html":{},"todo.html":{}}}],["wi",{"_index":2128,"title":{},"body":{"entities/Venue.html":{}}}],["wineries",{"_index":2354,"title":{},"body":{"index.html":{}}}],["winery",{"_index":765,"title":{},"body":{"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{},"miscellaneous/enumerations.html":{}}}],["within",{"_index":2407,"title":{},"body":{"index.html":{},"todo.html":{}}}],["wont",{"_index":1428,"title":{},"body":{"injectables/LocationsService.html":{}}}],["work",{"_index":2514,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":2475,"title":{},"body":{"index.html":{}}}],["world",{"_index":813,"title":{},"body":{"injectables/ChatService.html":{},"injectables/ContentService.html":{},"injectables/EventsService-2.html":{},"injectables/GraphqlService.html":{},"injectables/LocationsService-1.html":{},"injectables/MediaService.html":{},"injectables/MediaService-1.html":{},"injectables/NotificationsService.html":{},"injectables/PresenceService.html":{}}}],["ws_namespaces",{"_index":172,"title":{},"body":{"classes/AdminGateway.html":{},"classes/EventsGateway.html":{},"classes/MessagingGateway.html":{}}}],["ws_namespaces.admin",{"_index":177,"title":{},"body":{"classes/AdminGateway.html":{}}}],["ws_namespaces.events",{"_index":1229,"title":{},"body":{"classes/EventsGateway.html":{}}}],["ws_namespaces.messaging",{"_index":1457,"title":{},"body":{"classes/MessagingGateway.html":{}}}],["yarn",{"_index":2421,"title":{},"body":{"index.html":{}}}],["yelpurl",{"_index":726,"title":{},"body":{"classes/Business.html":{},"classes/BusinessAccount.html":{},"classes/PerformerAccount.html":{}}}],["yes",{"_index":2305,"title":{},"body":{"miscellaneous/functions.html":{}}}],["youre",{"_index":180,"title":{},"body":{"classes/AdminGateway.html":{}}}],["youtubeurl",{"_index":24,"title":{},"body":{"entities/Account.html":{},"classes/Account-1.html":{},"classes/BandAccount.html":{},"classes/BusinessAccount.html":{},"classes/MusicianAccount.html":{},"classes/OrganizerAccount.html":{},"classes/PerformerAccount.html":{},"classes/VenueAccount.html":{}}}],["zip",{"_index":2080,"title":{},"body":{"entities/Venue.html":{}}}],["zipcode",{"_index":2079,"title":{},"body":{"entities/Venue.html":{}}}],["zoom",{"_index":193,"title":{},"body":{"modules/AdminModule.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BandsModule.html":{},"modules/ChatModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/EventsModule.html":{},"modules/GraphqlModule.html":{},"modules/LocationsModule.html":{},"modules/MediaModule.html":{},"modules/MessagingModule.html":{},"modules/MusiciansModule.html":{},"modules/NetworksModule.html":{},"modules/NotificationModule.html":{},"modules/NotificationsModule.html":{},"modules/OrganizersModule.html":{},"modules/PresenceModule.html":{},"modules/StrategyModule.html":{},"modules/UsersModule.html":{},"modules/VenuesModule.html":{},"modules/WebsocketModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/Account.html":{"url":"entities/Account.html","title":"entity - Account","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/account/base/account.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                about\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                avatarUrl\n                            \n                            \n                                    \n                                    \n                                canCall\n                            \n                            \n                                    \n                                    \n                                canEmail\n                            \n                            \n                                    \n                                    \n                                canText\n                            \n                            \n                                    \n                                deactivatedAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                facebookUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                genres\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                imageUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                instagramUrl\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                twitterUrl\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                websiteUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                youtubeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        about\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty({description: 'About account.', example: 'About'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        avatarUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty({description: 'Account avatar url.', example: 'https://example.com/image.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canCall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:109\n                        \n                    \n\n            \n                \n                    CONTACT\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deactivatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        facebookUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, genre => genre.accounts)@JoinTable({name: 'account_genres'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty({description: 'Account thumbnail image url.', example: 'https://example.com/image.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        instagramUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})@ApiProperty({example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:40\n                        \n                    \n\n            \n                \n                    METADATA\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty({description: 'Account name.', example: 'Account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:53\n                        \n                    \n\n            \n                \n                    BASIC INFO\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        twitterUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: AccountType})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:33\n                        \n                    \n\n            \n                \n                    DISCRIMINATOR\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        websiteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:86\n                        \n                    \n\n            \n                \n                    SOCIAL ACCOUNTS\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        youtubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:90\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  OneToOne,\n  Relation,\n  TableInheritance,\n  ChildEntity,\n  ManyToOne,\n  ManyToMany,\n  JoinTable,\n  // ManyToOne,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { VersionedResource } from '../../common/resource.entity';\nimport { AccountType } from '../../../enums/account-type.enum';\nimport { Band } from '../band.entity';\nimport { Venue } from '../venue.entity';\nimport { Musician } from '../musician.entity';\nimport { Organizer } from '../organizer.entity';\nimport { Genre } from '../../tags/genre.entity';\nimport { PerformerUser } from '../../user';\n\n@Entity()\n@TableInheritance({ column: 'type' })\nexport class Account extends VersionedResource {\n  /**\n   * DISCRIMINATOR\n   */\n  @Column({\n    type: 'enum',\n    enum: AccountType,\n  })\n  type: AccountType;\n\n  /**\n   * METADATA\n   */\n  @Column({ default: true })\n  @ApiProperty({ example: true })\n  isActive: boolean;\n\n  @Column()\n  deactivatedAt: Date;\n\n  /**\n   * BASIC INFO\n   */\n  @Column()\n  @ApiProperty({\n    description: 'Account name.',\n    example: 'Account',\n  })\n  name: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'About account.',\n    example: 'About',\n  })\n  about?: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'Account avatar url.',\n    example: 'https://example.com/image.png',\n  })\n  avatarUrl?: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'Account thumbnail image url.',\n    example: 'https://example.com/image.png',\n  })\n  imageUrl?: string;\n\n  @ManyToMany(() => Genre, (genre) => genre.accounts)\n  @JoinTable({ name: 'account_genres' })\n  @ApiProperty()\n  genres?: Relation[];\n\n  /**\n   * SOCIAL ACCOUNTS\n   */\n  @Column()\n  @ApiProperty()\n  websiteUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  youtubeUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  facebookUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  twitterUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  instagramUrl?: string;\n\n  /**\n   * CONTACT\n   */\n  @Column()\n  @ApiProperty()\n  canEmail: boolean;\n\n  @Column()\n  @ApiProperty()\n  canText: boolean;\n\n  @Column()\n  @ApiProperty()\n  canCall: boolean;\n\n  /**\n   * AFFILIATES\n   */\n  // @ManyToMany(() => Musician)\n  // affiliatedMusicians: Relation;\n\n  // @ManyToMany(() => Band)\n  // affiliatedBands: Relation;\n\n  // @ManyToMany(() => Organizer)\n  // affiliatedOrganizers: Relation;\n\n  // @ManyToMany(() => Venue)\n  // affiliatedVenues: Relation;\n}\n\n@ChildEntity(AccountType.MUSICIAN)\nexport class MusicianAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Musician, (musician) => musician.account)\n  musician: Relation;\n}\n\n@ChildEntity(AccountType.BAND)\nexport class BandAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Band, (band) => band.account)\n  band: Relation;\n}\n\n@ChildEntity(AccountType.VENUE)\nexport class VenueAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Venue, (venue) => venue.account)\n  venue: Relation;\n}\n\n@ChildEntity(AccountType.ORGANIZER)\nexport class OrganizerAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Organizer, (organizer) => organizer.account)\n  organizer: Relation;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Account-1.html":{"url":"classes/Account-1.html","title":"class - Account-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/account/base/account.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                about\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                avatarUrl\n                            \n                            \n                                    \n                                    \n                                canCall\n                            \n                            \n                                    \n                                    \n                                canEmail\n                            \n                            \n                                    \n                                    \n                                canText\n                            \n                            \n                                    \n                                deactivatedAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                facebookUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                genres\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                imageUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                instagramUrl\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                twitterUrl\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                websiteUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                youtubeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        about\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty({description: 'About account.', example: 'About'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        avatarUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty({description: 'Account avatar url.', example: 'https://example.com/image.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canCall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:109\n                        \n                    \n\n            \n                \n                    CONTACT\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deactivatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        facebookUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, genre => genre.accounts)@JoinTable({name: 'account_genres'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty({description: 'Account thumbnail image url.', example: 'https://example.com/image.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        instagramUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})@ApiProperty({example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:40\n                        \n                    \n\n            \n                \n                    METADATA\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty({description: 'Account name.', example: 'Account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:53\n                        \n                    \n\n            \n                \n                    BASIC INFO\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        twitterUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: AccountType})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:33\n                        \n                    \n\n            \n                \n                    DISCRIMINATOR\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        websiteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:86\n                        \n                    \n\n            \n                \n                    SOCIAL ACCOUNTS\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        youtubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:90\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  OneToOne,\n  Relation,\n  TableInheritance,\n  ChildEntity,\n  ManyToOne,\n  ManyToMany,\n  JoinTable,\n  // ManyToOne,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { VersionedResource } from '../../common/resource.entity';\nimport { AccountType } from '../../../enums/account-type.enum';\nimport { Band } from '../band.entity';\nimport { Venue } from '../venue.entity';\nimport { Musician } from '../musician.entity';\nimport { Organizer } from '../organizer.entity';\nimport { Genre } from '../../tags/genre.entity';\nimport { PerformerUser } from '../../user';\n\n@Entity()\n@TableInheritance({ column: 'type' })\nexport class Account extends VersionedResource {\n  /**\n   * DISCRIMINATOR\n   */\n  @Column({\n    type: 'enum',\n    enum: AccountType,\n  })\n  type: AccountType;\n\n  /**\n   * METADATA\n   */\n  @Column({ default: true })\n  @ApiProperty({ example: true })\n  isActive: boolean;\n\n  @Column()\n  deactivatedAt: Date;\n\n  /**\n   * BASIC INFO\n   */\n  @Column()\n  @ApiProperty({\n    description: 'Account name.',\n    example: 'Account',\n  })\n  name: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'About account.',\n    example: 'About',\n  })\n  about?: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'Account avatar url.',\n    example: 'https://example.com/image.png',\n  })\n  avatarUrl?: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'Account thumbnail image url.',\n    example: 'https://example.com/image.png',\n  })\n  imageUrl?: string;\n\n  @ManyToMany(() => Genre, (genre) => genre.accounts)\n  @JoinTable({ name: 'account_genres' })\n  @ApiProperty()\n  genres?: Relation[];\n\n  /**\n   * SOCIAL ACCOUNTS\n   */\n  @Column()\n  @ApiProperty()\n  websiteUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  youtubeUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  facebookUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  twitterUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  instagramUrl?: string;\n\n  /**\n   * CONTACT\n   */\n  @Column()\n  @ApiProperty()\n  canEmail: boolean;\n\n  @Column()\n  @ApiProperty()\n  canText: boolean;\n\n  @Column()\n  @ApiProperty()\n  canCall: boolean;\n\n  /**\n   * AFFILIATES\n   */\n  // @ManyToMany(() => Musician)\n  // affiliatedMusicians: Relation;\n\n  // @ManyToMany(() => Band)\n  // affiliatedBands: Relation;\n\n  // @ManyToMany(() => Organizer)\n  // affiliatedOrganizers: Relation;\n\n  // @ManyToMany(() => Venue)\n  // affiliatedVenues: Relation;\n}\n\n@ChildEntity(AccountType.MUSICIAN)\nexport class MusicianAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Musician, (musician) => musician.account)\n  musician: Relation;\n}\n\n@ChildEntity(AccountType.BAND)\nexport class BandAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Band, (band) => band.account)\n  band: Relation;\n}\n\n@ChildEntity(AccountType.VENUE)\nexport class VenueAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Venue, (venue) => venue.account)\n  venue: Relation;\n}\n\n@ChildEntity(AccountType.ORGANIZER)\nexport class OrganizerAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Organizer, (organizer) => organizer.account)\n  organizer: Relation;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/services/account.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authAccountRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/services/account.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authAccountRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        test\n                        \n                    \n                \n            \n            \n                \n                        \n                    test()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/services/account.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { AuthAccount } from '../entities/account.entity';\n\n@Injectable()\nexport class AccountService {\n  constructor(\n    @InjectRepository(AuthAccount)\n    private readonly authAccountRepository: Repository,\n  ) {}\n\n  async test() {\n    return this.authAccountRepository.findOneBy({ id: 'id' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminGateway.html":{"url":"classes/AdminGateway.html","title":"class - AdminGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ws/src/gateways/admin/admin.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                identity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService)\n                    \n                \n                        \n                            \n                                Defined in apps/ws/src/gateways/admin/admin.gateway.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        identity\n                        \n                    \n                \n            \n            \n                \n                        \n                    identity(data: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('identity')\n                \n            \n\n                    \n                        \n                            Defined in apps/ws/src/gateways/admin/admin.gateway.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  WebSocketGateway,\n  SubscribeMessage,\n  MessageBody,\n} from '@nestjs/websockets';\nimport { AdminService } from './admin.service';\nimport { WS_NAMESPACES } from '@app/ws/constants';\nimport { gatewayOptions } from '../gateway.options';\n\n@WebSocketGateway({\n  namespace: WS_NAMESPACES.ADMIN,\n  ...gatewayOptions,\n})\nexport class AdminGateway {\n  constructor(private readonly adminService: AdminService) {}\n\n  @SubscribeMessage('identity')\n  async identity(@MessageBody() data: number): Promise {\n    return 'youre an admin';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ws/src/gateways/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AdminService } from './admin.service';\nimport { AdminGateway } from './admin.gateway';\n\n@Module({\n  providers: [AdminGateway, AdminService],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ws/src/gateways/admin/admin.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AdminService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Announcement.html":{"url":"classes/Announcement.html","title":"class - Announcement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Announcement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Post\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                accountType\n                            \n                            \n                                announcementType\n                            \n                            \n                                author\n                            \n                            \n                                comments\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                shares\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Exclude\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        announcementType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnnouncementType\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nAuthModule->ApiModule\n\n\n\n\n\nBandsModule\n\nBandsModule\n\nApiModule -->\n\nBandsModule->ApiModule\n\n\n\n\n\nConnectionModule\n\nConnectionModule\n\nApiModule -->\n\nConnectionModule->ApiModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nApiModule -->\n\nEventsModule->ApiModule\n\n\n\n\n\nLocationsModule\n\nLocationsModule\n\nApiModule -->\n\nLocationsModule->ApiModule\n\n\n\n\n\nMusiciansModule\n\nMusiciansModule\n\nApiModule -->\n\nMusiciansModule->ApiModule\n\n\n\n\n\nNetworksModule\n\nNetworksModule\n\nApiModule -->\n\nNetworksModule->ApiModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nApiModule -->\n\nNotificationModule->ApiModule\n\n\n\n\n\nOrganizersModule\n\nOrganizersModule\n\nApiModule -->\n\nOrganizersModule->ApiModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nApiModule -->\n\nUsersModule->ApiModule\n\n\n\n\n\nVenuesModule\n\nVenuesModule\n\nApiModule -->\n\nVenuesModule->ApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BandsModule\n                        \n                        \n                            ConnectionModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            LocationsModule\n                        \n                        \n                            MusiciansModule\n                        \n                        \n                            NetworksModule\n                        \n                        \n                            NotificationModule\n                        \n                        \n                            OrganizersModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            VenuesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConnectionModule } from '@app/data';\nimport {\n  MusiciansModule,\n  BandsModule,\n  OrganizersModule,\n  NetworksModule,\n  UsersModule,\n  EventsModule,\n  LocationsModule,\n  VenuesModule,\n} from './resources';\n//\nimport { AuthModule } from '@app/auth/auth.module';\nimport { NotificationModule } from '@app/notification/notification.module';\n\n@Module({\n  imports: [\n    // Database\n    ConnectionModule,\n    // Resources\n    UsersModule,\n    EventsModule,\n    LocationsModule,\n    VenuesModule,\n    MusiciansModule,\n    BandsModule,\n    OrganizersModule,\n    NetworksModule,\n    // External \"Services\"\n    AuthModule,\n    NotificationModule,\n    // WebsocketModule,\n  ],\n})\nexport class ApiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nConnectionModule\n\nConnectionModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConnectionModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            original/xxx/apps/gateways/rest/src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                        \n                            AuthController\n                        \n                        \n                            EventsController\n                        \n                        \n                            VenuesController\n                        \n                        \n                            OrganizersController\n                        \n                        \n                            MusiciansController\n                        \n                        \n                            BandsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConnectionModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n// import { ConfigModule } from 'libs/common/config/config.module';\n// import { CommonModule } from 'libs/common/common.module';\n\nimport { UsersController } from './controllers/users.controller';\nimport { AuthController } from './controllers/auth.controller';\nimport { EventsController } from './controllers/events.controller';\nimport { VenuesController } from './controllers/venues.controller';\nimport { OrganizersController } from './controllers/organizers.controller';\nimport { MusiciansController } from './controllers/musicians.controller';\nimport { BandsController } from './controllers/bands.controller';\nimport { ConnectionModule } from '@app/data/connection/connection.module';\nimport { User } from '@app/data';\n\n@Module({\n  imports: [ConnectionModule.forFeature([User])],\n  controllers: [\n    UsersController,\n    AuthController,\n    EventsController,\n    VenuesController,\n    OrganizersController,\n    MusiciansController,\n    BandsController,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssociateUser.html":{"url":"classes/AssociateUser.html","title":"class - AssociateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssociateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/user.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Credentials } from './auth';\n\nexport class User {\n  /**\n   * METADATA\n   */\n  id: string;\n  createdAt: Date;\n  lastUpdatedAt: Date;\n  isActive: boolean;\n\n  /**\n   * CREDENTIALS\n   */\n  role: UserRole;\n  credentials: Credentials;\n\n  /**\n   * BASIC INFO\n   */\n  firstName: string;\n  lastName: string;\n}\n\nexport enum UserRole {\n  PUBLIC,\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  ASSOCIATE,\n}\n\nexport class PublicUser {}\nexport class PerformerUser {}\nexport class VenueUser {}\nexport class OrganizerUser {}\nexport class AssociateUser {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssociateUser-1.html":{"url":"classes/AssociateUser-1.html","title":"class - AssociateUser-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssociateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/user/associate.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChildEntity } from 'typeorm';\nimport { User } from './base.entity';\nimport { UserRole } from '../../enums/user-role.enum';\n\n@ChildEntity(UserRole.ASSOCIATE)\nexport class AssociateUser extends User {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AuthAccount.html":{"url":"entities/AuthAccount.html","title":"entity - AuthAccount","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AuthAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/entities/account.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                credentials\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                sessions\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        credentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, credentials => credentials.account)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/account.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserRole, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/account.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sessions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, session => session.account)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/account.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, user => user.authAccount)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/account.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Relation,\n  JoinColumn,\n  OneToMany,\n  OneToOne,\n} from 'typeorm';\nimport { Credentials } from './credentials.entity';\nimport { AuthMetadata } from './common.entity';\nimport { UserSession } from './session.entity';\nimport { User } from '@app/data/entities/user';\nimport { UserRole } from '@app/data/enums';\n\n@Entity()\nexport class AuthAccount extends AuthMetadata {\n  @OneToOne(() => User, (user) => user.authAccount)\n  @JoinColumn()\n  user: Relation;\n\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.PUBLIC,\n  })\n  role: UserRole;\n\n  @OneToMany(() => Credentials, (credentials) => credentials.account)\n  credentials: Relation[];\n\n  @OneToMany(() => UserSession, (session) => session.account)\n  sessions: Relation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/auth/src/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(context: RmqContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'get-user'})\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/auth/src/auth.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        RmqContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { Ctx, MessagePattern, RmqContext } from '@nestjs/microservices';\n\n@Controller()\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @MessagePattern({ cmd: 'get-user' })\n  async getUser(@Ctx() context: RmqContext) {\n    const channel = context.getChannelRef();\n    const message = context.getMessage();\n\n    console.log(channel);\n    console.log(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController-1.html":{"url":"controllers/AuthController-1.html","title":"controller - AuthController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/gateways/rest/src/controllers/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('auth')\nexport class AuthController {\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/auth/src/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/guards/auth.guard.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/guards/auth.guard.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private readonly jwtService: JwtService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    // Get request from HTTP context\n    const request = context.switchToHttp().getRequest();\n\n    // Get token from header\n    const token = this.extractTokenFromHeader(request);\n    if (!token)\n      throw new UnauthorizedException(\n        'You must provide a valid Bearer token with your request.',\n      );\n\n    // Verify token and attach payload to request\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: 'SECRET',\n      });\n      // 💡 We're assigning the payload to the request object here\n      // so that we can access it in our route handlers\n      request['user'] = payload;\n    } catch {\n      throw new UnauthorizedException('Invalid token provided.');\n    }\n\n    // Return can activate\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard-1.html":{"url":"guards/AuthGuard-1.html","title":"guard - AuthGuard-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                original/xxx/auth/src/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/auth/src/guards/auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request = context.switchToHttp().getRequest();\n    return validateRequest(request);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateRequest(request: any) {\n  return true;\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthMetadata.html":{"url":"classes/AuthMetadata.html","title":"class - AuthMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/entities/common.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/common.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/common.entity.ts:12\n                        \n                    \n\n            \n                \n                    METADATA\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/common.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport abstract class AuthMetadata {\n  /**\n   * METADATA\n   */\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  lastUpdatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAccountService\n\nAccountService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAccountService->AuthModule\n\n\n\n\n\nCoreAuthService\n\nCoreAuthService\n\nAuthModule -->\n\nCoreAuthService->AuthModule\n\n\n\n\n\nCredentialsService\n\nCredentialsService\n\nAuthModule -->\n\nCredentialsService->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nSessionsService\n\nSessionsService\n\nAuthModule -->\n\nSessionsService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/auth/src/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountService\n                        \n                        \n                            CoreAuthService\n                        \n                        \n                            CredentialsService\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            SessionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PassportModule } from '@nestjs/passport';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { CoreAuthService } from './core.service';\nimport { AuthController } from './auth.controller';\nimport { MESSAGE_BROKER } from '@app/constants';\n\nimport { AuthAccount, Credentials, UserSession } from './entities';\nimport { CredentialsService } from './services/credentials.service';\nimport { AccountService } from './services/account.service';\nimport { SessionsService } from './services/sessions.service';\nimport { LocalStrategy } from './strategies/local.strategy';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([AuthAccount, Credentials, UserSession]),\n    ClientsModule.register([\n      {\n        name: MESSAGE_BROKER,\n        transport: Transport.TCP,\n      },\n    ]),\n    JwtModule.register({\n      global: true,\n      secret: 'SECRET',\n    }),\n    PassportModule,\n  ],\n  providers: [\n    LocalStrategy,\n    CoreAuthService,\n    AccountService,\n    CredentialsService,\n    SessionsService,\n  ],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthOptions.html":{"url":"interfaces/AuthOptions.html","title":"interface - AuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/decorators/src/auth/auth.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  SetMetadata,\n  UnauthorizedException,\n  UseGuards,\n  applyDecorators,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { AuthGuard } from '@app/auth/guards/auth.guard';\nimport { UserRole } from '@app/data/entities/user';\n// import { BaseUserRole } from 'apps/api/src/auth/roles/roles.enum';\n// import { AuthGuard } from 'apps/api/src/auth/guards/auth.guard';\n\ninterface AuthOptions {\n  roles?: UserRole[];\n}\n\nexport function Auth(options?: AuthOptions) {\n  return applyDecorators(\n    SetMetadata('roles', options?.roles || null),\n    UseGuards(AuthGuard),\n    ApiBearerAuth('Access Token'),\n    ApiUnauthorizedResponse({\n      type: UnauthorizedException,\n      description: 'Unauthorized',\n    }),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/auth/src/auth.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService-1.html":{"url":"injectables/AuthService-1.html","title":"injectable - AuthService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/auth/src/auth.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {\n  // constructor\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BackLine.html":{"url":"classes/BackLine.html","title":"class - BackLine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BackLine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/stage.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PhysicalSpace, VersionedResource } from './common';\n\nexport enum StageType {}\nexport class Stage extends VersionedResource implements PhysicalSpace {\n  capacity: number;\n}\n\nexport class PASystem {}\nexport class BackLine {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Band.html":{"url":"entities/Band.html","title":"entity - Band","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Band\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/account/band.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                account\n                            \n                            \n                                    \n                                    Optional\n                                bandSpecific\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                members\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, account => account.band)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/band.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        bandSpecific\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/band.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/band.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Musician[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, musician => musician.bands)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/band.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  ManyToMany,\n  OneToOne,\n  JoinTable,\n  Relation,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport { BandAccount } from './base/account.entity';\nimport { Performer } from './base/performer.class';\nimport { Musician } from './musician.entity';\n\n@Entity()\nexport class Band extends Performer {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @OneToOne(() => BandAccount, (account) => account.band)\n  @JoinTable()\n  account: Relation;\n\n  @ManyToMany(() => Musician, (musician) => musician.bands)\n  @ApiProperty()\n  members: Musician[];\n\n  @Column()\n  bandSpecific?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BandAccount.html":{"url":"classes/BandAccount.html","title":"class - BandAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BandAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/account/base/account.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                band\n                            \n                            \n                                    \n                                managedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        band\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, band => band.account)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:150\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        managedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.managedAccounts)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:147\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  OneToOne,\n  Relation,\n  TableInheritance,\n  ChildEntity,\n  ManyToOne,\n  ManyToMany,\n  JoinTable,\n  // ManyToOne,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { VersionedResource } from '../../common/resource.entity';\nimport { AccountType } from '../../../enums/account-type.enum';\nimport { Band } from '../band.entity';\nimport { Venue } from '../venue.entity';\nimport { Musician } from '../musician.entity';\nimport { Organizer } from '../organizer.entity';\nimport { Genre } from '../../tags/genre.entity';\nimport { PerformerUser } from '../../user';\n\n@Entity()\n@TableInheritance({ column: 'type' })\nexport class Account extends VersionedResource {\n  /**\n   * DISCRIMINATOR\n   */\n  @Column({\n    type: 'enum',\n    enum: AccountType,\n  })\n  type: AccountType;\n\n  /**\n   * METADATA\n   */\n  @Column({ default: true })\n  @ApiProperty({ example: true })\n  isActive: boolean;\n\n  @Column()\n  deactivatedAt: Date;\n\n  /**\n   * BASIC INFO\n   */\n  @Column()\n  @ApiProperty({\n    description: 'Account name.',\n    example: 'Account',\n  })\n  name: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'About account.',\n    example: 'About',\n  })\n  about?: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'Account avatar url.',\n    example: 'https://example.com/image.png',\n  })\n  avatarUrl?: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'Account thumbnail image url.',\n    example: 'https://example.com/image.png',\n  })\n  imageUrl?: string;\n\n  @ManyToMany(() => Genre, (genre) => genre.accounts)\n  @JoinTable({ name: 'account_genres' })\n  @ApiProperty()\n  genres?: Relation[];\n\n  /**\n   * SOCIAL ACCOUNTS\n   */\n  @Column()\n  @ApiProperty()\n  websiteUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  youtubeUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  facebookUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  twitterUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  instagramUrl?: string;\n\n  /**\n   * CONTACT\n   */\n  @Column()\n  @ApiProperty()\n  canEmail: boolean;\n\n  @Column()\n  @ApiProperty()\n  canText: boolean;\n\n  @Column()\n  @ApiProperty()\n  canCall: boolean;\n\n  /**\n   * AFFILIATES\n   */\n  // @ManyToMany(() => Musician)\n  // affiliatedMusicians: Relation;\n\n  // @ManyToMany(() => Band)\n  // affiliatedBands: Relation;\n\n  // @ManyToMany(() => Organizer)\n  // affiliatedOrganizers: Relation;\n\n  // @ManyToMany(() => Venue)\n  // affiliatedVenues: Relation;\n}\n\n@ChildEntity(AccountType.MUSICIAN)\nexport class MusicianAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Musician, (musician) => musician.account)\n  musician: Relation;\n}\n\n@ChildEntity(AccountType.BAND)\nexport class BandAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Band, (band) => band.account)\n  band: Relation;\n}\n\n@ChildEntity(AccountType.VENUE)\nexport class VenueAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Venue, (venue) => venue.account)\n  venue: Relation;\n}\n\n@ChildEntity(AccountType.ORGANIZER)\nexport class OrganizerAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Organizer, (organizer) => organizer.account)\n  organizer: Relation;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BandsController.html":{"url":"controllers/BandsController.html","title":"controller - BandsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BandsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/gateways/rest/src/controllers/bands.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                bands\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createBandDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/bands.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBandDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/bands.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/bands.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/bands.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateBandDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/bands.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateBandDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\n\n@Controller('bands')\nexport class BandsController {\n  constructor() {}\n\n  @Post()\n  create(@Body() createBandDto: any) {\n    return `This creates a Band with shape: ${createBandDto}`;\n  }\n\n  @Get()\n  findAll() {\n    return 'This finds all Bands';\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return `This finds a single Band with id: ${id}`;\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateBandDto: any) {\n    return `This updates a single Band with id: ${id}, and data: ${updateBandDto}`;\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return `This deletes Band with id: ${id}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BandsModule.html":{"url":"modules/BandsModule.html","title":"module - BandsModule","body":"\n                   \n\n\n\n\n    Modules\n    BandsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BandsModule\n\n\n\ncluster_BandsModule_providers\n\n\n\n\nBandsService\n\nBandsService\n\n\n\nBandsModule\n\nBandsModule\n\nBandsModule -->\n\nBandsService->BandsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/resources/bands/bands.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BandsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BandsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BandsService } from './bands.service';\nimport { BandsController } from './bands.controller';\n\n@Module({\n  controllers: [BandsController],\n  providers: [BandsService],\n})\nexport class BandsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BandsService.html":{"url":"injectables/BandsService.html","title":"injectable - BandsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BandsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/resources/bands/bands.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createBandDto: CreateBandDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/bands/bands.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBandDto\n                                            \n                                                            CreateBandDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/bands/bands.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/bands/bands.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/bands/bands.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateBandDto: UpdateBandDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/bands/bands.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateBandDto\n                                            \n                                                            UpdateBandDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateBandDto, UpdateBandDto } from '@app/data/dto';\n\n@Injectable()\nexport class BandsService {\n  create(createBandDto: CreateBandDto) {\n    return 'This action adds a new band';\n  }\n\n  findAll() {\n    return `This action returns all bands`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} band`;\n  }\n\n  update(id: number, updateBandDto: UpdateBandDto) {\n    return `This action updates a #${id} band`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} band`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BannedUser.html":{"url":"classes/BannedUser.html","title":"class - BannedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BannedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/moderation.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ModerationAction\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Comment, Post } from './content';\nimport { Event } from './event';\nimport { User } from './user';\n\n/**\n *\n *\n *\n *\n */\nexport enum FlagType {\n  HATE_SPEECH,\n  DISCRIMINATION,\n  HARASSMENT,\n  THREATS,\n  SPAM,\n  MISINFORMATION,\n  ILLEGAL_CONTENT,\n  COPYRIGHT,\n  SEXUAL,\n  OTHER,\n}\nexport abstract class FlaggedItem {\n  id: string;\n  flaggedAt: Date;\n  flaggedBy: User;\n  flagType: FlagType;\n  reason: string;\n  assignedToModerator: User;\n  assignedToModeratorAt: Date;\n  moderatorReceived: boolean;\n  moderatorReceivedAt: Date;\n  resolved: boolean;\n  resolvedAt: Date;\n  actionsTaken: ModerationAction[];\n}\n\nexport class FlaggedEvent extends FlaggedItem {\n  event: Event;\n}\nexport class FlaggedPost extends FlaggedItem {\n  post: Post;\n}\nexport class FlaggedComment extends FlaggedItem {\n  comment: Comment;\n}\n\n/**\n *\n *\n *\n *\n */\nexport abstract class ModerationAction {}\nexport class IssuedWarning extends ModerationAction {}\nexport class BannedUser extends ModerationAction {}\nexport class RemovedComment extends ModerationAction {}\n\nexport class ResolvedCases {\n  resolutionDate: Date;\n  // Audit details etc\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEvent.html":{"url":"classes/BaseEvent.html","title":"class - BaseEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/event/base.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            VersionedResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admins\n                            \n                            \n                                    \n                                ageRestriction\n                            \n                            \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                editors\n                            \n                            \n                                    \n                                    Optional\n                                imageUrl\n                            \n                            \n                                    \n                                isChildFriendly\n                            \n                            \n                                    \n                                isFree\n                            \n                            \n                                    \n                                isHoliday\n                            \n                            \n                                    \n                                isPrivate\n                            \n                            \n                                lastUpdatedBy\n                            \n                            \n                                    \n                                    Optional\n                                minimumAge\n                            \n                            \n                                    \n                                    Optional\n                                registrationLink\n                            \n                            \n                                    \n                                requiresRegistration\n                            \n                            \n                                    \n                                requiresTicket\n                            \n                            \n                                    \n                                servesAlcohol\n                            \n                            \n                                    \n                                servesFood\n                            \n                            \n                                    \n                                    Optional\n                                timeDoor\n                            \n                            \n                                    \n                                    Optional\n                                timeEnd\n                            \n                            \n                                    \n                                timeStart\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                viewers\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        admins\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:20\n                        \n                    \n\n            \n                \n                    PRIVILEGES\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ageRestriction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:10\n                        \n                    \n\n            \n                \n                    METADATA\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isChildFriendly\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isFree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isHoliday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isPrivate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:58\n                        \n                    \n\n            \n                \n                    EVENT DETAILS\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        minimumAge\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        registrationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        requiresRegistration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        requiresTicket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        servesAlcohol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        servesFood\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        timeDoor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:46\n                        \n                    \n\n            \n                \n                    DATE TIME INFO\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        timeEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        timeStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:34\n                        \n                    \n\n            \n                \n                    BASIC INFO\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, JoinTable, ManyToMany, ManyToOne } from 'typeorm';\nimport { VersionedResource } from '../common/resource.entity';\nimport { User } from '../user/base.entity';\n\nexport class BaseEvent extends VersionedResource {\n  /**\n   * METADATA\n   */\n  // @ManyToOne(() => BaseUser, (user) => user.createdEvents)\n  createdBy: User;\n\n  // @ManyToOne(() => BaseUser, (user) => user.eventEdits)\n  lastUpdatedBy: User;\n\n  /**\n   * PRIVILEGES\n   */\n  // @ManyToMany(() => BaseUser, (user) => user.administratorOf)\n  // @JoinTable()\n  admins: User[];\n\n  // @ManyToMany(() => BaseUser, (user) => user.editorOf)\n  // @JoinTable()\n  editors: User[];\n\n  // @ManyToMany(() => BaseUser, (user) => user.viewerOf)\n  // @JoinTable()\n  viewers: User[];\n\n  /**\n   * BASIC INFO\n   */\n  @Column()\n  title: string;\n\n  @Column()\n  description?: string;\n\n  @Column()\n  imageUrl?: string;\n\n  /**\n   * DATE TIME INFO\n   */\n  @Column()\n  timeDoor?: Date;\n\n  @Column()\n  timeStart: Date;\n\n  @Column()\n  timeEnd?: Date;\n\n  /**\n   * EVENT DETAILS\n   */\n  @Column({ default: false })\n  isPrivate: boolean;\n\n  @Column({ default: true })\n  isFree: boolean;\n\n  @Column({ default: false })\n  isChildFriendly: boolean;\n\n  @Column({ default: false })\n  isHoliday: boolean;\n\n  @Column({ default: false })\n  ageRestriction: boolean;\n\n  @Column()\n  minimumAge?: number;\n\n  @Column({ default: false })\n  servesAlcohol: boolean;\n\n  @Column({ default: false })\n  servesFood: boolean;\n\n  @Column({ default: false })\n  requiresRegistration: boolean;\n\n  @Column()\n  registrationLink?: string;\n\n  @Column({ default: false })\n  requiresTicket: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Broadcast.html":{"url":"classes/Broadcast.html","title":"class - Broadcast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Broadcast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n            \n                Description\n            \n            \n                POST - NETWORKING BROADCAST\n\n            \n\n            \n                Extends\n            \n            \n                            Post\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audience\n                            \n                            \n                                broadcastType\n                            \n                            \n                                producer\n                            \n                            \n                                author\n                            \n                            \n                                comments\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                shares\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BroadcastAudience\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BroadcastType\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:152\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        producer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:154\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bulletin.html":{"url":"classes/Bulletin.html","title":"class - Bulletin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bulletin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Broadcast\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audience\n                            \n                            \n                                broadcastType\n                            \n                            \n                                producer\n                            \n                            \n                                author\n                            \n                            \n                                comments\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                shares\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BroadcastAudience\n\n                    \n                \n                        \n                            \n                                Inherited from         Broadcast\n\n                            \n                        \n                    \n                        \n                                Defined in         Broadcast:153\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BroadcastType\n\n                    \n                \n                        \n                            \n                                Inherited from         Broadcast\n\n                            \n                        \n                    \n                        \n                                Defined in         Broadcast:152\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        producer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                        \n                            \n                                Inherited from         Broadcast\n\n                            \n                        \n                    \n                        \n                                Defined in         Broadcast:154\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Business.html":{"url":"classes/Business.html","title":"class - Business","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Business\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/account/base/business.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                googleBusinessUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                yelpUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        googleBusinessUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/business.class.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        yelpUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/business.class.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Column } from 'typeorm';\n\nexport abstract class Business {\n  @Column()\n  @ApiProperty()\n  googleBusinessUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  yelpUrl?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessAccount.html":{"url":"classes/BusinessAccount.html","title":"class - BusinessAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/account.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Account\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                googleBusinessUrl\n                            \n                            \n                                    Optional\n                                yelpUrl\n                            \n                            \n                                    Optional\n                                about\n                            \n                            \n                                affiliatedBands\n                            \n                            \n                                affiliatedMusicians\n                            \n                            \n                                affiliatedOrganizers\n                            \n                            \n                                affiliatedVenues\n                            \n                            \n                                    Optional\n                                avatarUrl\n                            \n                            \n                                canCall\n                            \n                            \n                                canEmail\n                            \n                            \n                                canText\n                            \n                            \n                                deactivatedAt\n                            \n                            \n                                    Optional\n                                facebookUrl\n                            \n                            \n                                    Optional\n                                genres\n                            \n                            \n                                    Optional\n                                imageUrl\n                            \n                            \n                                    Optional\n                                instagramUrl\n                            \n                            \n                                isActive\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                twitterUrl\n                            \n                            \n                                    Optional\n                                websiteUrl\n                            \n                            \n                                    Optional\n                                youtubeUrl\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        googleBusinessUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/account.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        yelpUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/account.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        about\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        affiliatedBands\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Band[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        affiliatedMusicians\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Musician[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        affiliatedOrganizers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organizer[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        affiliatedVenues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Venue[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:43\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatarUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canCall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        facebookUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Genre[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        instagramUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        twitterUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        websiteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        youtubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Genre,\n  Instrument,\n  PhysicalSpace,\n  VenueKeyword,\n  VersionedResource,\n} from './common';\n\n/**\n * ACCOUNT\n *\n *\n *\n */\nexport class Account extends VersionedResource {\n  /* METADATA */\n  isActive: boolean;\n  deactivatedAt: Date;\n\n  /* BASIC INFO */\n  name: string;\n  about?: string;\n  avatarUrl?: string;\n  imageUrl?: string;\n  genres?: Genre[];\n\n  /* SOCIAL ACCOUNTS */\n  websiteUrl?: string;\n  youtubeUrl?: string;\n  facebookUrl?: string;\n  twitterUrl?: string;\n  instagramUrl?: string;\n\n  /* CONTACT */\n  canEmail: boolean;\n  canText: boolean;\n  canCall: boolean;\n\n  /* AFFILIATES */\n  affiliatedMusicians: Musician[];\n  affiliatedBands: Band[];\n  affiliatedOrganizers: Organizer[];\n  affiliatedVenues: Venue[];\n}\n\n/**\n * EXTENDED ACCOUNT\n *\n *\n *\n */\nexport class PerformerAccount extends Account {\n  spotifyUrl?: string;\n  bandcampUrl?: string;\n  pressKitUrl?: string;\n}\n\nexport class BusinessAccount extends Account {\n  googleBusinessUrl?: string;\n  yelpUrl?: string;\n}\n\n/**\n * MUSICIAN\n *\n *\n *\n */\nexport class Musician extends PerformerAccount {\n  instruments: Instrument[];\n  bands: Band[];\n}\n\n/**\n * BAND\n *\n *\n *\n */\nexport class Band extends PerformerAccount {\n  members: Musician[];\n}\n\n/**\n * VENUE\n *\n *\n *\n */\nexport enum VenueType {\n  VENUE,\n  RESTAURANT,\n  CAFE,\n  BAR,\n  BREWERY,\n  WINERY,\n  DISTILLERY,\n  CLUB,\n  THEATER,\n  GALLERY,\n  AREA,\n  CASINO,\n  LOCATION,\n  COMPLEX,\n  STADIUM,\n}\nexport enum StageType {\n  STAGE,\n  AREA,\n  ROOM,\n}\nexport class Venue extends BusinessAccount implements PhysicalSpace {\n  capacity: number;\n  /* BASIC INFO */\n  type: VenueType;\n  keywords: VenueKeyword[];\n\n  /* VENUE DETAILS */\n  servesAlcohol: boolean;\n  servesFood: boolean;\n  ageRestriction: boolean;\n  minimumAge?: number;\n  requiresReservation: boolean;\n  reservationLink?: string;\n  privateAccess: boolean;\n\n  /* STAGES */\n  stages: Stage[];\n\n  /* LOCATION */\n\n  /* AFFILIATES */\n  affiliatedMusicians: Musician[];\n  affiliatedBands: Band[];\n  affiliatedOrganizers: Organizer[];\n  affiliatedVenues: Venue[];\n}\nexport class Stage extends VersionedResource implements PhysicalSpace {\n  capacity: number;\n  name: string;\n  type: 'STAGE' | 'ROOM' | 'AREA';\n  imageUrl: string;\n  description: string;\n  venue: Venue;\n}\n\n/**\n * ORGANIZER\n *\n *\n *\n */\nexport class Organizer extends BusinessAccount {\n  experienceSummary?: string;\n  services: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessContact.html":{"url":"classes/BusinessContact.html","title":"class - BusinessContact","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessContact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/contact.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookingEmail\n                            \n                            \n                                bookingPhone\n                            \n                            \n                                registrationEmail\n                            \n                            \n                                registrationPhone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bookingEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/contact.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bookingPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/contact.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/contact.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/contact.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ContactDetails {\n  id: string;\n  phone: string;\n  textNumber: string;\n  email: string;\n  availableByPhone: boolean;\n  availableByText: boolean;\n  availableByEmail: boolean;\n}\n\nexport class BusinessContact {\n  bookingPhone: string;\n  bookingEmail: string;\n  registrationPhone: string;\n  registrationEmail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChatController.html":{"url":"controllers/ChatController.html","title":"controller - ChatController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChatController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/advanced/chat/src/chat.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/advanced/chat/src/chat.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ChatService } from './chat.service';\n\n@Controller()\nexport class ChatController {\n  constructor(private readonly chatService: ChatService) {}\n\n  @Get()\n  getHello(): string {\n    return this.chatService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChatModule.html":{"url":"modules/ChatModule.html","title":"module - ChatModule","body":"\n                   \n\n\n\n\n    Modules\n    ChatModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChatModule\n\n\n\ncluster_ChatModule_providers\n\n\n\n\nChatService\n\nChatService\n\n\n\nChatModule\n\nChatModule\n\nChatModule -->\n\nChatService->ChatModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            original/xxx/apps/advanced/chat/src/chat.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChatService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChatController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ChatController } from './chat.controller';\nimport { ChatService } from './chat.service';\n\n@Module({\n  imports: [],\n  controllers: [ChatController],\n  providers: [ChatService],\n})\nexport class ChatModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatService.html":{"url":"injectables/ChatService.html","title":"injectable - ChatService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChatService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/advanced/chat/src/chat.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/apps/advanced/chat/src/chat.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ChatService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n            \n                Description\n            \n            \n                COMMENT\n\n            \n\n            \n                Extends\n            \n            \n                            VersionedResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                post\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/config/src/config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport {\n  ConfigService,\n  ConfigModule as NestConfigModule,\n} from '@nestjs/config';\nimport { configOptions } from './config.options';\n\n@Module({\n  imports: [NestConfigModule.forRoot(configOptions)],\n  providers: [ConfigService],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConnectionModule.html":{"url":"modules/ConnectionModule.html","title":"module - ConnectionModule","body":"\n                   \n\n\n\n\n    Modules\n    ConnectionModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/data/src/connection.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport {\n  Account,\n  Band,\n  BandAccount,\n  Musician,\n  MusicianAccount,\n  Organizer,\n  OrganizerAccount,\n  Venue,\n  VenueAccount,\n} from './entities/account';\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      url: 'postgresql://user:password@postgres:5432/lmx-dev',\n      entities: [\n        Account,\n        MusicianAccount,\n        BandAccount,\n        VenueAccount,\n        OrganizerAccount,\n        Musician,\n        Band,\n        Venue,\n        Organizer,\n      ],\n      autoLoadEntities: true,\n      synchronize: true,\n      logging: true,\n    }),\n  ],\n})\nexport class ConnectionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConnectionService.html":{"url":"injectables/ConnectionService.html","title":"injectable - ConnectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConnectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/data/src/connection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDatabase\n                            \n                            \n                                getHost\n                            \n                            \n                                getPassword\n                            \n                            \n                                getPort\n                            \n                            \n                                getUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in original/xxx/data/src/connection.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabase\n                        \n                    \n                \n            \n            \n                \ngetDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/data/src/connection.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHost\n                        \n                    \n                \n            \n            \n                \ngetHost()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/data/src/connection.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPassword\n                        \n                    \n                \n            \n            \n                \ngetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/data/src/connection.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPort\n                        \n                    \n                \n            \n            \n                \ngetPort()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/data/src/connection.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsername\n                        \n                    \n                \n            \n            \n                \ngetUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/data/src/connection.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class ConnectionService {\n  constructor(private readonly configService: ConfigService) {}\n\n  getHost(): string {\n    return this.configService.get('POSTGRES_HOST');\n  }\n\n  getPort(): number {\n    return this.configService.get('POSTGRES_PORT');\n  }\n\n  getUsername(): string {\n    return this.configService.get('POSTGRES_USER');\n  }\n\n  getPassword(): string {\n    return this.configService.get('POSTGRES_PASSWORD');\n  }\n\n  getDatabase(): string {\n    return this.configService.get('POSTGRES_DB');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConnectionService-1.html":{"url":"injectables/ConnectionService-1.html","title":"injectable - ConnectionService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConnectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/data/src/connection/connection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDatabase\n                            \n                            \n                                getHost\n                            \n                            \n                                getPassword\n                            \n                            \n                                getPort\n                            \n                            \n                                getUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in original/xxx/data/src/connection/connection.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabase\n                        \n                    \n                \n            \n            \n                \ngetDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/data/src/connection/connection.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHost\n                        \n                    \n                \n            \n            \n                \ngetHost()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/data/src/connection/connection.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPassword\n                        \n                    \n                \n            \n            \n                \ngetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/data/src/connection/connection.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPort\n                        \n                    \n                \n            \n            \n                \ngetPort()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/data/src/connection/connection.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsername\n                        \n                    \n                \n            \n            \n                \ngetUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/data/src/connection/connection.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class ConnectionService {\n  constructor(private readonly configService: ConfigService) {}\n\n  getHost(): string {\n    return this.configService.get('POSTGRES_HOST');\n  }\n\n  getPort(): number {\n    return this.configService.get('POSTGRES_PORT');\n  }\n\n  getUsername(): string {\n    return this.configService.get('POSTGRES_USER');\n  }\n\n  getPassword(): string {\n    return this.configService.get('POSTGRES_PASSWORD');\n  }\n\n  getDatabase(): string {\n    return this.configService.get('POSTGRES_DB');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Contact.html":{"url":"entities/Contact.html","title":"entity - Contact","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/account/contact.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                availableByEmail\n                            \n                            \n                                    \n                                    \n                                availableByPhone\n                            \n                            \n                                    \n                                    \n                                availableByText\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                textNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        availableByEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/contact.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        availableByPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/contact.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        availableByText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/contact.entity.ts:36\n                        \n                    \n\n            \n                \n                    CONTACT PREFERENCES\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')@ApiProperty({example: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/contact.entity.ts:18\n                        \n                    \n\n            \n                \n                    METADATA\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/contact.entity.ts:25\n                        \n                    \n\n            \n                \n                    CONTACT DETAILS\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        textNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/contact.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  // CreateDateColumn,\n  // UpdateDateColumn,\n  // OneToMany,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Contact {\n  /**\n   * METADATA\n   */\n  @PrimaryGeneratedColumn('uuid')\n  @ApiProperty({ example: 'id' })\n  id: string;\n\n  /**\n   * CONTACT DETAILS\n   */\n  @Column()\n  @ApiProperty()\n  phone?: string;\n\n  @Column()\n  @ApiProperty()\n  textNumber?: string;\n\n  /**\n   * CONTACT PREFERENCES\n   */\n  @Column()\n  @ApiProperty()\n  availableByText: boolean;\n\n  @Column()\n  @ApiProperty()\n  availableByPhone: boolean;\n\n  @Column()\n  @ApiProperty()\n  availableByEmail: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContactDetails.html":{"url":"classes/ContactDetails.html","title":"class - ContactDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContactDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/contact.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableByEmail\n                            \n                            \n                                availableByPhone\n                            \n                            \n                                availableByText\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                phone\n                            \n                            \n                                textNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        availableByEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/contact.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        availableByPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/contact.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        availableByText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/contact.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/contact.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/contact.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/contact.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/contact.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ContactDetails {\n  id: string;\n  phone: string;\n  textNumber: string;\n  email: string;\n  availableByPhone: boolean;\n  availableByText: boolean;\n  availableByEmail: boolean;\n}\n\nexport class BusinessContact {\n  bookingPhone: string;\n  bookingEmail: string;\n  registrationPhone: string;\n  registrationEmail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Content.html":{"url":"classes/Content.html","title":"class - Content","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Content\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/content/content.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            VersionedResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/content/content.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty({description: 'Content title.', example: 'Content'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/content/content.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { VersionedResource } from '../common/resource.entity';\nimport { User } from '../user/base.entity';\n\nexport class Content extends VersionedResource {\n  @Column()\n  @ApiProperty({\n    description: 'Content title.',\n    example: 'Content',\n  })\n  title: string;\n\n  // @ManyToOne(()=>User,user.createdContent)\n  // @ApiProperty({\n  //   description: 'Content author.',\n  //   example: 'Author',\n  // })\n  author: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContentController.html":{"url":"controllers/ContentController.html","title":"controller - ContentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/content/src/content.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/content/src/content.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ContentService } from './content.service';\n\n@Controller()\nexport class ContentController {\n  constructor(private readonly contentService: ContentService) {}\n\n  @Get()\n  getHello(): string {\n    return this.contentService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentModule.html":{"url":"modules/ContentModule.html","title":"module - ContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_providers\n\n\n\n\nContentService\n\nContentService\n\n\n\nContentModule\n\nContentModule\n\nContentModule -->\n\nContentService->ContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/content/src/content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ContentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ContentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ContentController } from './content.controller';\nimport { ContentService } from './content.service';\n\n@Module({\n  imports: [],\n  controllers: [ContentController],\n  providers: [ContentService],\n})\nexport class ContentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContentService.html":{"url":"injectables/ContentService.html","title":"injectable - ContentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/content/src/content.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/content/src/content.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ContentService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoreAuthService.html":{"url":"injectables/CoreAuthService.html","title":"injectable - CoreAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CoreAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/core.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateAccessToken\n                            \n                            \n                                    Private\n                                generateRefreshToken\n                            \n                            \n                                    Private\n                                hashPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Private\n                                    Async\n                                retrieveUser\n                            \n                            \n                                    Async\n                                test\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageBroker: ClientProxy, accountService: AccountService, credentialsService: CredentialsService, sessionsService: SessionsService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/core.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageBroker\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        credentialsService\n                                                  \n                                                        \n                                                                        CredentialsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessionsService\n                                                  \n                                                        \n                                                                        SessionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAccessToken()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/core.service.ts:103\n                        \n                    \n\n\n            \n                \n                        PRIVATE METHOD - Access Token\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateRefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/core.service.ts:111\n                        \n                    \n\n\n            \n                \n                        PRIVATE METHOD - Refresh Token\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/core.service.ts:169\n                        \n                    \n\n\n            \n                \n                        PRIVATE METHOD - Hash Passowrd\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/core.service.ts:41\n                        \n                    \n\n\n            \n                \n                        METHOD - Login\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(undefined: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/core.service.ts:75\n                        \n                    \n\n\n            \n                \n                        METHOD - Register\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/core.service.ts:119\n                        \n                    \n\n\n            \n                \n                        METHOD - Reset Password\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        retrieveUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    retrieveUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/core.service.ts:154\n                        \n                    \n\n\n            \n                \n                        PRIVATE METHOD - Retrieve User\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        test\n                        \n                    \n                \n            \n            \n                \n                        \n                    test()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/core.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/core.service.ts:129\n                        \n                    \n\n\n            \n                \n                        METHOD - Validate Password\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt';\nimport {\n  ConflictException,\n  Inject,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { firstValueFrom } from 'rxjs';\nimport { LoginDto, LoginType, RegisterDto } from './dto';\nimport { User } from '@app/data/entities/user';\nimport { CreateUserDto } from '@app/data/dto';\nimport { MESSAGE_BROKER } from '@app/constants';\nimport { CredentialsService } from './services/credentials.service';\nimport { SessionsService } from './services/sessions.service';\nimport { AccountService } from './services/account.service';\n\n@Injectable()\nexport class CoreAuthService {\n  constructor(\n    @Inject(MESSAGE_BROKER)\n    private readonly messageBroker: ClientProxy,\n\n    private readonly accountService: AccountService,\n    private readonly credentialsService: CredentialsService,\n    private readonly sessionsService: SessionsService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async test() {\n    return this.accountService.test();\n  }\n  /**\n   * METHOD - Login\n   *\n   *\n   *\n   */\n  async login(loginDto: LoginDto) {\n    switch (loginDto.type) {\n      case LoginType.USERNAME:\n        // Validate Login\n        const credentials = await this.validate(\n          loginDto.username,\n          loginDto.password,\n        );\n\n        // Return User Credentials\n        const user = await this.retrieveUser(credentials.id);\n\n        // Sign JWT\n        const payload = { sub: user.id, username: user.username };\n        const access_token = await this.jwtService.signAsync(payload);\n\n        // Return JWT, User\n        return { access_token, user };\n        break;\n      case LoginType.EMAIL:\n        break;\n      case LoginType.GOOGLE:\n        break;\n      default:\n        throw new UnauthorizedException();\n    }\n  }\n\n  /**\n   * METHOD - Register\n   *\n   *\n   *\n   */\n  async register({ username, password, firstName, lastName }: RegisterDto) {\n    const ob$ = this.messageBroker.send(\n      { cmd: 'get-user-by-username' },\n      username,\n    );\n\n    const user = await firstValueFrom(ob$).catch((err) => console.log(err));\n    if (user) throw new ConflictException('User already exists.');\n\n    const hashedPassword = await this.hashPassword(password);\n\n    return this.messageBroker.send(\n      { cmd: 'create-user' },\n      {\n        firstName,\n        lastName,\n        username,\n        password: hashedPassword,\n      },\n    );\n  }\n\n  /**\n   * PRIVATE METHOD - Access Token\n   *\n   *\n   *\n   */\n  private generateAccessToken() {}\n\n  /**\n   * PRIVATE METHOD - Refresh Token\n   *\n   *\n   *\n   */\n  private generateRefreshToken() {}\n\n  /**\n   * METHOD - Reset Password\n   *\n   *\n   *\n   */\n  async resetPassword(username: string) {\n    return `Update password for: ${username}`;\n  }\n\n  /**\n   * METHOD - Validate Password\n   *\n   *\n   *\n   */\n  async validate(username: string, password: string) {\n    // Send message for user: id, password\n    const ob$ = this.messageBroker.send>(\n      { cmd: 'get-user-password' },\n      username,\n    );\n\n    // Check for user result\n    const user = await firstValueFrom(ob$).catch((err) => console.log(err));\n    if (!user) throw new UnauthorizedException('Username Invalid');\n\n    // Validate password\n    const validLogin = await bcrypt.compare(password, user.password);\n    if (!validLogin) throw new UnauthorizedException('Password is incorrect.');\n\n    // Return {id, password}\n    return user;\n  }\n\n  /**\n   * PRIVATE METHOD - Retrieve User\n   *\n   *\n   *\n   */\n  private async retrieveUser(id: string) {\n    const ob$ = this.messageBroker.send({ cmd: 'get-user' }, id);\n\n    const user = await firstValueFrom(ob$).catch((err) => console.log(err));\n    if (!user) throw new NotFoundException('Error retrieving user');\n\n    return user;\n  }\n\n  /**\n   * PRIVATE METHOD - Hash Passowrd\n   *\n   *\n   *\n   */\n  private hashPassword(password: string) {\n    return bcrypt.hash(password, 12);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBandDto.html":{"url":"classes/CreateBandDto.html","title":"class - CreateBandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/bands/create-band.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateBandDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEventDto.html":{"url":"classes/CreateEventDto.html","title":"class - CreateEventDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEventDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/events/create-event.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateEventDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLocationDto.html":{"url":"classes/CreateLocationDto.html","title":"class - CreateLocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/locations/create-location.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateLocationDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMusicianDto.html":{"url":"classes/CreateMusicianDto.html","title":"class - CreateMusicianDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMusicianDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/musicians/create-musician.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMusicianDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNetworkDto.html":{"url":"classes/CreateNetworkDto.html","title":"class - CreateNetworkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNetworkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/networks/create-network.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateNetworkDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrganizerDto.html":{"url":"classes/CreateOrganizerDto.html","title":"class - CreateOrganizerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrganizerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/organizers/create-organizer.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOrganizerDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/users/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, default: undefined, type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/dto/users/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/dto/users/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/dto/users/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/dto/users/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { exampleUser } from '../../examples/user.example';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    example: exampleUser.firstName,\n    default: exampleUser.firstName,\n    type: 'string',\n  })\n  firstName: string;\n\n  @ApiProperty({ example: exampleUser.lastName })\n  lastName: string;\n\n  @ApiProperty({ example: exampleUser.username })\n  username: string;\n\n  @ApiProperty({ example: 'password' })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto-1.html":{"url":"classes/CreateUserDto-1.html","title":"class - CreateUserDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/data/src/dto/user/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateVenueDto.html":{"url":"classes/CreateVenueDto.html","title":"class - CreateVenueDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateVenueDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/venues/create-venue.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateVenueDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Credentials.html":{"url":"entities/Credentials.html","title":"entity - Credentials","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/entities/credentials.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                accessToken\n                            \n                            \n                                    \n                                account\n                            \n                            \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    Optional\n                                expiresAt\n                            \n                            \n                                    \n                                    Optional\n                                idToken\n                            \n                            \n                                    \n                                    Optional\n                                oauthToken\n                            \n                            \n                                    \n                                    Optional\n                                oauthTokenSecret\n                            \n                            \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                provider\n                            \n                            \n                                    \n                                providerAccountId\n                            \n                            \n                                    \n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                    Optional\n                                refreshTokenExpiresIn\n                            \n                            \n                                    \n                                    Optional\n                                scope\n                            \n                            \n                                    \n                                    Optional\n                                sessionState\n                            \n                            \n                                    \n                                    Optional\n                                tokenType\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthAccount\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.credentials, {orphanedRowAction: 'delete'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:29\n                        \n                    \n\n            \n                \n                    USER INFO\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        idToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        oauthToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        oauthTokenSecret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CredentialsProvider\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: CredentialsProvider})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        providerAccountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        refreshTokenExpiresIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sessionState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        tokenType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TokenType})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CredentialsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: CredentialsType})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:35\n                        \n                    \n\n            \n                \n                    JWT\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:65\n                        \n                    \n\n            \n                \n                    TODO: Abstract these to below classes\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ManyToOne } from 'typeorm';\nimport { AuthAccount } from './account.entity';\nimport { AuthMetadata } from './common.entity';\n\nexport enum CredentialsType {\n  USERNAME = 'USERNAME',\n  EMAIL = 'EMAIL',\n  OIDC = 'OIDC',\n  OAUTH = 'OAUTH',\n}\n\nexport enum CredentialsProvider {\n  PASSWORD = 'PASSWORD',\n  GOOGLE = 'GOOGLE',\n}\n\nexport enum TokenType {\n  BEARER = 'BEARER',\n}\n\n@Entity()\nexport class Credentials extends AuthMetadata {\n  /**\n   * USER INFO\n   */\n  @ManyToOne(() => AuthAccount, (user) => user.credentials, {\n    orphanedRowAction: 'delete',\n  })\n  account: AuthAccount;\n\n  /**\n   * JWT\n   */\n  @Column({ type: 'enum', enum: CredentialsType })\n  type: CredentialsType;\n\n  @Column()\n  accessToken?: string;\n\n  @Column()\n  expiresAt?: number;\n\n  @Column()\n  refreshToken?: string;\n\n  @Column()\n  refreshTokenExpiresIn?: number;\n\n  @Column({ type: 'enum', enum: TokenType })\n  tokenType?: string;\n\n  @Column()\n  scope?: string;\n\n  @Column()\n  idToken?: string;\n\n  @Column()\n  sessionState?: string;\n\n  /**\n   * TODO: Abstract these to below classes\n   */\n  @Column({ unique: true })\n  username?: string;\n\n  @Column({ unique: true, nullable: true })\n  email?: string;\n\n  @Column()\n  password?: string;\n\n  @Column({ type: 'enum', enum: CredentialsProvider })\n  provider: CredentialsProvider;\n\n  @Column()\n  providerAccountId: string;\n\n  @Column()\n  oauthTokenSecret?: string;\n\n  @Column()\n  oauthToken?: string;\n}\n\nexport class PasswordCredentials extends Credentials {\n  @Column({ unique: true })\n  username?: string;\n\n  @Column({ unique: true, nullable: true })\n  email?: string;\n\n  @Column()\n  password?: string;\n}\n\nexport class OAuthCredentials extends Credentials {\n  @Column({ type: 'enum', enum: CredentialsProvider })\n  provider: CredentialsProvider;\n\n  @Column()\n  providerAccountId: string;\n\n  @Column()\n  oauthTokenSecret?: string;\n\n  @Column()\n  oauthToken?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CredentialsService.html":{"url":"injectables/CredentialsService.html","title":"injectable - CredentialsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CredentialsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/services/credentials.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CredentialsService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailLoginDto.html":{"url":"classes/EmailLoginDto.html","title":"class - EmailLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/dto/login.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PasswordLogin\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/dto/login.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginType.EMAIL\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/dto/login.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PasswordLogin\n\n                            \n                        \n                    \n                        \n                                Defined in         PasswordLogin:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { exampleUser } from '@app/data/examples/user.example';\n\nexport enum LoginType {\n  USERNAME = 'USERNAME',\n  EMAIL = 'EMAIL',\n  GOOGLE = 'GOOGLE',\n}\n\ninterface LoginBase {\n  type: LoginType;\n}\n\nabstract class PasswordLogin {\n  @ApiProperty({ example: 'password' })\n  password: string;\n}\n\nexport class UsernameLoginDto extends PasswordLogin implements LoginBase {\n  @ApiProperty({ example: LoginType.USERNAME })\n  type: LoginType.USERNAME;\n\n  @ApiProperty({ example: exampleUser.username })\n  username: string;\n}\n\nexport class EmailLoginDto extends PasswordLogin {\n  @ApiProperty({ example: LoginType.EMAIL })\n  type: LoginType.EMAIL;\n\n  @ApiProperty({ example: exampleUser.username })\n  email: string;\n}\n\nexport class GoogleLoginDto implements LoginBase {\n  @ApiProperty({ example: LoginType.GOOGLE })\n  type: LoginType.GOOGLE;\n\n  @ApiProperty()\n  clientId: string;\n\n  @ApiProperty()\n  clientSecret: string;\n}\n\nexport type LoginDto = UsernameLoginDto | EmailLoginDto | GoogleLoginDto;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Event.html":{"url":"classes/Event.html","title":"class - Event","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/event.ts\n        \n\n\n            \n                Description\n            \n            \n                EVENT\n\n            \n\n            \n                Extends\n            \n            \n                            VersionedResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admins\n                            \n                            \n                                ageRestriction\n                            \n                            \n                                bands\n                            \n                            \n                                createdBy\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                editors\n                            \n                            \n                                genres\n                            \n                            \n                                    Optional\n                                imageUrl\n                            \n                            \n                                isChildFriendly\n                            \n                            \n                                isFree\n                            \n                            \n                                isHoliday\n                            \n                            \n                                isPrivate\n                            \n                            \n                                keywords\n                            \n                            \n                                lastUpdatedBy\n                            \n                            \n                                    Optional\n                                minimumAge\n                            \n                            \n                                musicians\n                            \n                            \n                                    Optional\n                                organizer\n                            \n                            \n                                    Optional\n                                registrationLink\n                            \n                            \n                                requiresRegistration\n                            \n                            \n                                requiresTicket\n                            \n                            \n                                servesAlcohol\n                            \n                            \n                                servesFood\n                            \n                            \n                                stage\n                            \n                            \n                                    Optional\n                                timeDoor\n                            \n                            \n                                    Optional\n                                timeEnd\n                            \n                            \n                                timeStart\n                            \n                            \n                                title\n                            \n                            \n                                venue\n                            \n                            \n                                viewers\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        admins\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ageRestriction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bands\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Band[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Genre[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChildFriendly\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHoliday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPrivate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keywords\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventKeyword[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        minimumAge\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        musicians\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Musician[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organizer\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        registrationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requiresRegistration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requiresTicket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        servesAlcohol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        servesFood\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Stage\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        timeDoor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        timeEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        venue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Venue\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/event.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType, OmitType, PickType } from '@nestjs/mapped-types';\nimport { Band, Musician, Organizer, Stage, Venue } from './account';\nimport { EventKeyword, Genre, VersionedResource } from './common';\nimport { User } from './user';\n\nexport enum EventType {\n  AMBIENT,\n  OPEN_MIC,\n  JAM_SESSION,\n  MEETUP,\n}\n\nexport enum EventStatus {\n  CANCELLED,\n  POSTPONED,\n  SCHEDULED,\n  RESCHEDULED,\n  UNSCHEDULED,\n}\n\n/**\n * EVENT\n *\n *\n *\n */\nexport class Event extends VersionedResource {\n  /* METADATA */\n  createdBy: User;\n  lastUpdatedBy: User;\n\n  /* PRIVILEGES */\n  admins: User[];\n  editors: User[];\n  viewers: User[];\n\n  /* BASIC INFO */\n  title: string;\n  description?: string;\n  imageUrl?: string;\n\n  /* TAGS */\n  genres: Genre[];\n  keywords: EventKeyword[];\n\n  /* DATE TIME INFO */\n  timeDoor?: Date;\n  timeStart: Date;\n  timeEnd?: Date;\n\n  /* EVENT DETAILS */\n  isPrivate: boolean;\n  isFree: boolean;\n  isChildFriendly: boolean;\n  isHoliday: boolean;\n  ageRestriction: boolean;\n  minimumAge?: number;\n  servesAlcohol: boolean;\n  servesFood: boolean;\n  requiresRegistration: boolean;\n  registrationLink?: string;\n  requiresTicket: boolean;\n\n  /* EVENT LOCATION */\n  venue: Venue;\n  stage: Stage;\n\n  /* EVENT PARTICIPANTS */\n  musicians: Musician[];\n  bands: Band[];\n  organizer?: Organizer;\n}\n\n/**\n * PUBLISHED EVENT\n *\n *\n *\n */\nexport class PublishedEvent extends Event {\n  /* PUBLISHED SPECIFIC */\n  status: EventStatus;\n  timeStartPrevious?: Date;\n  ticketLinks?: string[];\n\n  /* EVENT AUDIENCE */\n  bookmarkedBy: User[];\n  registeredUsers: User[];\n}\n\n/**\n * EVENT DRAFT\n *\n *\n *\n */\nexport class EventDraft extends PartialType(\n  OmitType(PublishedEvent, [\n    'bookmarkedBy',\n    'timeStartPrevious',\n    'registeredUsers',\n    'status',\n  ]),\n) {}\n\n/**\n * EVENT TEMPLATE\n *\n *\n *\n */\nexport class EventTemplate extends PartialType(Event) {\n  templateName: string;\n  templateDescription?: string;\n  duration?: number;\n}\n\n/**\n * PAST EVENT\n *\n *\n *\n */\nexport class PastEvent extends PickType(PublishedEvent, [\n  'admins',\n  'bands',\n  'bookmarkedBy',\n  'createdAt',\n  'createdBy',\n  'description',\n  'genres',\n  'id',\n  'imageUrl',\n  'keywords',\n  'musicians',\n  'organizer',\n  'stage',\n  'timeStart',\n  'title',\n  'venue',\n]) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventDraft.html":{"url":"classes/EventDraft.html","title":"class - EventDraft","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventDraft\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/event.ts\n        \n\n\n            \n                Description\n            \n            \n                EVENT DRAFT\n\n            \n\n            \n                Extends\n            \n            \n                            PartialType(\n  OmitType(PublishedEvent, [\n    'bookmarkedBy',\n    'timeStartPrevious',\n    'registeredUsers',\n    'status',\n  ]),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType, OmitType, PickType } from '@nestjs/mapped-types';\nimport { Band, Musician, Organizer, Stage, Venue } from './account';\nimport { EventKeyword, Genre, VersionedResource } from './common';\nimport { User } from './user';\n\nexport enum EventType {\n  AMBIENT,\n  OPEN_MIC,\n  JAM_SESSION,\n  MEETUP,\n}\n\nexport enum EventStatus {\n  CANCELLED,\n  POSTPONED,\n  SCHEDULED,\n  RESCHEDULED,\n  UNSCHEDULED,\n}\n\n/**\n * EVENT\n *\n *\n *\n */\nexport class Event extends VersionedResource {\n  /* METADATA */\n  createdBy: User;\n  lastUpdatedBy: User;\n\n  /* PRIVILEGES */\n  admins: User[];\n  editors: User[];\n  viewers: User[];\n\n  /* BASIC INFO */\n  title: string;\n  description?: string;\n  imageUrl?: string;\n\n  /* TAGS */\n  genres: Genre[];\n  keywords: EventKeyword[];\n\n  /* DATE TIME INFO */\n  timeDoor?: Date;\n  timeStart: Date;\n  timeEnd?: Date;\n\n  /* EVENT DETAILS */\n  isPrivate: boolean;\n  isFree: boolean;\n  isChildFriendly: boolean;\n  isHoliday: boolean;\n  ageRestriction: boolean;\n  minimumAge?: number;\n  servesAlcohol: boolean;\n  servesFood: boolean;\n  requiresRegistration: boolean;\n  registrationLink?: string;\n  requiresTicket: boolean;\n\n  /* EVENT LOCATION */\n  venue: Venue;\n  stage: Stage;\n\n  /* EVENT PARTICIPANTS */\n  musicians: Musician[];\n  bands: Band[];\n  organizer?: Organizer;\n}\n\n/**\n * PUBLISHED EVENT\n *\n *\n *\n */\nexport class PublishedEvent extends Event {\n  /* PUBLISHED SPECIFIC */\n  status: EventStatus;\n  timeStartPrevious?: Date;\n  ticketLinks?: string[];\n\n  /* EVENT AUDIENCE */\n  bookmarkedBy: User[];\n  registeredUsers: User[];\n}\n\n/**\n * EVENT DRAFT\n *\n *\n *\n */\nexport class EventDraft extends PartialType(\n  OmitType(PublishedEvent, [\n    'bookmarkedBy',\n    'timeStartPrevious',\n    'registeredUsers',\n    'status',\n  ]),\n) {}\n\n/**\n * EVENT TEMPLATE\n *\n *\n *\n */\nexport class EventTemplate extends PartialType(Event) {\n  templateName: string;\n  templateDescription?: string;\n  duration?: number;\n}\n\n/**\n * PAST EVENT\n *\n *\n *\n */\nexport class PastEvent extends PickType(PublishedEvent, [\n  'admins',\n  'bands',\n  'bookmarkedBy',\n  'createdAt',\n  'createdBy',\n  'description',\n  'genres',\n  'id',\n  'imageUrl',\n  'keywords',\n  'musicians',\n  'organizer',\n  'stage',\n  'timeStart',\n  'title',\n  'venue',\n]) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventDraft-1.html":{"url":"classes/EventDraft-1.html","title":"class - EventDraft-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventDraft\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/event/draft.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  OmitType(PublishedEvent, [\n    'bookmarkedBy',\n    'registeredUsers',\n    'status',\n    'timeStartPrevious',\n  ]),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bands\n                            \n                            \n                                    \n                                genres\n                            \n                            \n                                    \n                                keywords\n                            \n                            \n                                musicians\n                            \n                            \n                                    Optional\n                                organizer\n                            \n                            \n                                    Optional\n                                stage\n                            \n                            \n                                    Optional\n                                venue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bands\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Band[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/draft.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Genre[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, genre => genre.eventDrafts)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/draft.entity.ts:25\n                        \n                    \n\n            \n                \n                    TAGS\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        keywords\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventKeyword[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, keyword => keyword.eventDrafts)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/draft.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        musicians\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Musician[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/draft.entity.ts:43\n                        \n                    \n\n            \n                \n                    EVENT PARTICIPANTS\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organizer\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/draft.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        stage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Stage\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/draft.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        venue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Venue\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/draft.entity.ts:34\n                        \n                    \n\n            \n                \n                    EVENT LOCATION\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ManyToMany } from 'typeorm';\n// import { ApiProperty } from '@nestjs/swagger';\nimport { PartialType, OmitType } from '@nestjs/mapped-types';\nimport { Musician } from '../account/musician.entity';\nimport { Band } from '../account/band.entity';\nimport { Venue } from '../account/venue.entity';\nimport { Organizer } from '../account/organizer.entity';\nimport { Stage } from '../account/stage.entity';\nimport { PublishedEvent } from './published.entity';\nimport { EventKeyword } from '../tags/event-keyword.entity';\nimport { Genre } from '../tags/genre.entity';\n\nexport class EventDraft extends PartialType(\n  OmitType(PublishedEvent, [\n    'bookmarkedBy',\n    'registeredUsers',\n    'status',\n    'timeStartPrevious',\n  ]),\n) {\n  /**\n   * TAGS\n   */\n  @ManyToMany(() => Genre, (genre) => genre.eventDrafts)\n  genres: Genre[];\n\n  @ManyToMany(() => EventKeyword, (keyword) => keyword.eventDrafts)\n  keywords: EventKeyword[];\n\n  /**\n   * EVENT LOCATION\n   */\n  // @ManyToOne(() => Venue)\n  venue?: Venue;\n\n  // @ManyToOne(() => Stage)\n  stage?: Stage;\n\n  /**\n   * EVENT PARTICIPANTS\n   */\n  // @ManyToMany(() => Musician)\n  musicians: Musician[];\n\n  // @ManyToMany(() => Band)\n  bands: Band[];\n\n  // @ManyToOne(() => Organizer)\n  organizer?: Organizer;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/EventKeyword.html":{"url":"entities/EventKeyword.html","title":"entity - EventKeyword","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  EventKeyword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/tags/event-keyword.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                eventDrafts\n                            \n                            \n                                    \n                                eventTemplates\n                            \n                            \n                                    \n                                publishedEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        eventDrafts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventDraft[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, event => event.keywords)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/tags/event-keyword.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        eventTemplates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventTemplate[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, event => event.keywords)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/tags/event-keyword.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        publishedEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PublishedEvent[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, event => event.keywords)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/tags/event-keyword.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, ManyToMany } from 'typeorm';\nimport { PublishedEvent } from '../event/published.entity';\nimport { EventTemplate } from '../event/template.entity';\nimport { EventDraft } from '../event/draft.entity';\nimport { Tag } from '../common/tag.entity';\n\n@Entity()\nexport class EventKeyword extends Tag {\n  @ManyToMany(() => PublishedEvent, (event) => event.keywords)\n  publishedEvents: PublishedEvent[];\n\n  @ManyToMany(() => EventDraft, (event) => event.keywords)\n  eventDrafts: EventDraft[];\n\n  @ManyToMany(() => EventTemplate, (event) => event.keywords)\n  eventTemplates: EventTemplate[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventReview.html":{"url":"classes/EventReview.html","title":"class - EventReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Review\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                reviewType\n                            \n                            \n                                agrees\n                            \n                            \n                                disagrees\n                            \n                            \n                                author\n                            \n                            \n                                comments\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                shares\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        event\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Event\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reviewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReviewType\n\n                    \n                \n                \n                    \n                        Default value : ReviewType.EVENT\n                    \n                \n                        \n                            \n                                Inherited from         Review\n\n                            \n                        \n                    \n                        \n                                Defined in         Review:96\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agrees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Opinion\n\n                            \n                        \n                    \n                        \n                                Defined in         Opinion:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disagrees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Opinion\n\n                            \n                        \n                    \n                        \n                                Defined in         Opinion:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/EventTemplate.html":{"url":"entities/EventTemplate.html","title":"entity - EventTemplate","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  EventTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/event/template.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                bands\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                duration\n                            \n                            \n                                    \n                                genres\n                            \n                            \n                                    \n                                keywords\n                            \n                            \n                                    \n                                musicians\n                            \n                            \n                                    \n                                    Optional\n                                organizer\n                            \n                            \n                                    \n                                    Optional\n                                stage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                templateDescription\n                            \n                            \n                                    \n                                    \n                                templateName\n                            \n                            \n                                    \n                                    Optional\n                                venue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bands\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Band[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/template.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty({description: 'Duration of event in minutes.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/template.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Genre[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, genre => genre.eventTemplates)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/template.entity.ts:19\n                        \n                    \n\n            \n                \n                    TAGS\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        keywords\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventKeyword[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, keyword => keyword.eventTemplates)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/template.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        musicians\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Musician[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/template.entity.ts:52\n                        \n                    \n\n            \n                \n                    EVENT PARTICIPANTS\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organizer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/template.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        stage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Stage\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/template.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        templateDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/template.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        templateName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/template.entity.ts:29\n                        \n                    \n\n            \n                \n                    TEMPLATE SPECIFIC\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        venue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Venue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/template.entity.ts:43\n                        \n                    \n\n            \n                \n                    EVENT LOCATION\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, ManyToMany, ManyToOne } from 'typeorm';\nimport { PartialType } from '@nestjs/mapped-types';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Musician } from '../account/musician.entity';\nimport { Band } from '../account/band.entity';\nimport { Venue } from '../account/venue.entity';\nimport { Organizer } from '../account/organizer.entity';\nimport { Stage } from '../account/stage.entity';\nimport { Genre } from '../tags/genre.entity';\nimport { EventKeyword } from '../tags/event-keyword.entity';\nimport { BaseEvent } from './base.entity';\n\n@Entity()\nexport class EventTemplate extends PartialType(BaseEvent) {\n  /**\n   * TAGS\n   */\n  @ManyToMany(() => Genre, (genre) => genre.eventTemplates)\n  genres: Genre[];\n\n  @ManyToMany(() => EventKeyword, (keyword) => keyword.eventTemplates)\n  keywords: EventKeyword[];\n\n  /**\n   * TEMPLATE SPECIFIC\n   */\n  @Column()\n  @ApiProperty()\n  templateName: string;\n\n  @Column()\n  @ApiProperty()\n  templateDescription?: string;\n\n  @Column()\n  @ApiProperty({ description: 'Duration of event in minutes.' })\n  duration?: number;\n\n  /**\n   * EVENT LOCATION\n   */\n  @ManyToOne(() => Venue)\n  venue?: Venue;\n\n  @ManyToOne(() => Stage)\n  stage?: Stage;\n\n  /**\n   * EVENT PARTICIPANTS\n   */\n  @ManyToMany(() => Musician)\n  musicians: Musician[];\n\n  @ManyToMany(() => Band)\n  bands: Band[];\n\n  @ManyToOne(() => Organizer)\n  organizer?: Organizer;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EventsController.html":{"url":"controllers/EventsController.html","title":"controller - EventsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EventsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/core/event/src/events.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/core/event/src/events.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { EventsService } from './events.service';\n\n@Controller()\nexport class EventsController {\n  constructor(private readonly eventsService: EventsService) {}\n\n  @Get()\n  getHello(): string {\n    return this.eventsService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EventsController-1.html":{"url":"controllers/EventsController-1.html","title":"controller - EventsController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EventsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/gateways/rest/src/controllers/events.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                events\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createEventDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/events.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEventDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/events.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/events.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/events.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateEventDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/events.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEventDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\n\n@Controller('events')\nexport class EventsController {\n  constructor() {}\n\n  @Post()\n  create(@Body() createEventDto: any) {\n    return `This creates a Event with shape: ${createEventDto}`;\n  }\n\n  @Get()\n  findAll() {\n    return 'This finds all Events';\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return `This finds a single Event with id: ${id}`;\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateEventDto: any) {\n    return `This updates a single Event with id: ${id}, and data: ${updateEventDto}`;\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return `This deletes Event with id: ${id}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventsGateway.html":{"url":"classes/EventsGateway.html","title":"class - EventsGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventsGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ws/src/gateways/events/events.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayConnection\n                        OnGatewayDisconnect\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleConnection\n                            \n                            \n                                    Async\n                                handleDisconnect\n                            \n                            \n                                    \n                                handleEvent\n                            \n                            \n                                    \n                                    Async\n                                identity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventsService)\n                    \n                \n                        \n                            \n                                Defined in apps/ws/src/gateways/events/events.gateway.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/ws/src/gateways/events/events.gateway.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleConnection(socket: Socket)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ws/src/gateways/events/events.gateway.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                socket\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleDisconnect(socket: Socket)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ws/src/gateways/events/events.gateway.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                socket\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEvent(data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('events')\n                \n            \n\n                    \n                        \n                            Defined in apps/ws/src/gateways/events/events.gateway.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        identity\n                        \n                    \n                \n            \n            \n                \n                        \n                    identity(data: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('identity')\n                \n            \n\n                    \n                        \n                            Defined in apps/ws/src/gateways/events/events.gateway.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  WebSocketGateway,\n  SubscribeMessage,\n  MessageBody,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { Server, Socket } from 'socket.io';\nimport { EventsService } from './events.service';\nimport { gatewayOptions } from '../gateway.options';\nimport { WS_NAMESPACES } from '@app/ws/constants';\n\n@WebSocketGateway({\n  namespace: WS_NAMESPACES.EVENTS,\n  ...gatewayOptions,\n})\nexport class EventsGateway implements OnGatewayConnection, OnGatewayDisconnect {\n  @WebSocketServer()\n  server: Server;\n\n  constructor(private readonly eventService: EventsService) {}\n\n  async handleConnection(@MessageBody() socket: Socket) {\n    return this.eventService.handleConnection(socket);\n  }\n\n  async handleDisconnect(socket: Socket) {\n    return console.log(`Socket: ${socket.id} disconnecting.`);\n  }\n\n  @SubscribeMessage('events')\n  handleEvent(@MessageBody() data: any) {\n    console.log('message received');\n    console.log(data);\n  }\n\n  @SubscribeMessage('identity')\n  async identity(@MessageBody() data: number): Promise {\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_providers\n\n\n\n\nEventsService\n\nEventsService\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nEventsService->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/resources/events/events.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EventsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EventsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { PublishedEvent } from '@app/data/entities/event';\nimport { EventsService } from './events.service';\nimport { EventsController } from './events.controller';\nimport { MESSAGE_BROKER } from '@app/constants';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: MESSAGE_BROKER,\n        transport: Transport.TCP,\n      },\n    ]),\n    TypeOrmModule.forFeature([PublishedEvent]),\n  ],\n  controllers: [EventsController],\n  providers: [EventsService],\n})\nexport class EventsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService.html":{"url":"injectables/EventsService.html","title":"injectable - EventsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/resources/events/events.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageBroker: ClientProxy, eventsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/resources/events/events.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageBroker\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createEventDto: CreateEventDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/events/events.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEventDto\n                                            \n                                                            CreateEventDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/events/events.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/events/events.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/events/events.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateEventDto: UpdateEventDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/events/events.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEventDto\n                                            \n                                                            UpdateEventDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ClientProxy } from '@nestjs/microservices';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateEventDto, UpdateEventDto } from '@app/data/dto';\nimport { PublishedEvent } from '@app/data/entities/event';\nimport { MESSAGE_BROKER } from '@app/constants';\n\n@Injectable()\nexport class EventsService {\n  constructor(\n    @Inject(MESSAGE_BROKER)\n    private readonly messageBroker: ClientProxy,\n\n    @InjectRepository(PublishedEvent)\n    private eventsRepository: Repository,\n  ) {}\n\n  create(createEventDto: CreateEventDto) {\n    return 'This action adds a new event';\n  }\n\n  findAll(): Promise {\n    return this.eventsRepository.find();\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} event`;\n  }\n\n  update(id: number, updateEventDto: UpdateEventDto) {\n    return `This action updates a #${id} event`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} event`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService-1.html":{"url":"injectables/EventsService-1.html","title":"injectable - EventsService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ws/src/gateways/events/events.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleConnection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleConnection\n                        \n                    \n                \n            \n            \n                \nhandleConnection(socket: Socket)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ws/src/gateways/events/events.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                socket\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Socket } from 'socket.io';\n\n@Injectable()\nexport class EventsService {\n  handleConnection(socket: Socket) {\n    console.log(`Socket ${socket.id} connected.`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService-2.html":{"url":"injectables/EventsService-2.html","title":"injectable - EventsService-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/core/event/src/events.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/apps/core/event/src/events.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class EventsService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExternalAuthService.html":{"url":"injectables/ExternalAuthService.html","title":"injectable - ExternalAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExternalAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/services/external.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                verifyExternalLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/services/external.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyExternalLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyExternalLogin(externalProvider: string, externalAccessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/services/external.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                externalProvider\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                externalAccessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ExternalAuthService {\n  constructor() {}\n\n  async verifyExternalLogin(\n    externalProvider: string,\n    externalAccessToken: string,\n  ) {\n    return { id: 'id', externalProvider, externalAccessToken };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindAllOptions.html":{"url":"interfaces/FindAllOptions.html","title":"interface - FindAllOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindAllOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/decorators/src/resource/find-all.decorator.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Omit\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { applyDecorators } from '@nestjs/common';\nimport { Get } from '@nestjs/common';\nimport { ApiOkResponse, ApiResponseMetadata } from '@nestjs/swagger';\n\ninterface FindAllOptions extends Omit {\n  path?: string;\n}\n\nexport function FindAll({ path = '', ...apiMetadata }: FindAllOptions) {\n  return applyDecorators(\n    Get(path),\n    ApiOkResponse({ isArray: true, ...apiMetadata }),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindOneOptions.html":{"url":"interfaces/FindOneOptions.html","title":"interface - FindOneOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindOneOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/decorators/src/resource/find-one.decorator.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Omit\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotFoundException, applyDecorators } from '@nestjs/common';\nimport { Get } from '@nestjs/common';\nimport {\n  ApiOkResponse,\n  ApiNotFoundResponse,\n  ApiResponseMetadata,\n} from '@nestjs/swagger';\n\ninterface FindOneOptions extends Omit {\n  path?: string;\n}\n\nexport function FindOne({ path = ':id', ...apiMetadata }: FindOneOptions) {\n  return applyDecorators(\n    Get(path),\n    ApiOkResponse(apiMetadata),\n    ApiNotFoundResponse({ type: NotFoundException, description: 'Not Found.' }),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlaggedComment.html":{"url":"classes/FlaggedComment.html","title":"class - FlaggedComment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlaggedComment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/moderation.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FlaggedItem\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                actionsTaken\n                            \n                            \n                                assignedToModerator\n                            \n                            \n                                assignedToModeratorAt\n                            \n                            \n                                flaggedAt\n                            \n                            \n                                flaggedBy\n                            \n                            \n                                flagType\n                            \n                            \n                                id\n                            \n                            \n                                moderatorReceived\n                            \n                            \n                                moderatorReceivedAt\n                            \n                            \n                                reason\n                            \n                            \n                                resolved\n                            \n                            \n                                resolvedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionsTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModerationAction[]\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        assignedToModerator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        assignedToModeratorAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flaggedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flaggedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flagType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FlagType\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moderatorReceived\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moderatorReceivedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolvedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:34\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Comment, Post } from './content';\nimport { Event } from './event';\nimport { User } from './user';\n\n/**\n *\n *\n *\n *\n */\nexport enum FlagType {\n  HATE_SPEECH,\n  DISCRIMINATION,\n  HARASSMENT,\n  THREATS,\n  SPAM,\n  MISINFORMATION,\n  ILLEGAL_CONTENT,\n  COPYRIGHT,\n  SEXUAL,\n  OTHER,\n}\nexport abstract class FlaggedItem {\n  id: string;\n  flaggedAt: Date;\n  flaggedBy: User;\n  flagType: FlagType;\n  reason: string;\n  assignedToModerator: User;\n  assignedToModeratorAt: Date;\n  moderatorReceived: boolean;\n  moderatorReceivedAt: Date;\n  resolved: boolean;\n  resolvedAt: Date;\n  actionsTaken: ModerationAction[];\n}\n\nexport class FlaggedEvent extends FlaggedItem {\n  event: Event;\n}\nexport class FlaggedPost extends FlaggedItem {\n  post: Post;\n}\nexport class FlaggedComment extends FlaggedItem {\n  comment: Comment;\n}\n\n/**\n *\n *\n *\n *\n */\nexport abstract class ModerationAction {}\nexport class IssuedWarning extends ModerationAction {}\nexport class BannedUser extends ModerationAction {}\nexport class RemovedComment extends ModerationAction {}\n\nexport class ResolvedCases {\n  resolutionDate: Date;\n  // Audit details etc\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlaggedEvent.html":{"url":"classes/FlaggedEvent.html","title":"class - FlaggedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlaggedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/moderation.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FlaggedItem\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                actionsTaken\n                            \n                            \n                                assignedToModerator\n                            \n                            \n                                assignedToModeratorAt\n                            \n                            \n                                flaggedAt\n                            \n                            \n                                flaggedBy\n                            \n                            \n                                flagType\n                            \n                            \n                                id\n                            \n                            \n                                moderatorReceived\n                            \n                            \n                                moderatorReceivedAt\n                            \n                            \n                                reason\n                            \n                            \n                                resolved\n                            \n                            \n                                resolvedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        event\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Event\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionsTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModerationAction[]\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        assignedToModerator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        assignedToModeratorAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flaggedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flaggedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flagType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FlagType\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moderatorReceived\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moderatorReceivedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolvedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:34\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Comment, Post } from './content';\nimport { Event } from './event';\nimport { User } from './user';\n\n/**\n *\n *\n *\n *\n */\nexport enum FlagType {\n  HATE_SPEECH,\n  DISCRIMINATION,\n  HARASSMENT,\n  THREATS,\n  SPAM,\n  MISINFORMATION,\n  ILLEGAL_CONTENT,\n  COPYRIGHT,\n  SEXUAL,\n  OTHER,\n}\nexport abstract class FlaggedItem {\n  id: string;\n  flaggedAt: Date;\n  flaggedBy: User;\n  flagType: FlagType;\n  reason: string;\n  assignedToModerator: User;\n  assignedToModeratorAt: Date;\n  moderatorReceived: boolean;\n  moderatorReceivedAt: Date;\n  resolved: boolean;\n  resolvedAt: Date;\n  actionsTaken: ModerationAction[];\n}\n\nexport class FlaggedEvent extends FlaggedItem {\n  event: Event;\n}\nexport class FlaggedPost extends FlaggedItem {\n  post: Post;\n}\nexport class FlaggedComment extends FlaggedItem {\n  comment: Comment;\n}\n\n/**\n *\n *\n *\n *\n */\nexport abstract class ModerationAction {}\nexport class IssuedWarning extends ModerationAction {}\nexport class BannedUser extends ModerationAction {}\nexport class RemovedComment extends ModerationAction {}\n\nexport class ResolvedCases {\n  resolutionDate: Date;\n  // Audit details etc\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlaggedItem.html":{"url":"classes/FlaggedItem.html","title":"class - FlaggedItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlaggedItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/moderation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionsTaken\n                            \n                            \n                                assignedToModerator\n                            \n                            \n                                assignedToModeratorAt\n                            \n                            \n                                flaggedAt\n                            \n                            \n                                flaggedBy\n                            \n                            \n                                flagType\n                            \n                            \n                                id\n                            \n                            \n                                moderatorReceived\n                            \n                            \n                                moderatorReceivedAt\n                            \n                            \n                                reason\n                            \n                            \n                                resolved\n                            \n                            \n                                resolvedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionsTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModerationAction[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        assignedToModerator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        assignedToModeratorAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flaggedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flaggedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flagType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FlagType\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moderatorReceived\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moderatorReceivedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolvedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Comment, Post } from './content';\nimport { Event } from './event';\nimport { User } from './user';\n\n/**\n *\n *\n *\n *\n */\nexport enum FlagType {\n  HATE_SPEECH,\n  DISCRIMINATION,\n  HARASSMENT,\n  THREATS,\n  SPAM,\n  MISINFORMATION,\n  ILLEGAL_CONTENT,\n  COPYRIGHT,\n  SEXUAL,\n  OTHER,\n}\nexport abstract class FlaggedItem {\n  id: string;\n  flaggedAt: Date;\n  flaggedBy: User;\n  flagType: FlagType;\n  reason: string;\n  assignedToModerator: User;\n  assignedToModeratorAt: Date;\n  moderatorReceived: boolean;\n  moderatorReceivedAt: Date;\n  resolved: boolean;\n  resolvedAt: Date;\n  actionsTaken: ModerationAction[];\n}\n\nexport class FlaggedEvent extends FlaggedItem {\n  event: Event;\n}\nexport class FlaggedPost extends FlaggedItem {\n  post: Post;\n}\nexport class FlaggedComment extends FlaggedItem {\n  comment: Comment;\n}\n\n/**\n *\n *\n *\n *\n */\nexport abstract class ModerationAction {}\nexport class IssuedWarning extends ModerationAction {}\nexport class BannedUser extends ModerationAction {}\nexport class RemovedComment extends ModerationAction {}\n\nexport class ResolvedCases {\n  resolutionDate: Date;\n  // Audit details etc\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlaggedPost.html":{"url":"classes/FlaggedPost.html","title":"class - FlaggedPost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlaggedPost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/moderation.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FlaggedItem\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                post\n                            \n                            \n                                actionsTaken\n                            \n                            \n                                assignedToModerator\n                            \n                            \n                                assignedToModeratorAt\n                            \n                            \n                                flaggedAt\n                            \n                            \n                                flaggedBy\n                            \n                            \n                                flagType\n                            \n                            \n                                id\n                            \n                            \n                                moderatorReceived\n                            \n                            \n                                moderatorReceivedAt\n                            \n                            \n                                reason\n                            \n                            \n                                resolved\n                            \n                            \n                                resolvedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionsTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModerationAction[]\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        assignedToModerator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        assignedToModeratorAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flaggedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flaggedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flagType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FlagType\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moderatorReceived\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moderatorReceivedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolvedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         FlaggedItem\n\n                            \n                        \n                    \n                        \n                                Defined in         FlaggedItem:34\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Comment, Post } from './content';\nimport { Event } from './event';\nimport { User } from './user';\n\n/**\n *\n *\n *\n *\n */\nexport enum FlagType {\n  HATE_SPEECH,\n  DISCRIMINATION,\n  HARASSMENT,\n  THREATS,\n  SPAM,\n  MISINFORMATION,\n  ILLEGAL_CONTENT,\n  COPYRIGHT,\n  SEXUAL,\n  OTHER,\n}\nexport abstract class FlaggedItem {\n  id: string;\n  flaggedAt: Date;\n  flaggedBy: User;\n  flagType: FlagType;\n  reason: string;\n  assignedToModerator: User;\n  assignedToModeratorAt: Date;\n  moderatorReceived: boolean;\n  moderatorReceivedAt: Date;\n  resolved: boolean;\n  resolvedAt: Date;\n  actionsTaken: ModerationAction[];\n}\n\nexport class FlaggedEvent extends FlaggedItem {\n  event: Event;\n}\nexport class FlaggedPost extends FlaggedItem {\n  post: Post;\n}\nexport class FlaggedComment extends FlaggedItem {\n  comment: Comment;\n}\n\n/**\n *\n *\n *\n *\n */\nexport abstract class ModerationAction {}\nexport class IssuedWarning extends ModerationAction {}\nexport class BannedUser extends ModerationAction {}\nexport class RemovedComment extends ModerationAction {}\n\nexport class ResolvedCases {\n  resolutionDate: Date;\n  // Audit details etc\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Genre.html":{"url":"entities/Genre.html","title":"entity - Genre","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Genre\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/tags/genre.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accounts\n                            \n                            \n                                eventDrafts\n                            \n                            \n                                eventTemplates\n                            \n                            \n                                media\n                            \n                            \n                                    \n                                publishedEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, account => account.genres, {lazy: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/tags/genre.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventDrafts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Relation[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/tags/genre.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventTemplates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/tags/genre.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/tags/genre.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        publishedEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, event => event.genres)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/tags/genre.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        // import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, ManyToMany, Relation } from 'typeorm';\nimport { PublishedEvent } from '../event/published.entity';\nimport { EventTemplate } from '../event/template.entity';\nimport { EventDraft } from '../event/draft.entity';\nimport { Account } from '../account/base/account.entity';\nimport { Tag } from '../common/tag.entity';\n\n@Entity()\nexport class Genre extends Tag {\n  @ManyToMany(() => Account, (account) => account.genres, { lazy: true })\n  accounts: Relation[];\n\n  @ManyToMany(() => PublishedEvent, (event) => event.genres)\n  publishedEvents: Relation[];\n\n  // @ManyToMany(() => EventDraft, (event) => event.genres)\n  eventDrafts: Relation[];\n\n  // @ManyToMany(() => EventTemplate, (event) => event.genres)\n  eventTemplates: Relation[];\n\n  media: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleLoginDto.html":{"url":"classes/GoogleLoginDto.html","title":"class - GoogleLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/dto/login.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            LoginBase\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                clientId\n                            \n                            \n                                    \n                                clientSecret\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/dto/login.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clientSecret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/dto/login.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginType.GOOGLE\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/dto/login.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { exampleUser } from '@app/data/examples/user.example';\n\nexport enum LoginType {\n  USERNAME = 'USERNAME',\n  EMAIL = 'EMAIL',\n  GOOGLE = 'GOOGLE',\n}\n\ninterface LoginBase {\n  type: LoginType;\n}\n\nabstract class PasswordLogin {\n  @ApiProperty({ example: 'password' })\n  password: string;\n}\n\nexport class UsernameLoginDto extends PasswordLogin implements LoginBase {\n  @ApiProperty({ example: LoginType.USERNAME })\n  type: LoginType.USERNAME;\n\n  @ApiProperty({ example: exampleUser.username })\n  username: string;\n}\n\nexport class EmailLoginDto extends PasswordLogin {\n  @ApiProperty({ example: LoginType.EMAIL })\n  type: LoginType.EMAIL;\n\n  @ApiProperty({ example: exampleUser.username })\n  email: string;\n}\n\nexport class GoogleLoginDto implements LoginBase {\n  @ApiProperty({ example: LoginType.GOOGLE })\n  type: LoginType.GOOGLE;\n\n  @ApiProperty()\n  clientId: string;\n\n  @ApiProperty()\n  clientSecret: string;\n}\n\nexport type LoginDto = UsernameLoginDto | EmailLoginDto | GoogleLoginDto;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GraphqlController.html":{"url":"controllers/GraphqlController.html","title":"controller - GraphqlController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GraphqlController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/gateways/graphql/src/graphql.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/graphql/src/graphql.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { GraphqlService } from './graphql.service';\n\n@Controller()\nexport class GraphqlController {\n  constructor(private readonly graphqlService: GraphqlService) {}\n\n  @Get()\n  getHello(): string {\n    return this.graphqlService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphqlModule.html":{"url":"modules/GraphqlModule.html","title":"module - GraphqlModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphqlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GraphqlModule\n\n\n\ncluster_GraphqlModule_providers\n\n\n\n\nGraphqlService\n\nGraphqlService\n\n\n\nGraphqlModule\n\nGraphqlModule\n\nGraphqlModule -->\n\nGraphqlService->GraphqlModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            original/xxx/apps/gateways/graphql/src/graphql.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphqlService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GraphqlController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphqlController } from './graphql.controller';\nimport { GraphqlService } from './graphql.service';\n\n@Module({\n  imports: [],\n  controllers: [GraphqlController],\n  providers: [GraphqlService],\n})\nexport class GraphqlModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlService.html":{"url":"injectables/GraphqlService.html","title":"injectable - GraphqlService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/gateways/graphql/src/graphql.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/graphql/src/graphql.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GraphqlService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Group.html":{"url":"classes/Group.html","title":"class - Group","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Group\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            VersionedResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                broadcasts\n                            \n                            \n                                bulletins\n                            \n                            \n                                description\n                            \n                            \n                                isActive\n                            \n                            \n                                lastInteractionAt\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                opinions\n                            \n                            \n                                statements\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        broadcasts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Broadcast[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bulletins\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Bulletin[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:183\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:174\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:177\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastInteractionAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:176\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:175\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:173\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opinions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Opinion[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:181\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Statement[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:180\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupBroadcast.html":{"url":"classes/GroupBroadcast.html","title":"class - GroupBroadcast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupBroadcast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Broadcast\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                            \n                                audience\n                            \n                            \n                                broadcastType\n                            \n                            \n                                producer\n                            \n                            \n                                author\n                            \n                            \n                                comments\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                shares\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:214\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BroadcastAudience\n\n                    \n                \n                        \n                            \n                                Inherited from         Broadcast\n\n                            \n                        \n                    \n                        \n                                Defined in         Broadcast:153\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BroadcastType\n\n                    \n                \n                        \n                            \n                                Inherited from         Broadcast\n\n                            \n                        \n                    \n                        \n                                Defined in         Broadcast:152\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        producer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                        \n                            \n                                Inherited from         Broadcast\n\n                            \n                        \n                    \n                        \n                                Defined in         Broadcast:154\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GuardsModule.html":{"url":"modules/GuardsModule.html","title":"module - GuardsModule","body":"\n                   \n\n\n\n\n    Modules\n    GuardsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            original/xxx/auth/src/guards/guards.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class GuardsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Instrument.html":{"url":"classes/Instrument.html","title":"class - Instrument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Instrument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/common.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Resource {\n  id: string;\n  createdAt: Date;\n  lastUpdatedAt: Date;\n}\n\nexport abstract class VersionedResource extends Resource {\n  version: number;\n}\n\nexport abstract class Tag {\n  id: string;\n  displayName: string;\n  description?: string;\n}\n\nexport class Genre {}\nexport class EventKeyword {}\nexport class VenueKeyword {}\n\nexport class Instrument {}\n\nexport interface PhysicalSpace {\n  capacity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IssuedWarning.html":{"url":"classes/IssuedWarning.html","title":"class - IssuedWarning","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IssuedWarning\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/moderation.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ModerationAction\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Comment, Post } from './content';\nimport { Event } from './event';\nimport { User } from './user';\n\n/**\n *\n *\n *\n *\n */\nexport enum FlagType {\n  HATE_SPEECH,\n  DISCRIMINATION,\n  HARASSMENT,\n  THREATS,\n  SPAM,\n  MISINFORMATION,\n  ILLEGAL_CONTENT,\n  COPYRIGHT,\n  SEXUAL,\n  OTHER,\n}\nexport abstract class FlaggedItem {\n  id: string;\n  flaggedAt: Date;\n  flaggedBy: User;\n  flagType: FlagType;\n  reason: string;\n  assignedToModerator: User;\n  assignedToModeratorAt: Date;\n  moderatorReceived: boolean;\n  moderatorReceivedAt: Date;\n  resolved: boolean;\n  resolvedAt: Date;\n  actionsTaken: ModerationAction[];\n}\n\nexport class FlaggedEvent extends FlaggedItem {\n  event: Event;\n}\nexport class FlaggedPost extends FlaggedItem {\n  post: Post;\n}\nexport class FlaggedComment extends FlaggedItem {\n  comment: Comment;\n}\n\n/**\n *\n *\n *\n *\n */\nexport abstract class ModerationAction {}\nexport class IssuedWarning extends ModerationAction {}\nexport class BannedUser extends ModerationAction {}\nexport class RemovedComment extends ModerationAction {}\n\nexport class ResolvedCases {\n  resolutionDate: Date;\n  // Audit details etc\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JWTAuthGuard.html":{"url":"injectables/JWTAuthGuard.html","title":"injectable - JWTAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JWTAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/guards/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JWTAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/strategies/facebook.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/strategies/facebook.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/strategies/facebook.strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, StrategyOptions } from 'passport-facebook';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      callbackURL: '',\n      clientID: '',\n      clientSecret: '',\n    } satisfies StrategyOptions);\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy-1.html":{"url":"injectables/JwtStrategy-1.html","title":"injectable - JwtStrategy-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/strategies/google.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/strategies/google.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/strategies/google.strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, StrategyOptions } from 'passport-google-oauth20';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      callbackURL: '',\n      clientID: '',\n      clientSecret: '',\n    } satisfies StrategyOptions);\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy-2.html":{"url":"injectables/JwtStrategy-2.html","title":"injectable - JwtStrategy-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/strategies/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/strategies/jwt.strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy, StrategyOptions } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: 'SECRET',\n    } satisfies StrategyOptions);\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy-3.html":{"url":"injectables/JwtStrategy-3.html","title":"injectable - JwtStrategy-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/strategies/oauth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/strategies/oauth.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/strategies/oauth.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, StrategyOptions } from 'passport-oauth2';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      authorizationURL: '',\n      clientID: '',\n      clientSecret: '',\n      tokenURL: '',\n    } satisfies StrategyOptions);\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy-4.html":{"url":"injectables/JwtStrategy-4.html","title":"injectable - JwtStrategy-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/strategies/twitter.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/strategies/twitter.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/strategies/twitter.strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, IStrategyOption } from 'passport-twitter';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      callbackURL: '',\n      consumerKey: '',\n      consumerSecret: '',\n    } satisfies IStrategyOption);\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/guards/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: CoreAuthService)\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        CoreAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/strategies/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, IStrategyOptions } from 'passport-local';\nimport { CoreAuthService } from '../core.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: CoreAuthService) {\n    super({} satisfies IStrategyOptions);\n  }\n\n  async validate(username: string, password: string): Promise {\n    return this.authService.validate(username, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LocationsController.html":{"url":"controllers/LocationsController.html","title":"controller - LocationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LocationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/core/location/src/locations.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/core/location/src/locations.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { LocationsService } from './locations.service';\n\n@Controller()\nexport class LocationsController {\n  constructor(private readonly locationsService: LocationsService) {}\n\n  @Get()\n  getHello(): string {\n    return this.locationsService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationsModule.html":{"url":"modules/LocationsModule.html","title":"module - LocationsModule","body":"\n                   \n\n\n\n\n    Modules\n    LocationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationsModule\n\n\n\ncluster_LocationsModule_providers\n\n\n\n\nLocationsService\n\nLocationsService\n\n\n\nLocationsModule\n\nLocationsModule\n\nLocationsModule -->\n\nLocationsService->LocationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/resources/locations/locations.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LocationsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LocationsService } from './locations.service';\nimport { LocationsController } from './locations.controller';\n\n@Module({\n  controllers: [LocationsController],\n  providers: [LocationsService],\n})\nexport class LocationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationsService.html":{"url":"injectables/LocationsService.html","title":"injectable - LocationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/resources/locations/locations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createLocationDto: CreateLocationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/locations/locations.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLocationDto\n                                            \n                                                            CreateLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/locations/locations.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/locations/locations.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/locations/locations.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateLocationDto: UpdateLocationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/locations/locations.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateLocationDto\n                                            \n                                                            UpdateLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateLocationDto, UpdateLocationDto } from '@app/data/dto';\n\n@Injectable()\nexport class LocationsService {\n  create(createLocationDto: CreateLocationDto) {\n    return 'This action adds a new location. Wont happen';\n  }\n\n  findAll() {\n    return `This action returns all locations`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} location`;\n  }\n\n  update(id: number, updateLocationDto: UpdateLocationDto) {\n    return `This action updates a #${id} location`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} location`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationsService-1.html":{"url":"injectables/LocationsService-1.html","title":"injectable - LocationsService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/core/location/src/locations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/apps/core/location/src/locations.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LocationsService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginBase.html":{"url":"interfaces/LoginBase.html","title":"interface - LoginBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/dto/login.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         LoginType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoginType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { exampleUser } from '@app/data/examples/user.example';\n\nexport enum LoginType {\n  USERNAME = 'USERNAME',\n  EMAIL = 'EMAIL',\n  GOOGLE = 'GOOGLE',\n}\n\ninterface LoginBase {\n  type: LoginType;\n}\n\nabstract class PasswordLogin {\n  @ApiProperty({ example: 'password' })\n  password: string;\n}\n\nexport class UsernameLoginDto extends PasswordLogin implements LoginBase {\n  @ApiProperty({ example: LoginType.USERNAME })\n  type: LoginType.USERNAME;\n\n  @ApiProperty({ example: exampleUser.username })\n  username: string;\n}\n\nexport class EmailLoginDto extends PasswordLogin {\n  @ApiProperty({ example: LoginType.EMAIL })\n  type: LoginType.EMAIL;\n\n  @ApiProperty({ example: exampleUser.username })\n  email: string;\n}\n\nexport class GoogleLoginDto implements LoginBase {\n  @ApiProperty({ example: LoginType.GOOGLE })\n  type: LoginType.GOOGLE;\n\n  @ApiProperty()\n  clientId: string;\n\n  @ApiProperty()\n  clientSecret: string;\n}\n\nexport type LoginDto = UsernameLoginDto | EmailLoginDto | GoogleLoginDto;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MediaController.html":{"url":"controllers/MediaController.html","title":"controller - MediaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MediaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/media.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MediaService } from './media.service';\n\n@Controller()\nexport class MediaController {\n  constructor(private readonly mediaService: MediaService) {}\n\n  @Get()\n  getHello(): string {\n    return this.mediaService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MediaController-1.html":{"url":"controllers/MediaController-1.html","title":"controller - MediaController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MediaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/core/media/src/media.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/core/media/src/media.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MediaService } from './media.service';\n\n@Controller()\nexport class MediaController {\n  constructor(private readonly mediaService: MediaService) {}\n\n  @Get()\n  getHello(): string {\n    return this.mediaService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_providers\n\n\n\n\nMediaService\n\nMediaService\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/media/src/media.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MediaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MediaController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MediaController } from './media.controller';\nimport { MediaService } from './media.service';\n\n@Module({\n  imports: [],\n  controllers: [MediaController],\n  providers: [MediaService],\n})\nexport class MediaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/media/src/media.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MediaService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService-1.html":{"url":"injectables/MediaService-1.html","title":"injectable - MediaService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/core/media/src/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/apps/core/media/src/media.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MediaService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessagingGateway.html":{"url":"classes/MessagingGateway.html","title":"class - MessagingGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessagingGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ws/src/gateways/messaging/messaging.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                identity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messagingService: MessagingService)\n                    \n                \n                        \n                            \n                                Defined in apps/ws/src/gateways/messaging/messaging.gateway.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messagingService\n                                                  \n                                                        \n                                                                        MessagingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        identity\n                        \n                    \n                \n            \n            \n                \n                        \n                    identity(data: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('identity')\n                \n            \n\n                    \n                        \n                            Defined in apps/ws/src/gateways/messaging/messaging.gateway.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  WebSocketGateway,\n  SubscribeMessage,\n  MessageBody,\n} from '@nestjs/websockets';\nimport { MessagingService } from './messaging.service';\nimport { gatewayOptions } from '../gateway.options';\nimport { WS_NAMESPACES } from '@app/ws/constants';\n\n@WebSocketGateway({\n  namespace: WS_NAMESPACES.MESSAGING,\n  ...gatewayOptions,\n})\nexport class MessagingGateway {\n  constructor(private readonly messagingService: MessagingService) {}\n\n  @SubscribeMessage('identity')\n  async identity(@MessageBody() data: number): Promise {\n    return `the message was ${data}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagingModule.html":{"url":"modules/MessagingModule.html","title":"module - MessagingModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MessagingModule\n\n\n\ncluster_MessagingModule_providers\n\n\n\ncluster_MessagingModule_exports\n\n\n\n\nMessagingService \n\nMessagingService \n\n\n\nMessagingModule\n\nMessagingModule\n\nMessagingService  -->\n\nMessagingModule->MessagingService \n\n\n\n\n\nMessagingService\n\nMessagingService\n\nMessagingModule -->\n\nMessagingService->MessagingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/messaging/src/messaging.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MessagingService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MessagingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MessagingService } from './messaging.service';\n\n@Module({\n  providers: [MessagingService],\n  exports: [MessagingService],\n})\nexport class MessagingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagingService.html":{"url":"injectables/MessagingService.html","title":"injectable - MessagingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessagingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/messaging/src/messaging.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MessagingService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagingService-1.html":{"url":"injectables/MessagingService-1.html","title":"injectable - MessagingService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessagingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ws/src/gateways/messaging/messaging.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MessagingService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModerationAction.html":{"url":"classes/ModerationAction.html","title":"class - ModerationAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModerationAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/moderation.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Comment, Post } from './content';\nimport { Event } from './event';\nimport { User } from './user';\n\n/**\n *\n *\n *\n *\n */\nexport enum FlagType {\n  HATE_SPEECH,\n  DISCRIMINATION,\n  HARASSMENT,\n  THREATS,\n  SPAM,\n  MISINFORMATION,\n  ILLEGAL_CONTENT,\n  COPYRIGHT,\n  SEXUAL,\n  OTHER,\n}\nexport abstract class FlaggedItem {\n  id: string;\n  flaggedAt: Date;\n  flaggedBy: User;\n  flagType: FlagType;\n  reason: string;\n  assignedToModerator: User;\n  assignedToModeratorAt: Date;\n  moderatorReceived: boolean;\n  moderatorReceivedAt: Date;\n  resolved: boolean;\n  resolvedAt: Date;\n  actionsTaken: ModerationAction[];\n}\n\nexport class FlaggedEvent extends FlaggedItem {\n  event: Event;\n}\nexport class FlaggedPost extends FlaggedItem {\n  post: Post;\n}\nexport class FlaggedComment extends FlaggedItem {\n  comment: Comment;\n}\n\n/**\n *\n *\n *\n *\n */\nexport abstract class ModerationAction {}\nexport class IssuedWarning extends ModerationAction {}\nexport class BannedUser extends ModerationAction {}\nexport class RemovedComment extends ModerationAction {}\n\nexport class ResolvedCases {\n  resolutionDate: Date;\n  // Audit details etc\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Musician.html":{"url":"entities/Musician.html","title":"entity - Musician","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Musician\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/account/musician.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                account\n                            \n                            \n                                    \n                                    \n                                bands\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                instruments\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, account => account.musician)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/musician.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bands\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Band\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, band => band.members)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/musician.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/musician.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        instruments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/musician.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  ManyToMany,\n  OneToOne,\n  JoinTable,\n  Relation,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport { MusicianAccount } from './base/account.entity';\nimport { Performer } from './base/performer.class';\nimport { Band } from './band.entity';\n\n@Entity()\nexport class Musician extends Performer {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @OneToOne(() => MusicianAccount, (account) => account.musician)\n  @JoinTable()\n  account: Relation;\n\n  @ManyToMany(() => Band, (band) => band.members)\n  @ApiProperty()\n  bands: Band;\n\n  @Column()\n  instruments: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MusicianAccount.html":{"url":"classes/MusicianAccount.html","title":"class - MusicianAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MusicianAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/account/base/account.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                managedBy\n                            \n                            \n                                    \n                                musician\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        managedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.managedAccounts)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        musician\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, musician => musician.account)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:141\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  OneToOne,\n  Relation,\n  TableInheritance,\n  ChildEntity,\n  ManyToOne,\n  ManyToMany,\n  JoinTable,\n  // ManyToOne,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { VersionedResource } from '../../common/resource.entity';\nimport { AccountType } from '../../../enums/account-type.enum';\nimport { Band } from '../band.entity';\nimport { Venue } from '../venue.entity';\nimport { Musician } from '../musician.entity';\nimport { Organizer } from '../organizer.entity';\nimport { Genre } from '../../tags/genre.entity';\nimport { PerformerUser } from '../../user';\n\n@Entity()\n@TableInheritance({ column: 'type' })\nexport class Account extends VersionedResource {\n  /**\n   * DISCRIMINATOR\n   */\n  @Column({\n    type: 'enum',\n    enum: AccountType,\n  })\n  type: AccountType;\n\n  /**\n   * METADATA\n   */\n  @Column({ default: true })\n  @ApiProperty({ example: true })\n  isActive: boolean;\n\n  @Column()\n  deactivatedAt: Date;\n\n  /**\n   * BASIC INFO\n   */\n  @Column()\n  @ApiProperty({\n    description: 'Account name.',\n    example: 'Account',\n  })\n  name: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'About account.',\n    example: 'About',\n  })\n  about?: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'Account avatar url.',\n    example: 'https://example.com/image.png',\n  })\n  avatarUrl?: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'Account thumbnail image url.',\n    example: 'https://example.com/image.png',\n  })\n  imageUrl?: string;\n\n  @ManyToMany(() => Genre, (genre) => genre.accounts)\n  @JoinTable({ name: 'account_genres' })\n  @ApiProperty()\n  genres?: Relation[];\n\n  /**\n   * SOCIAL ACCOUNTS\n   */\n  @Column()\n  @ApiProperty()\n  websiteUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  youtubeUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  facebookUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  twitterUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  instagramUrl?: string;\n\n  /**\n   * CONTACT\n   */\n  @Column()\n  @ApiProperty()\n  canEmail: boolean;\n\n  @Column()\n  @ApiProperty()\n  canText: boolean;\n\n  @Column()\n  @ApiProperty()\n  canCall: boolean;\n\n  /**\n   * AFFILIATES\n   */\n  // @ManyToMany(() => Musician)\n  // affiliatedMusicians: Relation;\n\n  // @ManyToMany(() => Band)\n  // affiliatedBands: Relation;\n\n  // @ManyToMany(() => Organizer)\n  // affiliatedOrganizers: Relation;\n\n  // @ManyToMany(() => Venue)\n  // affiliatedVenues: Relation;\n}\n\n@ChildEntity(AccountType.MUSICIAN)\nexport class MusicianAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Musician, (musician) => musician.account)\n  musician: Relation;\n}\n\n@ChildEntity(AccountType.BAND)\nexport class BandAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Band, (band) => band.account)\n  band: Relation;\n}\n\n@ChildEntity(AccountType.VENUE)\nexport class VenueAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Venue, (venue) => venue.account)\n  venue: Relation;\n}\n\n@ChildEntity(AccountType.ORGANIZER)\nexport class OrganizerAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Organizer, (organizer) => organizer.account)\n  organizer: Relation;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MusiciansController.html":{"url":"controllers/MusiciansController.html","title":"controller - MusiciansController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MusiciansController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/gateways/rest/src/controllers/musicians.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                musicians\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createMusicianDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/musicians.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMusicianDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/musicians.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/musicians.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/musicians.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateMusicianDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/musicians.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMusicianDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\n\n@Controller('musicians')\nexport class MusiciansController {\n  constructor() {}\n\n  @Post()\n  create(@Body() createMusicianDto: any) {\n    return `This creates a Musician with shape: ${createMusicianDto}`;\n  }\n\n  @Get()\n  findAll() {\n    return 'This finds all Musicians';\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return `This finds a single Musician with id: ${id}`;\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateMusicianDto: any) {\n    return `This updates a single Musician with id: ${id}, and data: ${updateMusicianDto}`;\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return `This deletes Musician with id: ${id}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MusiciansModule.html":{"url":"modules/MusiciansModule.html","title":"module - MusiciansModule","body":"\n                   \n\n\n\n\n    Modules\n    MusiciansModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MusiciansModule\n\n\n\ncluster_MusiciansModule_providers\n\n\n\n\nMusiciansService\n\nMusiciansService\n\n\n\nMusiciansModule\n\nMusiciansModule\n\nMusiciansModule -->\n\nMusiciansService->MusiciansModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/resources/musicians/musicians.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MusiciansService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MusiciansController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MusiciansService } from './musicians.service';\nimport { MusiciansController } from './musicians.controller';\n\n@Module({\n  controllers: [MusiciansController],\n  providers: [MusiciansService],\n})\nexport class MusiciansModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusiciansService.html":{"url":"injectables/MusiciansService.html","title":"injectable - MusiciansService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MusiciansService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/resources/musicians/musicians.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createMusicianDto: CreateMusicianDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/musicians/musicians.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMusicianDto\n                                            \n                                                            CreateMusicianDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/musicians/musicians.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/musicians/musicians.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/musicians/musicians.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateMusicianDto: UpdateMusicianDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/musicians/musicians.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMusicianDto\n                                            \n                                                            UpdateMusicianDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateMusicianDto, UpdateMusicianDto } from '@app/data/dto';\n\n@Injectable()\nexport class MusiciansService {\n  create(createMusicianDto: CreateMusicianDto) {\n    return 'This action adds a new musician';\n  }\n\n  findAll() {\n    return `This action returns all musicians`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} musician`;\n  }\n\n  update(id: number, updateMusicianDto: UpdateMusicianDto) {\n    return `This action updates a #${id} musician`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} musician`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Network.html":{"url":"entities/Network.html","title":"entity - Network","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Network\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/location/network.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                children\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                parent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Network[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeChildren()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/location/network.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/location/network.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/location/network.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Network\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeParent()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/location/network.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Tree,\n  Column,\n  PrimaryGeneratedColumn,\n  TreeChildren,\n  TreeParent,\n} from 'typeorm';\n\n@Entity()\n@Tree('closure-table')\nexport class Network {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @TreeChildren()\n  children: Network[];\n\n  @TreeParent()\n  parent: Network;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Network-1.html":{"url":"classes/Network-1.html","title":"class - Network-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Network\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/location/network.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                children\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                parent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Network[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeChildren()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/location/network.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/location/network.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/location/network.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Network\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeParent()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/location/network.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Entity,\n  Tree,\n  Column,\n  PrimaryGeneratedColumn,\n  TreeChildren,\n  TreeParent,\n} from 'typeorm';\n\n@Entity()\n@Tree('closure-table')\nexport class Network {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @TreeChildren()\n  children: Network[];\n\n  @TreeParent()\n  parent: Network;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NetworkBroadcast.html":{"url":"classes/NetworkBroadcast.html","title":"class - NetworkBroadcast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NetworkBroadcast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Broadcast\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                network\n                            \n                            \n                                audience\n                            \n                            \n                                broadcastType\n                            \n                            \n                                producer\n                            \n                            \n                                author\n                            \n                            \n                                comments\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                shares\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Network\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:210\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BroadcastAudience\n\n                    \n                \n                        \n                            \n                                Inherited from         Broadcast\n\n                            \n                        \n                    \n                        \n                                Defined in         Broadcast:153\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BroadcastType\n\n                    \n                \n                        \n                            \n                                Inherited from         Broadcast\n\n                            \n                        \n                    \n                        \n                                Defined in         Broadcast:152\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        producer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                        \n                            \n                                Inherited from         Broadcast\n\n                            \n                        \n                    \n                        \n                                Defined in         Broadcast:154\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NetworksController.html":{"url":"classes/NetworksController.html","title":"class - NetworksController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NetworksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/resources/networks/networks.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(networksService: NetworksService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/resources/networks/networks.controller.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        networksService\n                                                  \n                                                        \n                                                                        NetworksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createNetworkDto: CreateNetworkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/resources/networks/networks.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createNetworkDto\n                                            \n                                                            CreateNetworkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/resources/networks/networks.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/resources/networks/networks.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/resources/networks/networks.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateNetworkDto: UpdateNetworkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/api/src/resources/networks/networks.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateNetworkDto\n                                            \n                                                            UpdateNetworkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { CreateNetworkDto, UpdateNetworkDto } from '@app/data/dto';\nimport { RestController } from '@app/decorators';\nimport { NetworksService } from './networks.service';\n\n@RestController({ path: 'networks', version: '.beta' })\nexport class NetworksController {\n  constructor(private readonly networksService: NetworksService) {}\n\n  @Post()\n  create(@Body() createNetworkDto: CreateNetworkDto) {\n    return this.networksService.create(createNetworkDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.networksService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.networksService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateNetworkDto: UpdateNetworkDto) {\n    return this.networksService.update(+id, updateNetworkDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.networksService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NetworksModule.html":{"url":"modules/NetworksModule.html","title":"module - NetworksModule","body":"\n                   \n\n\n\n\n    Modules\n    NetworksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NetworksModule\n\n\n\ncluster_NetworksModule_providers\n\n\n\n\nNetworksService\n\nNetworksService\n\n\n\nNetworksModule\n\nNetworksModule\n\nNetworksModule -->\n\nNetworksService->NetworksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/resources/networks/networks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NetworksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NetworksService } from './networks.service';\nimport { NetworksController } from './networks.controller';\n\n@Module({\n  controllers: [NetworksController],\n  providers: [NetworksService],\n})\nexport class NetworksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworksService.html":{"url":"injectables/NetworksService.html","title":"injectable - NetworksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NetworksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/resources/networks/networks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createNetworkDto: CreateNetworkDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/networks/networks.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createNetworkDto\n                                            \n                                                            CreateNetworkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/networks/networks.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/networks/networks.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/networks/networks.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateNetworkDto: UpdateNetworkDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/networks/networks.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateNetworkDto\n                                            \n                                                            UpdateNetworkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateNetworkDto, UpdateNetworkDto } from '@app/data/dto';\n\n@Injectable()\nexport class NetworksService {\n  create(createNetworkDto: CreateNetworkDto) {\n    return 'This action adds a new network';\n  }\n\n  findAll() {\n    return `This action returns all networks`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} network`;\n  }\n\n  update(id: number, updateNetworkDto: UpdateNetworkDto) {\n    return `This action updates a #${id} network`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} network`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Newsletter.html":{"url":"classes/Newsletter.html","title":"class - Newsletter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Newsletter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n            \n                Description\n            \n            \n                POST - NEWSLETTER\n\n            \n\n            \n                Extends\n            \n            \n                            Post\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                accountType\n                            \n                            \n                                author\n                            \n                            \n                                comments\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                shares\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Exclude\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationChannel.html":{"url":"classes/NotificationChannel.html","title":"class - NotificationChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/schemas/channel.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channelId\n                            \n                            \n                                name\n                            \n                            \n                                producerId\n                            \n                            \n                                service\n                            \n                            \n                                subscibers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/notification/src/schemas/channel.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/notification/src/schemas/channel.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        producerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/notification/src/schemas/channel.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationService\n\n                    \n                \n                    \n                        \n                                Defined in apps/notification/src/schemas/channel.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscibers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/notification/src/schemas/channel.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        enum NotificationService {\n  EMAIL = 'EMAIL',\n  SMS = 'SMS',\n  PUSH = 'PUSH',\n  IN_APP = 'IN_APP',\n}\n\nexport class NotificationChannel {\n  // primary id `${resource-slug}-${channel-type}`\n  // `-`\n  channelId: string;\n\n  // Human readable display name\n  name: string;\n\n  // Resource that produces notifications\n  producerId: string;\n\n  // Users subscribed to channel (id references to users)\n  subscibers: string[];\n\n  // Notification service\n  service: NotificationService;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationController.html":{"url":"controllers/NotificationController.html","title":"controller - NotificationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleUserCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleUserCreated\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleUserCreated(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('user-created')\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/notification.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { NotificationService } from './notification.service';\nimport { EventPattern } from '@nestjs/microservices';\nimport { User } from '@app/data/entities/user';\n\n@Controller()\nexport class NotificationController {\n  constructor(private readonly notificationsService: NotificationService) {}\n\n  @EventPattern('user-created')\n  handleUserCreated(user: User) {\n    console.log('New User Created!');\n    console.log(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationFilter.html":{"url":"interfaces/NotificationFilter.html","title":"interface - NotificationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/schemas/user.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            channel\n                                        \n                                \n                                \n                                        \n                                            enabled\n                                        \n                                \n                                \n                                        \n                                            frequency\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frequency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frequency:         NotificationFrequency\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotificationFrequency\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum NotificationFrequency {\n  DAILY = 'DAILY',\n  WEEKLY = 'WEEKLY',\n  OCCASIONALLY = 'OCCASIONALLY',\n}\n\ninterface NotificationServiceOptions {\n  enabled: boolean;\n  frequency: NotificationFrequency;\n  filters: NotificationFilter;\n}\n\ninterface NotificationFilter {\n  channel: string;\n  enabled: boolean;\n  frequency: NotificationFrequency;\n}\n\ninterface NotificationMetadata {\n  lastNotified: Date;\n  userInteracted: boolean;\n}\n\nexport class UserPreferences {\n  // Primary Key (matches user service id)\n  userId: string;\n\n  // Contact info\n  phone: string;\n  email: string;\n  smsProvider: string;\n\n  // Preferences\n  preferences: {\n    email: NotificationServiceOptions;\n    sms: NotificationServiceOptions;\n    push: NotificationServiceOptions;\n    inApp: NotificationServiceOptions;\n  };\n\n  // Metadata\n  metadata: {\n    email: NotificationMetadata;\n    sms: NotificationMetadata;\n    push: NotificationMetadata;\n    inApp: NotificationMetadata;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationMetadata.html":{"url":"interfaces/NotificationMetadata.html","title":"interface - NotificationMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/schemas/user.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            lastNotified\n                                        \n                                \n                                \n                                        \n                                            userInteracted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastNotified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastNotified:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userInteracted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userInteracted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum NotificationFrequency {\n  DAILY = 'DAILY',\n  WEEKLY = 'WEEKLY',\n  OCCASIONALLY = 'OCCASIONALLY',\n}\n\ninterface NotificationServiceOptions {\n  enabled: boolean;\n  frequency: NotificationFrequency;\n  filters: NotificationFilter;\n}\n\ninterface NotificationFilter {\n  channel: string;\n  enabled: boolean;\n  frequency: NotificationFrequency;\n}\n\ninterface NotificationMetadata {\n  lastNotified: Date;\n  userInteracted: boolean;\n}\n\nexport class UserPreferences {\n  // Primary Key (matches user service id)\n  userId: string;\n\n  // Contact info\n  phone: string;\n  email: string;\n  smsProvider: string;\n\n  // Preferences\n  preferences: {\n    email: NotificationServiceOptions;\n    sms: NotificationServiceOptions;\n    push: NotificationServiceOptions;\n    inApp: NotificationServiceOptions;\n  };\n\n  // Metadata\n  metadata: {\n    email: NotificationMetadata;\n    sms: NotificationMetadata;\n    push: NotificationMetadata;\n    inApp: NotificationMetadata;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationModule.html":{"url":"modules/NotificationModule.html","title":"module - NotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\n\nNotificationService\n\nNotificationService\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/notification/src/notification.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { NotificationService } from './notification.service';\nimport { NotificationController } from './notification.controller';\nimport { MESSAGE_BROKER } from '@app/constants';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: MESSAGE_BROKER, transport: Transport.TCP },\n    ]),\n  ],\n  controllers: [NotificationController],\n  providers: [NotificationService],\n})\nexport class NotificationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageBroker: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/notification/src/notification.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageBroker\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { MESSAGE_BROKER } from '@app/constants';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\n\n@Injectable()\nexport class NotificationService {\n  constructor(\n    @Inject(MESSAGE_BROKER) private readonly messageBroker: ClientProxy,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationServiceOptions.html":{"url":"interfaces/NotificationServiceOptions.html","title":"interface - NotificationServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/schemas/user.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            enabled\n                                        \n                                \n                                \n                                        \n                                            filters\n                                        \n                                \n                                \n                                        \n                                            frequency\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filters:         NotificationFilter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotificationFilter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frequency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frequency:         NotificationFrequency\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotificationFrequency\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum NotificationFrequency {\n  DAILY = 'DAILY',\n  WEEKLY = 'WEEKLY',\n  OCCASIONALLY = 'OCCASIONALLY',\n}\n\ninterface NotificationServiceOptions {\n  enabled: boolean;\n  frequency: NotificationFrequency;\n  filters: NotificationFilter;\n}\n\ninterface NotificationFilter {\n  channel: string;\n  enabled: boolean;\n  frequency: NotificationFrequency;\n}\n\ninterface NotificationMetadata {\n  lastNotified: Date;\n  userInteracted: boolean;\n}\n\nexport class UserPreferences {\n  // Primary Key (matches user service id)\n  userId: string;\n\n  // Contact info\n  phone: string;\n  email: string;\n  smsProvider: string;\n\n  // Preferences\n  preferences: {\n    email: NotificationServiceOptions;\n    sms: NotificationServiceOptions;\n    push: NotificationServiceOptions;\n    inApp: NotificationServiceOptions;\n  };\n\n  // Metadata\n  metadata: {\n    email: NotificationMetadata;\n    sms: NotificationMetadata;\n    push: NotificationMetadata;\n    inApp: NotificationMetadata;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationsController.html":{"url":"controllers/NotificationsController.html","title":"controller - NotificationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/advanced/notification/src/notifications.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/advanced/notification/src/notifications.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { NotificationsService } from './notifications.service';\n\n@Controller()\nexport class NotificationsController {\n  constructor(private readonly notificationsService: NotificationsService) {}\n\n  @Get()\n  getHello(): string {\n    return this.notificationsService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_providers\n\n\n\n\nNotificationsService\n\nNotificationsService\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            original/xxx/apps/advanced/notification/src/notifications.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotificationsController } from './notifications.controller';\nimport { NotificationsService } from './notifications.service';\n\n@Module({\n  imports: [],\n  controllers: [NotificationsController],\n  providers: [NotificationsService],\n})\nexport class NotificationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/advanced/notification/src/notifications.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/apps/advanced/notification/src/notifications.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class NotificationsService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthCredentials.html":{"url":"classes/OAuthCredentials.html","title":"class - OAuthCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/entities/credentials.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Credentials\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                oauthToken\n                            \n                            \n                                    \n                                    Optional\n                                oauthTokenSecret\n                            \n                            \n                                    \n                                provider\n                            \n                            \n                                    \n                                providerAccountId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        oauthToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        oauthTokenSecret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CredentialsProvider\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: CredentialsProvider})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        providerAccountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:102\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, ManyToOne } from 'typeorm';\nimport { AuthAccount } from './account.entity';\nimport { AuthMetadata } from './common.entity';\n\nexport enum CredentialsType {\n  USERNAME = 'USERNAME',\n  EMAIL = 'EMAIL',\n  OIDC = 'OIDC',\n  OAUTH = 'OAUTH',\n}\n\nexport enum CredentialsProvider {\n  PASSWORD = 'PASSWORD',\n  GOOGLE = 'GOOGLE',\n}\n\nexport enum TokenType {\n  BEARER = 'BEARER',\n}\n\n@Entity()\nexport class Credentials extends AuthMetadata {\n  /**\n   * USER INFO\n   */\n  @ManyToOne(() => AuthAccount, (user) => user.credentials, {\n    orphanedRowAction: 'delete',\n  })\n  account: AuthAccount;\n\n  /**\n   * JWT\n   */\n  @Column({ type: 'enum', enum: CredentialsType })\n  type: CredentialsType;\n\n  @Column()\n  accessToken?: string;\n\n  @Column()\n  expiresAt?: number;\n\n  @Column()\n  refreshToken?: string;\n\n  @Column()\n  refreshTokenExpiresIn?: number;\n\n  @Column({ type: 'enum', enum: TokenType })\n  tokenType?: string;\n\n  @Column()\n  scope?: string;\n\n  @Column()\n  idToken?: string;\n\n  @Column()\n  sessionState?: string;\n\n  /**\n   * TODO: Abstract these to below classes\n   */\n  @Column({ unique: true })\n  username?: string;\n\n  @Column({ unique: true, nullable: true })\n  email?: string;\n\n  @Column()\n  password?: string;\n\n  @Column({ type: 'enum', enum: CredentialsProvider })\n  provider: CredentialsProvider;\n\n  @Column()\n  providerAccountId: string;\n\n  @Column()\n  oauthTokenSecret?: string;\n\n  @Column()\n  oauthToken?: string;\n}\n\nexport class PasswordCredentials extends Credentials {\n  @Column({ unique: true })\n  username?: string;\n\n  @Column({ unique: true, nullable: true })\n  email?: string;\n\n  @Column()\n  password?: string;\n}\n\nexport class OAuthCredentials extends Credentials {\n  @Column({ type: 'enum', enum: CredentialsProvider })\n  provider: CredentialsProvider;\n\n  @Column()\n  providerAccountId: string;\n\n  @Column()\n  oauthTokenSecret?: string;\n\n  @Column()\n  oauthToken?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Opinion.html":{"url":"classes/Opinion.html","title":"class - Opinion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Opinion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n            \n                Description\n            \n            \n                POST - OPINION\n\n            \n\n            \n                Extends\n            \n            \n                            Post\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                agrees\n                            \n                            \n                                disagrees\n                            \n                            \n                                author\n                            \n                            \n                                comments\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                shares\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        agrees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disagrees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Organizer.html":{"url":"entities/Organizer.html","title":"entity - Organizer","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Organizer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/account/organizer.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                account\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                experienceSummary\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                services\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, account => account.organizer)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/organizer.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        experienceSummary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/organizer.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/organizer.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/organizer.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  OneToOne,\n  JoinTable,\n  Relation,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport { OrganizerAccount } from './base/account.entity';\nimport { Business } from './base/business.class';\n\n@Entity()\nexport class Organizer extends Business {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @OneToOne(() => OrganizerAccount, (account) => account.organizer)\n  @JoinTable()\n  account: Relation;\n\n  @Column()\n  @ApiProperty()\n  experienceSummary?: string;\n\n  @Column()\n  @ApiProperty()\n  services: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizerAccount.html":{"url":"classes/OrganizerAccount.html","title":"class - OrganizerAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizerAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/account/base/account.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                managedBy\n                            \n                            \n                                    \n                                organizer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        managedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.managedAccounts)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:165\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, organizer => organizer.account)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:168\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  OneToOne,\n  Relation,\n  TableInheritance,\n  ChildEntity,\n  ManyToOne,\n  ManyToMany,\n  JoinTable,\n  // ManyToOne,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { VersionedResource } from '../../common/resource.entity';\nimport { AccountType } from '../../../enums/account-type.enum';\nimport { Band } from '../band.entity';\nimport { Venue } from '../venue.entity';\nimport { Musician } from '../musician.entity';\nimport { Organizer } from '../organizer.entity';\nimport { Genre } from '../../tags/genre.entity';\nimport { PerformerUser } from '../../user';\n\n@Entity()\n@TableInheritance({ column: 'type' })\nexport class Account extends VersionedResource {\n  /**\n   * DISCRIMINATOR\n   */\n  @Column({\n    type: 'enum',\n    enum: AccountType,\n  })\n  type: AccountType;\n\n  /**\n   * METADATA\n   */\n  @Column({ default: true })\n  @ApiProperty({ example: true })\n  isActive: boolean;\n\n  @Column()\n  deactivatedAt: Date;\n\n  /**\n   * BASIC INFO\n   */\n  @Column()\n  @ApiProperty({\n    description: 'Account name.',\n    example: 'Account',\n  })\n  name: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'About account.',\n    example: 'About',\n  })\n  about?: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'Account avatar url.',\n    example: 'https://example.com/image.png',\n  })\n  avatarUrl?: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'Account thumbnail image url.',\n    example: 'https://example.com/image.png',\n  })\n  imageUrl?: string;\n\n  @ManyToMany(() => Genre, (genre) => genre.accounts)\n  @JoinTable({ name: 'account_genres' })\n  @ApiProperty()\n  genres?: Relation[];\n\n  /**\n   * SOCIAL ACCOUNTS\n   */\n  @Column()\n  @ApiProperty()\n  websiteUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  youtubeUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  facebookUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  twitterUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  instagramUrl?: string;\n\n  /**\n   * CONTACT\n   */\n  @Column()\n  @ApiProperty()\n  canEmail: boolean;\n\n  @Column()\n  @ApiProperty()\n  canText: boolean;\n\n  @Column()\n  @ApiProperty()\n  canCall: boolean;\n\n  /**\n   * AFFILIATES\n   */\n  // @ManyToMany(() => Musician)\n  // affiliatedMusicians: Relation;\n\n  // @ManyToMany(() => Band)\n  // affiliatedBands: Relation;\n\n  // @ManyToMany(() => Organizer)\n  // affiliatedOrganizers: Relation;\n\n  // @ManyToMany(() => Venue)\n  // affiliatedVenues: Relation;\n}\n\n@ChildEntity(AccountType.MUSICIAN)\nexport class MusicianAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Musician, (musician) => musician.account)\n  musician: Relation;\n}\n\n@ChildEntity(AccountType.BAND)\nexport class BandAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Band, (band) => band.account)\n  band: Relation;\n}\n\n@ChildEntity(AccountType.VENUE)\nexport class VenueAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Venue, (venue) => venue.account)\n  venue: Relation;\n}\n\n@ChildEntity(AccountType.ORGANIZER)\nexport class OrganizerAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Organizer, (organizer) => organizer.account)\n  organizer: Relation;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizerReview.html":{"url":"classes/OrganizerReview.html","title":"class - OrganizerReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizerReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Review\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                organizer\n                            \n                            \n                                reviewType\n                            \n                            \n                                agrees\n                            \n                            \n                                disagrees\n                            \n                            \n                                author\n                            \n                            \n                                comments\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                shares\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organizer\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reviewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReviewType\n\n                    \n                \n                \n                    \n                        Default value : ReviewType.ORGANIZER\n                    \n                \n                        \n                            \n                                Inherited from         Review\n\n                            \n                        \n                    \n                        \n                                Defined in         Review:92\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agrees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Opinion\n\n                            \n                        \n                    \n                        \n                                Defined in         Opinion:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disagrees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Opinion\n\n                            \n                        \n                    \n                        \n                                Defined in         Opinion:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizerUser.html":{"url":"classes/OrganizerUser.html","title":"class - OrganizerUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizerUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/user.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Credentials } from './auth';\n\nexport class User {\n  /**\n   * METADATA\n   */\n  id: string;\n  createdAt: Date;\n  lastUpdatedAt: Date;\n  isActive: boolean;\n\n  /**\n   * CREDENTIALS\n   */\n  role: UserRole;\n  credentials: Credentials;\n\n  /**\n   * BASIC INFO\n   */\n  firstName: string;\n  lastName: string;\n}\n\nexport enum UserRole {\n  PUBLIC,\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  ASSOCIATE,\n}\n\nexport class PublicUser {}\nexport class PerformerUser {}\nexport class VenueUser {}\nexport class OrganizerUser {}\nexport class AssociateUser {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizerUser-1.html":{"url":"classes/OrganizerUser-1.html","title":"class - OrganizerUser-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizerUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/user/organizer.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                managedAccounts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        managedAccounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Relation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, account => account.managedBy)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/organizer.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChildEntity, OneToMany, Relation } from 'typeorm';\nimport { User } from './base.entity';\nimport { UserRole } from '../../enums/user-role.enum';\nimport { OrganizerAccount } from '../account/base/account.entity';\n\n@ChildEntity(UserRole.ORGANIZER)\nexport class OrganizerUser extends User {\n  @OneToMany(() => OrganizerAccount, (account) => account.managedBy)\n  managedAccounts: Relation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrganizersController.html":{"url":"controllers/OrganizersController.html","title":"controller - OrganizersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrganizersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/gateways/rest/src/controllers/organizers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                organizers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createOrganizerDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/organizers.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOrganizerDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/organizers.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/organizers.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/organizers.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateOrganizerDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/organizers.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateOrganizerDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\n\n@Controller('organizers')\nexport class OrganizersController {\n  constructor() {}\n\n  @Post()\n  create(@Body() createOrganizerDto: any) {\n    return `This creates a Organizer with shape: ${createOrganizerDto}`;\n  }\n\n  @Get()\n  findAll() {\n    return 'This finds all Organizers';\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return `This finds a single Organizer with id: ${id}`;\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateOrganizerDto: any) {\n    return `This updates a single Organizer with id: ${id}, and data: ${updateOrganizerDto}`;\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return `This deletes Organizer with id: ${id}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganizersModule.html":{"url":"modules/OrganizersModule.html","title":"module - OrganizersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganizersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganizersModule\n\n\n\ncluster_OrganizersModule_providers\n\n\n\n\nOrganizersService\n\nOrganizersService\n\n\n\nOrganizersModule\n\nOrganizersModule\n\nOrganizersModule -->\n\nOrganizersService->OrganizersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/resources/organizers/organizers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrganizersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrganizersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrganizersService } from './organizers.service';\nimport { OrganizersController } from './organizers.controller';\n\n@Module({\n  controllers: [OrganizersController],\n  providers: [OrganizersService],\n})\nexport class OrganizersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizersService.html":{"url":"injectables/OrganizersService.html","title":"injectable - OrganizersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/resources/organizers/organizers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createOrganizerDto: CreateOrganizerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/organizers/organizers.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOrganizerDto\n                                            \n                                                            CreateOrganizerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/organizers/organizers.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/organizers/organizers.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/organizers/organizers.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateOrganizerDto: UpdateOrganizerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/organizers/organizers.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateOrganizerDto\n                                            \n                                                            UpdateOrganizerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateOrganizerDto, UpdateOrganizerDto } from '@app/data/dto';\n\n@Injectable()\nexport class OrganizersService {\n  create(createOrganizerDto: CreateOrganizerDto) {\n    return 'This action adds a new organizer';\n  }\n\n  findAll() {\n    return `This action returns all organizers`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} organizer`;\n  }\n\n  update(id: number, updateOrganizerDto: UpdateOrganizerDto) {\n    return `This action updates a #${id} organizer`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} organizer`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PASystem.html":{"url":"classes/PASystem.html","title":"class - PASystem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PASystem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/stage.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PhysicalSpace, VersionedResource } from './common';\n\nexport enum StageType {}\nexport class Stage extends VersionedResource implements PhysicalSpace {\n  capacity: number;\n}\n\nexport class PASystem {}\nexport class BackLine {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordCredentials.html":{"url":"classes/PasswordCredentials.html","title":"class - PasswordCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/entities/credentials.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Credentials\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/credentials.entity.ts:88\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, ManyToOne } from 'typeorm';\nimport { AuthAccount } from './account.entity';\nimport { AuthMetadata } from './common.entity';\n\nexport enum CredentialsType {\n  USERNAME = 'USERNAME',\n  EMAIL = 'EMAIL',\n  OIDC = 'OIDC',\n  OAUTH = 'OAUTH',\n}\n\nexport enum CredentialsProvider {\n  PASSWORD = 'PASSWORD',\n  GOOGLE = 'GOOGLE',\n}\n\nexport enum TokenType {\n  BEARER = 'BEARER',\n}\n\n@Entity()\nexport class Credentials extends AuthMetadata {\n  /**\n   * USER INFO\n   */\n  @ManyToOne(() => AuthAccount, (user) => user.credentials, {\n    orphanedRowAction: 'delete',\n  })\n  account: AuthAccount;\n\n  /**\n   * JWT\n   */\n  @Column({ type: 'enum', enum: CredentialsType })\n  type: CredentialsType;\n\n  @Column()\n  accessToken?: string;\n\n  @Column()\n  expiresAt?: number;\n\n  @Column()\n  refreshToken?: string;\n\n  @Column()\n  refreshTokenExpiresIn?: number;\n\n  @Column({ type: 'enum', enum: TokenType })\n  tokenType?: string;\n\n  @Column()\n  scope?: string;\n\n  @Column()\n  idToken?: string;\n\n  @Column()\n  sessionState?: string;\n\n  /**\n   * TODO: Abstract these to below classes\n   */\n  @Column({ unique: true })\n  username?: string;\n\n  @Column({ unique: true, nullable: true })\n  email?: string;\n\n  @Column()\n  password?: string;\n\n  @Column({ type: 'enum', enum: CredentialsProvider })\n  provider: CredentialsProvider;\n\n  @Column()\n  providerAccountId: string;\n\n  @Column()\n  oauthTokenSecret?: string;\n\n  @Column()\n  oauthToken?: string;\n}\n\nexport class PasswordCredentials extends Credentials {\n  @Column({ unique: true })\n  username?: string;\n\n  @Column({ unique: true, nullable: true })\n  email?: string;\n\n  @Column()\n  password?: string;\n}\n\nexport class OAuthCredentials extends Credentials {\n  @Column({ type: 'enum', enum: CredentialsProvider })\n  provider: CredentialsProvider;\n\n  @Column()\n  providerAccountId: string;\n\n  @Column()\n  oauthTokenSecret?: string;\n\n  @Column()\n  oauthToken?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordLogin.html":{"url":"classes/PasswordLogin.html","title":"class - PasswordLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/dto/login.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { exampleUser } from '@app/data/examples/user.example';\n\nexport enum LoginType {\n  USERNAME = 'USERNAME',\n  EMAIL = 'EMAIL',\n  GOOGLE = 'GOOGLE',\n}\n\ninterface LoginBase {\n  type: LoginType;\n}\n\nabstract class PasswordLogin {\n  @ApiProperty({ example: 'password' })\n  password: string;\n}\n\nexport class UsernameLoginDto extends PasswordLogin implements LoginBase {\n  @ApiProperty({ example: LoginType.USERNAME })\n  type: LoginType.USERNAME;\n\n  @ApiProperty({ example: exampleUser.username })\n  username: string;\n}\n\nexport class EmailLoginDto extends PasswordLogin {\n  @ApiProperty({ example: LoginType.EMAIL })\n  type: LoginType.EMAIL;\n\n  @ApiProperty({ example: exampleUser.username })\n  email: string;\n}\n\nexport class GoogleLoginDto implements LoginBase {\n  @ApiProperty({ example: LoginType.GOOGLE })\n  type: LoginType.GOOGLE;\n\n  @ApiProperty()\n  clientId: string;\n\n  @ApiProperty()\n  clientSecret: string;\n}\n\nexport type LoginDto = UsernameLoginDto | EmailLoginDto | GoogleLoginDto;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PastEvent.html":{"url":"classes/PastEvent.html","title":"class - PastEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PastEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/event.ts\n        \n\n\n            \n                Description\n            \n            \n                PAST EVENT\n\n            \n\n            \n                Extends\n            \n            \n                            PickType(PublishedEvent, [\n  'admins',\n  'bands',\n  'bookmarkedBy',\n  'createdAt',\n  'createdBy',\n  'description',\n  'genres',\n  'id',\n  'imageUrl',\n  'keywords',\n  'musicians',\n  'organizer',\n  'stage',\n  'timeStart',\n  'title',\n  'venue',\n])\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType, OmitType, PickType } from '@nestjs/mapped-types';\nimport { Band, Musician, Organizer, Stage, Venue } from './account';\nimport { EventKeyword, Genre, VersionedResource } from './common';\nimport { User } from './user';\n\nexport enum EventType {\n  AMBIENT,\n  OPEN_MIC,\n  JAM_SESSION,\n  MEETUP,\n}\n\nexport enum EventStatus {\n  CANCELLED,\n  POSTPONED,\n  SCHEDULED,\n  RESCHEDULED,\n  UNSCHEDULED,\n}\n\n/**\n * EVENT\n *\n *\n *\n */\nexport class Event extends VersionedResource {\n  /* METADATA */\n  createdBy: User;\n  lastUpdatedBy: User;\n\n  /* PRIVILEGES */\n  admins: User[];\n  editors: User[];\n  viewers: User[];\n\n  /* BASIC INFO */\n  title: string;\n  description?: string;\n  imageUrl?: string;\n\n  /* TAGS */\n  genres: Genre[];\n  keywords: EventKeyword[];\n\n  /* DATE TIME INFO */\n  timeDoor?: Date;\n  timeStart: Date;\n  timeEnd?: Date;\n\n  /* EVENT DETAILS */\n  isPrivate: boolean;\n  isFree: boolean;\n  isChildFriendly: boolean;\n  isHoliday: boolean;\n  ageRestriction: boolean;\n  minimumAge?: number;\n  servesAlcohol: boolean;\n  servesFood: boolean;\n  requiresRegistration: boolean;\n  registrationLink?: string;\n  requiresTicket: boolean;\n\n  /* EVENT LOCATION */\n  venue: Venue;\n  stage: Stage;\n\n  /* EVENT PARTICIPANTS */\n  musicians: Musician[];\n  bands: Band[];\n  organizer?: Organizer;\n}\n\n/**\n * PUBLISHED EVENT\n *\n *\n *\n */\nexport class PublishedEvent extends Event {\n  /* PUBLISHED SPECIFIC */\n  status: EventStatus;\n  timeStartPrevious?: Date;\n  ticketLinks?: string[];\n\n  /* EVENT AUDIENCE */\n  bookmarkedBy: User[];\n  registeredUsers: User[];\n}\n\n/**\n * EVENT DRAFT\n *\n *\n *\n */\nexport class EventDraft extends PartialType(\n  OmitType(PublishedEvent, [\n    'bookmarkedBy',\n    'timeStartPrevious',\n    'registeredUsers',\n    'status',\n  ]),\n) {}\n\n/**\n * EVENT TEMPLATE\n *\n *\n *\n */\nexport class EventTemplate extends PartialType(Event) {\n  templateName: string;\n  templateDescription?: string;\n  duration?: number;\n}\n\n/**\n * PAST EVENT\n *\n *\n *\n */\nexport class PastEvent extends PickType(PublishedEvent, [\n  'admins',\n  'bands',\n  'bookmarkedBy',\n  'createdAt',\n  'createdBy',\n  'description',\n  'genres',\n  'id',\n  'imageUrl',\n  'keywords',\n  'musicians',\n  'organizer',\n  'stage',\n  'timeStart',\n  'title',\n  'venue',\n]) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PatchOptions.html":{"url":"interfaces/PatchOptions.html","title":"interface - PatchOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PatchOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/decorators/src/resource/update.decorator.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Omit\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotFoundException, applyDecorators } from '@nestjs/common';\nimport { Patch } from '@nestjs/common';\nimport {\n  ApiOkResponse,\n  ApiNotFoundResponse,\n  ApiResponseMetadata,\n} from '@nestjs/swagger';\n\ninterface PatchOptions extends Omit {\n  path?: string;\n}\n\nexport function Update({ path = ':id', ...apiMetadata }: PatchOptions) {\n  return applyDecorators(\n    Patch(path),\n    ApiOkResponse(apiMetadata),\n    ApiNotFoundResponse({ type: NotFoundException, description: 'Not Found.' }),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Performer.html":{"url":"classes/Performer.html","title":"class - Performer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Performer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/account/base/performer.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                bandcampUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                pressKitUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                spotifyUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        bandcampUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/performer.class.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        pressKitUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/performer.class.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        spotifyUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/performer.class.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Column } from 'typeorm';\n\nexport abstract class Performer {\n  @Column()\n  @ApiProperty()\n  spotifyUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  bandcampUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  pressKitUrl?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PerformerAccount.html":{"url":"classes/PerformerAccount.html","title":"class - PerformerAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PerformerAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/account.ts\n        \n\n\n            \n                Description\n            \n            \n                EXTENDED ACCOUNT\n\n            \n\n            \n                Extends\n            \n            \n                            Account\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bandcampUrl\n                            \n                            \n                                    Optional\n                                pressKitUrl\n                            \n                            \n                                    Optional\n                                spotifyUrl\n                            \n                            \n                                    Optional\n                                about\n                            \n                            \n                                affiliatedBands\n                            \n                            \n                                affiliatedMusicians\n                            \n                            \n                                affiliatedOrganizers\n                            \n                            \n                                affiliatedVenues\n                            \n                            \n                                    Optional\n                                avatarUrl\n                            \n                            \n                                canCall\n                            \n                            \n                                canEmail\n                            \n                            \n                                canText\n                            \n                            \n                                deactivatedAt\n                            \n                            \n                                    Optional\n                                facebookUrl\n                            \n                            \n                                    Optional\n                                genres\n                            \n                            \n                                    Optional\n                                imageUrl\n                            \n                            \n                                    Optional\n                                instagramUrl\n                            \n                            \n                                isActive\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                twitterUrl\n                            \n                            \n                                    Optional\n                                websiteUrl\n                            \n                            \n                                    Optional\n                                youtubeUrl\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bandcampUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/account.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pressKitUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/account.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        spotifyUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/account.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        about\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        affiliatedBands\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Band[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        affiliatedMusicians\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Musician[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        affiliatedOrganizers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organizer[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        affiliatedVenues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Venue[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:43\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatarUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canCall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        facebookUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Genre[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        instagramUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        twitterUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        websiteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        youtubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Account\n\n                            \n                        \n                    \n                        \n                                Defined in         Account:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Genre,\n  Instrument,\n  PhysicalSpace,\n  VenueKeyword,\n  VersionedResource,\n} from './common';\n\n/**\n * ACCOUNT\n *\n *\n *\n */\nexport class Account extends VersionedResource {\n  /* METADATA */\n  isActive: boolean;\n  deactivatedAt: Date;\n\n  /* BASIC INFO */\n  name: string;\n  about?: string;\n  avatarUrl?: string;\n  imageUrl?: string;\n  genres?: Genre[];\n\n  /* SOCIAL ACCOUNTS */\n  websiteUrl?: string;\n  youtubeUrl?: string;\n  facebookUrl?: string;\n  twitterUrl?: string;\n  instagramUrl?: string;\n\n  /* CONTACT */\n  canEmail: boolean;\n  canText: boolean;\n  canCall: boolean;\n\n  /* AFFILIATES */\n  affiliatedMusicians: Musician[];\n  affiliatedBands: Band[];\n  affiliatedOrganizers: Organizer[];\n  affiliatedVenues: Venue[];\n}\n\n/**\n * EXTENDED ACCOUNT\n *\n *\n *\n */\nexport class PerformerAccount extends Account {\n  spotifyUrl?: string;\n  bandcampUrl?: string;\n  pressKitUrl?: string;\n}\n\nexport class BusinessAccount extends Account {\n  googleBusinessUrl?: string;\n  yelpUrl?: string;\n}\n\n/**\n * MUSICIAN\n *\n *\n *\n */\nexport class Musician extends PerformerAccount {\n  instruments: Instrument[];\n  bands: Band[];\n}\n\n/**\n * BAND\n *\n *\n *\n */\nexport class Band extends PerformerAccount {\n  members: Musician[];\n}\n\n/**\n * VENUE\n *\n *\n *\n */\nexport enum VenueType {\n  VENUE,\n  RESTAURANT,\n  CAFE,\n  BAR,\n  BREWERY,\n  WINERY,\n  DISTILLERY,\n  CLUB,\n  THEATER,\n  GALLERY,\n  AREA,\n  CASINO,\n  LOCATION,\n  COMPLEX,\n  STADIUM,\n}\nexport enum StageType {\n  STAGE,\n  AREA,\n  ROOM,\n}\nexport class Venue extends BusinessAccount implements PhysicalSpace {\n  capacity: number;\n  /* BASIC INFO */\n  type: VenueType;\n  keywords: VenueKeyword[];\n\n  /* VENUE DETAILS */\n  servesAlcohol: boolean;\n  servesFood: boolean;\n  ageRestriction: boolean;\n  minimumAge?: number;\n  requiresReservation: boolean;\n  reservationLink?: string;\n  privateAccess: boolean;\n\n  /* STAGES */\n  stages: Stage[];\n\n  /* LOCATION */\n\n  /* AFFILIATES */\n  affiliatedMusicians: Musician[];\n  affiliatedBands: Band[];\n  affiliatedOrganizers: Organizer[];\n  affiliatedVenues: Venue[];\n}\nexport class Stage extends VersionedResource implements PhysicalSpace {\n  capacity: number;\n  name: string;\n  type: 'STAGE' | 'ROOM' | 'AREA';\n  imageUrl: string;\n  description: string;\n  venue: Venue;\n}\n\n/**\n * ORGANIZER\n *\n *\n *\n */\nexport class Organizer extends BusinessAccount {\n  experienceSummary?: string;\n  services: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PerformerReview.html":{"url":"classes/PerformerReview.html","title":"class - PerformerReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PerformerReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Review\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                performer\n                            \n                            \n                                reviewType\n                            \n                            \n                                agrees\n                            \n                            \n                                disagrees\n                            \n                            \n                                author\n                            \n                            \n                                comments\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                shares\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        performer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reviewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReviewType\n\n                    \n                \n                \n                    \n                        Default value : ReviewType.PERFORMER\n                    \n                \n                        \n                            \n                                Inherited from         Review\n\n                            \n                        \n                    \n                        \n                                Defined in         Review:84\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agrees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Opinion\n\n                            \n                        \n                    \n                        \n                                Defined in         Opinion:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disagrees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Opinion\n\n                            \n                        \n                    \n                        \n                                Defined in         Opinion:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PerformerUser.html":{"url":"classes/PerformerUser.html","title":"class - PerformerUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PerformerUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/user.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Credentials } from './auth';\n\nexport class User {\n  /**\n   * METADATA\n   */\n  id: string;\n  createdAt: Date;\n  lastUpdatedAt: Date;\n  isActive: boolean;\n\n  /**\n   * CREDENTIALS\n   */\n  role: UserRole;\n  credentials: Credentials;\n\n  /**\n   * BASIC INFO\n   */\n  firstName: string;\n  lastName: string;\n}\n\nexport enum UserRole {\n  PUBLIC,\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  ASSOCIATE,\n}\n\nexport class PublicUser {}\nexport class PerformerUser {}\nexport class VenueUser {}\nexport class OrganizerUser {}\nexport class AssociateUser {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PerformerUser-1.html":{"url":"classes/PerformerUser-1.html","title":"class - PerformerUser-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PerformerUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/user/performer.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                managedAccounts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        managedAccounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Relation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, account => account.managedBy)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/performer.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChildEntity, OneToMany, Relation } from 'typeorm';\nimport { User } from './base.entity';\nimport { UserRole } from '../../enums/user-role.enum';\nimport { MusicianAccount } from '../account/base/account.entity';\n\n@ChildEntity(UserRole.PERFORMER)\nexport class PerformerUser extends User {\n  @OneToMany(() => MusicianAccount, (account) => account.managedBy)\n  managedAccounts: Relation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhysicalSpace.html":{"url":"interfaces/PhysicalSpace.html","title":"interface - PhysicalSpace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PhysicalSpace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/common.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            capacity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        capacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export abstract class Resource {\n  id: string;\n  createdAt: Date;\n  lastUpdatedAt: Date;\n}\n\nexport abstract class VersionedResource extends Resource {\n  version: number;\n}\n\nexport abstract class Tag {\n  id: string;\n  displayName: string;\n  description?: string;\n}\n\nexport class Genre {}\nexport class EventKeyword {}\nexport class VenueKeyword {}\n\nexport class Instrument {}\n\nexport interface PhysicalSpace {\n  capacity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhysicalSpace-1.html":{"url":"interfaces/PhysicalSpace-1.html","title":"interface - PhysicalSpace-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PhysicalSpace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/interfaces/physical-space.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            capacity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        capacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PhysicalSpace {\n  capacity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            VersionedResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                comments\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                shares\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PresenceController.html":{"url":"controllers/PresenceController.html","title":"controller - PresenceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PresenceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/advanced/presence/src/presence.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/advanced/presence/src/presence.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { PresenceService } from './presence.service';\n\n@Controller()\nexport class PresenceController {\n  constructor(private readonly presenceService: PresenceService) {}\n\n  @Get()\n  getHello(): string {\n    return this.presenceService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PresenceModule.html":{"url":"modules/PresenceModule.html","title":"module - PresenceModule","body":"\n                   \n\n\n\n\n    Modules\n    PresenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PresenceModule\n\n\n\ncluster_PresenceModule_providers\n\n\n\n\nPresenceService\n\nPresenceService\n\n\n\nPresenceModule\n\nPresenceModule\n\nPresenceModule -->\n\nPresenceService->PresenceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            original/xxx/apps/advanced/presence/src/presence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PresenceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PresenceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PresenceController } from './presence.controller';\nimport { PresenceService } from './presence.service';\n\n@Module({\n  imports: [],\n  controllers: [PresenceController],\n  providers: [PresenceService],\n})\nexport class PresenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PresenceService.html":{"url":"injectables/PresenceService.html","title":"injectable - PresenceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PresenceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/advanced/presence/src/presence.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/apps/advanced/presence/src/presence.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PresenceService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrivateGroup.html":{"url":"classes/PrivateGroup.html","title":"class - PrivateGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrivateGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Group\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                administrators\n                            \n                            \n                                isPublic\n                            \n                            \n                                managedBy\n                            \n                            \n                                moderators\n                            \n                            \n                                broadcasts\n                            \n                            \n                                bulletins\n                            \n                            \n                                description\n                            \n                            \n                                isActive\n                            \n                            \n                                lastInteractionAt\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                opinions\n                            \n                            \n                                statements\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        administrators\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:205\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPublic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:203\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        managedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:204\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moderators\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:206\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        broadcasts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Broadcast[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Group\n\n                            \n                        \n                    \n                        \n                                Defined in         Group:182\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bulletins\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Bulletin[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Group\n\n                            \n                        \n                    \n                        \n                                Defined in         Group:183\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Group\n\n                            \n                        \n                    \n                        \n                                Defined in         Group:174\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         Group\n\n                            \n                        \n                    \n                        \n                                Defined in         Group:177\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastInteractionAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Group\n\n                            \n                        \n                    \n                        \n                                Defined in         Group:176\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Group\n\n                            \n                        \n                    \n                        \n                                Defined in         Group:175\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Group\n\n                            \n                        \n                    \n                        \n                                Defined in         Group:173\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opinions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Opinion[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Group\n\n                            \n                        \n                    \n                        \n                                Defined in         Group:181\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Statement[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Group\n\n                            \n                        \n                    \n                        \n                                Defined in         Group:180\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublicUser.html":{"url":"classes/PublicUser.html","title":"class - PublicUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublicUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/user.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Credentials } from './auth';\n\nexport class User {\n  /**\n   * METADATA\n   */\n  id: string;\n  createdAt: Date;\n  lastUpdatedAt: Date;\n  isActive: boolean;\n\n  /**\n   * CREDENTIALS\n   */\n  role: UserRole;\n  credentials: Credentials;\n\n  /**\n   * BASIC INFO\n   */\n  firstName: string;\n  lastName: string;\n}\n\nexport enum UserRole {\n  PUBLIC,\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  ASSOCIATE,\n}\n\nexport class PublicUser {}\nexport class PerformerUser {}\nexport class VenueUser {}\nexport class OrganizerUser {}\nexport class AssociateUser {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublicUser-1.html":{"url":"classes/PublicUser-1.html","title":"class - PublicUser-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublicUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/user/public.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChildEntity } from 'typeorm';\nimport { User } from './base.entity';\nimport { UserRole } from '../../enums/user-role.enum';\n\n@ChildEntity(UserRole.PUBLIC)\nexport class PublicUser extends User {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PublishedEvent.html":{"url":"entities/PublishedEvent.html","title":"entity - PublishedEvent","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PublishedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/event/published.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bands\n                            \n                            \n                                bookmarkedBy\n                            \n                            \n                                    \n                                    \n                                genres\n                            \n                            \n                                keywords\n                            \n                            \n                                musicians\n                            \n                            \n                                    Optional\n                                organizer\n                            \n                            \n                                registeredUsers\n                            \n                            \n                                stage\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    Optional\n                                ticketLinks\n                            \n                            \n                                    \n                                    Optional\n                                timeStartPrevious\n                            \n                            \n                                venue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bands\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Band[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/published.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bookmarkedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/published.entity.ts:64\n                        \n                    \n\n            \n                \n                    EVENT AUDIENCE\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, genre => genre.publishedEvents)@JoinTable({name: 'published_event_genres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/published.entity.ts:33\n                        \n                    \n\n            \n                \n                    TAGS\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keywords\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/published.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        musicians\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Musician[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/published.entity.ts:51\n                        \n                    \n\n            \n                \n                    EVENT PARTICIPANTS\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organizer\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/published.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/published.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Stage\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/published.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: EventStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/published.entity.ts:21\n                        \n                    \n\n            \n                \n                    PUBLISHED SPECIFIC\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ticketLinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/published.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        timeStartPrevious\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/published.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        venue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Venue\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/event/published.entity.ts:42\n                        \n                    \n\n            \n                \n                    EVENT LOCATION\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinTable, ManyToMany, Relation } from 'typeorm';\n// import { ApiProperty } from '@nestjs/swagger';\n\nimport { Musician } from '../account/musician.entity';\nimport { Band } from '../account/band.entity';\nimport { Venue } from '../account/venue.entity';\nimport { Organizer } from '../account/organizer.entity';\nimport { Stage } from '../account/stage.entity';\nimport { EventKeyword } from '../tags/event-keyword.entity';\nimport { BaseEvent } from './base.entity';\nimport { Genre } from '../tags/genre.entity';\nimport { User } from '../user/base.entity';\nimport { EventStatus } from '@app/data/enums';\n\n@Entity()\nexport class PublishedEvent extends BaseEvent {\n  /**\n   * PUBLISHED SPECIFIC\n   */\n  @Column({ type: 'enum', enum: EventStatus, default: EventStatus.UNSCHEDULED })\n  status: EventStatus;\n\n  @Column()\n  timeStartPrevious?: Date;\n\n  ticketLinks?: string[];\n\n  /**\n   * TAGS\n   */\n  @ManyToMany(() => Genre, (genre) => genre.publishedEvents)\n  @JoinTable({ name: 'published_event_genres' })\n  genres: Relation;\n\n  // @ManyToMany(() => EventKeyword, (keyword) => keyword.publishedEvents)\n  keywords: Relation;\n\n  /**\n   * EVENT LOCATION\n   */\n  // @ManyToOne(() => Venue)\n  venue: Venue;\n\n  // @ManyToOne(() => Stage)\n  stage: Stage;\n\n  /**\n   * EVENT PARTICIPANTS\n   */\n  // @ManyToMany(() => Musician)\n  musicians: Musician[];\n\n  // @ManyToMany(() => Band)\n  bands: Band[];\n\n  // @ManyToOne(() => Organizer)\n  organizer?: Organizer;\n\n  /**\n   * EVENT AUDIENCE\n   */\n  // @ManyToMany(() => User, (user) => user.bookmarkedEvents)\n  // @JoinTable()\n  bookmarkedBy: Relation;\n\n  // @ManyToMany(() => User, (user) => user.registeredEvents)\n  // @JoinTable()\n  registeredUsers: User[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/dto/register.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/dto/register.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/dto/register.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/dto/register.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { exampleUser } from '@app/data/examples/user.example';\n\nexport class RegisterDto {\n  @ApiProperty({ example: exampleUser.firstName })\n  firstName: string;\n\n  @ApiProperty({ example: exampleUser.lastName })\n  lastName: string;\n\n  @ApiProperty({ example: exampleUser.username })\n  username: string;\n\n  @ApiProperty({ example: 'password' })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemovedComment.html":{"url":"classes/RemovedComment.html","title":"class - RemovedComment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemovedComment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/moderation.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ModerationAction\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Comment, Post } from './content';\nimport { Event } from './event';\nimport { User } from './user';\n\n/**\n *\n *\n *\n *\n */\nexport enum FlagType {\n  HATE_SPEECH,\n  DISCRIMINATION,\n  HARASSMENT,\n  THREATS,\n  SPAM,\n  MISINFORMATION,\n  ILLEGAL_CONTENT,\n  COPYRIGHT,\n  SEXUAL,\n  OTHER,\n}\nexport abstract class FlaggedItem {\n  id: string;\n  flaggedAt: Date;\n  flaggedBy: User;\n  flagType: FlagType;\n  reason: string;\n  assignedToModerator: User;\n  assignedToModeratorAt: Date;\n  moderatorReceived: boolean;\n  moderatorReceivedAt: Date;\n  resolved: boolean;\n  resolvedAt: Date;\n  actionsTaken: ModerationAction[];\n}\n\nexport class FlaggedEvent extends FlaggedItem {\n  event: Event;\n}\nexport class FlaggedPost extends FlaggedItem {\n  post: Post;\n}\nexport class FlaggedComment extends FlaggedItem {\n  comment: Comment;\n}\n\n/**\n *\n *\n *\n *\n */\nexport abstract class ModerationAction {}\nexport class IssuedWarning extends ModerationAction {}\nexport class BannedUser extends ModerationAction {}\nexport class RemovedComment extends ModerationAction {}\n\nexport class ResolvedCases {\n  resolutionDate: Date;\n  // Audit details etc\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedCases.html":{"url":"classes/ResolvedCases.html","title":"class - ResolvedCases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedCases\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/moderation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resolutionDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        resolutionDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/moderation.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Comment, Post } from './content';\nimport { Event } from './event';\nimport { User } from './user';\n\n/**\n *\n *\n *\n *\n */\nexport enum FlagType {\n  HATE_SPEECH,\n  DISCRIMINATION,\n  HARASSMENT,\n  THREATS,\n  SPAM,\n  MISINFORMATION,\n  ILLEGAL_CONTENT,\n  COPYRIGHT,\n  SEXUAL,\n  OTHER,\n}\nexport abstract class FlaggedItem {\n  id: string;\n  flaggedAt: Date;\n  flaggedBy: User;\n  flagType: FlagType;\n  reason: string;\n  assignedToModerator: User;\n  assignedToModeratorAt: Date;\n  moderatorReceived: boolean;\n  moderatorReceivedAt: Date;\n  resolved: boolean;\n  resolvedAt: Date;\n  actionsTaken: ModerationAction[];\n}\n\nexport class FlaggedEvent extends FlaggedItem {\n  event: Event;\n}\nexport class FlaggedPost extends FlaggedItem {\n  post: Post;\n}\nexport class FlaggedComment extends FlaggedItem {\n  comment: Comment;\n}\n\n/**\n *\n *\n *\n *\n */\nexport abstract class ModerationAction {}\nexport class IssuedWarning extends ModerationAction {}\nexport class BannedUser extends ModerationAction {}\nexport class RemovedComment extends ModerationAction {}\n\nexport class ResolvedCases {\n  resolutionDate: Date;\n  // Audit details etc\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resource.html":{"url":"classes/Resource.html","title":"class - Resource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/common.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/common.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/common.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/common.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Resource {\n  id: string;\n  createdAt: Date;\n  lastUpdatedAt: Date;\n}\n\nexport abstract class VersionedResource extends Resource {\n  version: number;\n}\n\nexport abstract class Tag {\n  id: string;\n  displayName: string;\n  description?: string;\n}\n\nexport class Genre {}\nexport class EventKeyword {}\nexport class VenueKeyword {}\n\nexport class Instrument {}\n\nexport interface PhysicalSpace {\n  capacity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resource-1.html":{"url":"classes/Resource-1.html","title":"class - Resource-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/common/resource.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()@ApiProperty({description: 'Resource created at.', example: 'createdAt'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/common/resource.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')@ApiProperty({description: 'Unique identifier for resource.', example: EXAMPLE_UUID})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/common/resource.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()@ApiProperty({description: 'Resource last updated at.', example: 'lastUpdatedAt'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/common/resource.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/common/resource.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EXAMPLE_UUID } from '../../examples/uuid.example';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  Column,\n  CreateDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n  VersionColumn,\n} from 'typeorm';\n\nexport abstract class Resource {\n  @PrimaryGeneratedColumn('uuid')\n  @ApiProperty({\n    description: 'Unique identifier for resource.',\n    example: EXAMPLE_UUID,\n  })\n  id: string;\n\n  @Column({ unique: true })\n  @ApiProperty()\n  slug: string;\n\n  @CreateDateColumn()\n  @ApiProperty({\n    description: 'Resource created at.',\n    example: 'createdAt',\n  })\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  @ApiProperty({\n    description: 'Resource last updated at.',\n    example: 'lastUpdatedAt',\n  })\n  lastUpdatedAt: Date;\n}\n\nexport abstract class VersionedResource extends Resource {\n  @VersionColumn()\n  @ApiProperty()\n  version: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Review.html":{"url":"classes/Review.html","title":"class - Review","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Review\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Opinion\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                reviewType\n                            \n                            \n                                agrees\n                            \n                            \n                                disagrees\n                            \n                            \n                                author\n                            \n                            \n                                comments\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                shares\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        reviewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReviewType\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agrees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Opinion\n\n                            \n                        \n                    \n                        \n                                Defined in         Opinion:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disagrees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Opinion\n\n                            \n                        \n                    \n                        \n                                Defined in         Opinion:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/auth/src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/guards/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/guards/roles.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES_KEY } from '@app/decorators';\nimport { UserRole } from '@app/data/enums';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(\n      ROLES_KEY,\n      [context.getHandler(), context.getClass()],\n    );\n    if (!requiredRoles) {\n      return true;\n    }\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user.roles?.includes(role));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard-1.html":{"url":"guards/RolesGuard-1.html","title":"guard - RolesGuard-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                original/xxx/auth/src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in original/xxx/auth/src/guards/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/auth/src/guards/roles.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { Roles } from './roles.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const roles = this.reflector.get(Roles, context.getHandler());\n    if (!roles) return true;\n\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return matchRoles(roles, user.roles);\n  }\n}\n\nfunction matchRoles(roles: string[], userRoles: string[]) {\n  const map = {};\n  for (const role of roles) {\n    map[role] = true;\n  }\n  for (const role of userRoles) {\n    if (map[role]) return true;\n  }\n  return false;\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Session.html":{"url":"classes/Session.html","title":"class - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/auth.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Credentials {}\n\nexport class AuthAccount {}\n\nexport class Session {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionsService.html":{"url":"injectables/SessionsService.html","title":"injectable - SessionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/services/sessions.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SessionsService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialAuthService.html":{"url":"injectables/SocialAuthService.html","title":"injectable - SocialAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SocialAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/services/social.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SocialAuthService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocialPost.html":{"url":"classes/SocialPost.html","title":"class - SocialPost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocialPost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocialPostDraft.html":{"url":"classes/SocialPostDraft.html","title":"class - SocialPostDraft","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocialPostDraft\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(SocialPost)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Stage.html":{"url":"entities/Stage.html","title":"entity - Stage","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Stage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/account/stage.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                capacity\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                imageUrl\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                venue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/stage.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/stage.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/stage.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/stage.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StageType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: StageType, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/stage.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        venue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, venue => venue.stages)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/stage.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ManyToOne, Relation } from 'typeorm';\nimport { PhysicalSpace } from '../../interfaces/physical-space.interface';\nimport { VersionedResource } from '../common/resource.entity';\nimport { StageType } from '../../enums';\nimport { Venue } from './venue.entity';\n\n@Entity()\nexport class Stage extends VersionedResource implements PhysicalSpace {\n  @Column()\n  capacity: number;\n\n  @Column()\n  name: string;\n\n  @Column({ type: 'enum', enum: StageType, default: StageType.AREA })\n  type: StageType;\n\n  @Column()\n  imageUrl: string;\n\n  @Column()\n  description: string;\n\n  @ManyToOne(() => Venue, (venue) => venue.stages)\n  venue: Relation;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stage-1.html":{"url":"classes/Stage-1.html","title":"class - Stage-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/stage.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            VersionedResource\n            \n\n            \n                Implements\n            \n            \n                            PhysicalSpace\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                capacity\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/stage.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PhysicalSpace, VersionedResource } from './common';\n\nexport enum StageType {}\nexport class Stage extends VersionedResource implements PhysicalSpace {\n  capacity: number;\n}\n\nexport class PASystem {}\nexport class BackLine {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Statement.html":{"url":"classes/Statement.html","title":"class - Statement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Statement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n            \n                Description\n            \n            \n                POST - STATEMENT\n\n            \n\n            \n                Extends\n            \n            \n                            VersionedResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StrategyModule.html":{"url":"modules/StrategyModule.html","title":"module - StrategyModule","body":"\n                   \n\n\n\n\n    Modules\n    StrategyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StrategyModule\n\n\n\ncluster_StrategyModule_exports\n\n\n\ncluster_StrategyModule_providers\n\n\n\n\nLocalStrategy \n\nLocalStrategy \n\n\n\nStrategyModule\n\nStrategyModule\n\nLocalStrategy  -->\n\nStrategyModule->LocalStrategy \n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nStrategyModule -->\n\nLocalStrategy->StrategyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/auth/src/strategies/strategy.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocalStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LocalStrategy } from './local.strategy';\n\n@Module({\n  providers: [LocalStrategy],\n  exports: [LocalStrategy],\n})\nexport class StrategyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SwaggerDocBuilder.html":{"url":"classes/SwaggerDocBuilder.html","title":"class - SwaggerDocBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SwaggerDocBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/swagger/swagger-doc-builder.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildConfig\n                            \n                            \n                                    Private\n                                buildDoc\n                            \n                            \n                                    Public\n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(app: INestApplication)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/swagger/swagger-doc-builder.class.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    INestApplication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/swagger/swagger-doc-builder.class.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildDoc()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/swagger/swagger-doc-builder.class.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setup\n                        \n                    \n                \n            \n            \n                \n                        \n                    setup()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/swagger/swagger-doc-builder.class.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { INestApplication } from '@nestjs/common';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\n\nimport {\n  APPLICATION_NAME,\n  APPLICATION_URL,\n  CONTACT_EMAIL,\n  CONTACT_NAME,\n  CONTACT_URL,\n  REST_API_PREFIX,\n  REST_API_VERSION,\n} from '@app/constants';\n\nimport {\n  SWAGGER_CUSTOM_OPTIONS,\n  SWAGGER_DESCRIPTION,\n  SWAGGER_DOCUMENT_OPTIONS,\n  SWAGGER_PATHNAME,\n} from './swagger.constants';\n\nexport class SwaggerDocBuilder {\n  constructor(private app: INestApplication) {}\n\n  public setup() {\n    const docs = this.buildDoc();\n    SwaggerModule.setup(\n      SWAGGER_PATHNAME,\n      this.app,\n      docs,\n      SWAGGER_CUSTOM_OPTIONS,\n    );\n  }\n\n  private buildDoc() {\n    const config = this.buildConfig();\n    return SwaggerModule.createDocument(\n      this.app,\n      config,\n      SWAGGER_DOCUMENT_OPTIONS,\n    );\n  }\n\n  private buildConfig() {\n    return new DocumentBuilder()\n      .setTitle(APPLICATION_NAME)\n      .setDescription(SWAGGER_DESCRIPTION)\n      .setVersion(REST_API_VERSION)\n      .setContact(CONTACT_NAME, CONTACT_URL, CONTACT_EMAIL)\n      .addServer(`${APPLICATION_URL}/${REST_API_PREFIX}`)\n      .addBearerAuth(\n        {\n          bearerFormat: 'Bearer',\n          scheme: 'Bearer',\n          type: 'http',\n          in: 'Header',\n        },\n        'Access Token',\n      )\n      .build();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tag.html":{"url":"classes/Tag.html","title":"class - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/common.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                displayName\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/common.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/common.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/common.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Resource {\n  id: string;\n  createdAt: Date;\n  lastUpdatedAt: Date;\n}\n\nexport abstract class VersionedResource extends Resource {\n  version: number;\n}\n\nexport abstract class Tag {\n  id: string;\n  displayName: string;\n  description?: string;\n}\n\nexport class Genre {}\nexport class EventKeyword {}\nexport class VenueKeyword {}\n\nexport class Instrument {}\n\nexport interface PhysicalSpace {\n  capacity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tag-1.html":{"url":"classes/Tag-1.html","title":"class - Tag-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/common/tag.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                displayName\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/common/tag.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/common/tag.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/common/tag.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, PrimaryColumn } from 'typeorm';\n\nexport abstract class Tag {\n  @PrimaryColumn({ unique: true })\n  id: string;\n\n  @Column({ unique: true })\n  displayName: string;\n\n  @Column()\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Thread.html":{"url":"classes/Thread.html","title":"class - Thread","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Thread\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                network\n                            \n                            \n                                topic\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:198\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Network\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:200\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:199\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBandDto.html":{"url":"classes/UpdateBandDto.html","title":"class - UpdateBandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/bands/update-band.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateBandDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateBandDto } from './create-band.dto';\n\nexport class UpdateBandDto extends PartialType(CreateBandDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEventDto.html":{"url":"classes/UpdateEventDto.html","title":"class - UpdateEventDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEventDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/events/update-event.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateEventDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateEventDto } from './create-event.dto';\n\nexport class UpdateEventDto extends PartialType(CreateEventDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLocationDto.html":{"url":"classes/UpdateLocationDto.html","title":"class - UpdateLocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/locations/update-location.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateLocationDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateLocationDto } from './create-location.dto';\n\nexport class UpdateLocationDto extends PartialType(CreateLocationDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMusicianDto.html":{"url":"classes/UpdateMusicianDto.html","title":"class - UpdateMusicianDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMusicianDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/musicians/update-musician.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateMusicianDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateMusicianDto } from './create-musician.dto';\n\nexport class UpdateMusicianDto extends PartialType(CreateMusicianDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNetworkDto.html":{"url":"classes/UpdateNetworkDto.html","title":"class - UpdateNetworkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNetworkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/networks/update-network.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateNetworkDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateNetworkDto } from './create-network.dto';\n\nexport class UpdateNetworkDto extends PartialType(CreateNetworkDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrganizerDto.html":{"url":"classes/UpdateOrganizerDto.html","title":"class - UpdateOrganizerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrganizerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/organizers/update-organizer.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateOrganizerDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateOrganizerDto } from './create-organizer.dto';\n\nexport class UpdateOrganizerDto extends PartialType(CreateOrganizerDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/users/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto-1.html":{"url":"classes/UpdateUserDto-1.html","title":"class - UpdateUserDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/data/src/dto/user/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateVenueDto.html":{"url":"classes/UpdateVenueDto.html","title":"class - UpdateVenueDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateVenueDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/dto/venues/update-venue.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateVenueDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateVenueDto } from './create-venue.dto';\n\nexport class UpdateVenueDto extends PartialType(CreateVenueDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/user/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                administratorOf\n                            \n                            \n                                administratorOfDraft\n                            \n                            \n                                administratorOfTemplate\n                            \n                            \n                                    \n                                authAccount\n                            \n                            \n                                    \n                                bookmarkedEvents\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                createdEventDrafts\n                            \n                            \n                                createdEvents\n                            \n                            \n                                createdEventTemplates\n                            \n                            \n                                editorOf\n                            \n                            \n                                editorOfDraft\n                            \n                            \n                                editorOfTemplate\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                eventDraftEdits\n                            \n                            \n                                eventEdits\n                            \n                            \n                                eventTemplateEdits\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                lastUpdatedAt\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                registeredEvents\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                viewerOf\n                            \n                            \n                                viewerOfDraft\n                            \n                            \n                                viewerOfTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        administratorOf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PublishedEvent[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        administratorOfDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventDraft[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        administratorOfTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventTemplate[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        authAccount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthAccount\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, account => account.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:58\n                        \n                    \n\n            \n                \n                    AUTH\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookmarkedEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, event => event.bookmarkedBy)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:86\n                        \n                    \n\n            \n                \n                    EVENT AUDIENCE\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()@ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdEventDrafts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventDraft[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PublishedEvent[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdEventTemplates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventTemplate[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editorOf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PublishedEvent[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editorOfDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventDraft[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editorOfTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventTemplate[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})@ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventDraftEdits\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventDraft[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventEdits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PublishedEvent[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:95\n                        \n                    \n\n            \n                \n                    EVENTUALLY MOVE TO ADMIN\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventTemplateEdits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventTemplate[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:76\n                        \n                    \n\n            \n                \n                    BASIC INFO\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')@ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:38\n                        \n                    \n\n            \n                \n                    METADATA\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})@ApiProperty({example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()@ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PublishedEvent[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserRole, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:31\n                        \n                    \n\n            \n                \n                    DISCRIMINATOR\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})@ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewerOf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PublishedEvent[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewerOfDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventDraft[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewerOfTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventTemplate[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/base.entity.ts:137\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  TableInheritance,\n  OneToOne,\n  ManyToMany,\n  Relation,\n} from 'typeorm';\nimport { PublishedEvent } from '../event/published.entity';\nimport { EventDraft } from '../event/draft.entity';\nimport { EventTemplate } from '../event/template.entity';\nimport { exampleUser } from '@app/data/examples/user.example';\nimport { AuthAccount } from '@app/auth/entities';\nimport { UserRole } from '../../enums/user-role.enum';\n\n@Entity()\n@TableInheritance({ column: 'role' })\nexport class User {\n  /**\n   * DISCRIMINATOR\n   */\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.PUBLIC,\n  })\n  role: UserRole;\n\n  /**\n   * METADATA\n   */\n  @PrimaryGeneratedColumn('uuid')\n  @ApiProperty({ example: exampleUser.id })\n  id: string;\n\n  @CreateDateColumn()\n  @ApiProperty({ example: exampleUser.createdAt })\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  @ApiProperty({ example: exampleUser.lastUpdatedAt })\n  lastUpdatedAt: Date;\n\n  @Column({ default: true })\n  @ApiProperty({ example: true })\n  isActive: boolean;\n\n  /**\n   * AUTH\n   */\n  @OneToOne(() => AuthAccount, (account) => account.user, {\n    cascade: true,\n  })\n  authAccount: AuthAccount;\n\n  @Column({ unique: true })\n  @ApiProperty({ example: exampleUser.username })\n  username: string;\n\n  @Column({ unique: true, nullable: true })\n  @ApiProperty({ example: exampleUser.email })\n  email: string;\n\n  @Column({ select: false })\n  password: string;\n\n  /**\n   * BASIC INFO\n   */\n  @Column()\n  @ApiProperty({ example: exampleUser.firstName })\n  firstName: string;\n\n  @Column()\n  @ApiProperty({ example: exampleUser.lastName })\n  lastName: string;\n\n  /**\n   * EVENT AUDIENCE\n   */\n  @ManyToMany(() => PublishedEvent, (event) => event.bookmarkedBy)\n  bookmarkedEvents: Relation;\n\n  // @ManyToMany(() => PublishedEvent, (event) => event.registeredUsers)\n  registeredEvents: PublishedEvent[];\n\n  /**\n   * EVENTUALLY MOVE TO ADMIN\n   */\n  // @OneToMany(() => PublishedEvent, (event) => event.lastUpdatedBy)\n  eventEdits: PublishedEvent[];\n\n  // @OneToMany(() => PublishedEvent, (event) => event.createdBy)\n  createdEvents: PublishedEvent[];\n\n  // @ManyToMany(() => PublishedEvent, (event) => event.admins)\n  administratorOf: PublishedEvent[];\n\n  // @ManyToMany(() => PublishedEvent, (event) => event.editors)\n  editorOf: PublishedEvent[];\n\n  // @ManyToMany(() => PublishedEvent, (event) => event.viewers)\n  viewerOf: PublishedEvent[];\n\n  // @OneToMany(() => EventDraft, (event) => event.lastUpdatedBy)\n  eventDraftEdits: EventDraft[];\n\n  // @OneToMany(() => EventDraft, (event) => event.createdBy)\n  createdEventDrafts: EventDraft[];\n\n  // @ManyToMany(() => EventDraft, (event) => event.admins)\n  administratorOfDraft: EventDraft[];\n\n  // @ManyToMany(() => EventDraft, (event) => event.editors)\n  editorOfDraft: EventDraft[];\n\n  // @ManyToMany(() => EventDraft, (event) => event.viewers)\n  viewerOfDraft: EventDraft[];\n\n  // @OneToMany(() => EventTemplate, (event) => event.lastUpdatedBy)\n  eventTemplateEdits: EventTemplate[];\n\n  // @OneToMany(() => EventTemplate, (event) => event.createdBy)\n  createdEventTemplates: EventTemplate[];\n\n  // @ManyToMany(() => EventTemplate, (event) => event.admins)\n  administratorOfTemplate: EventTemplate[];\n\n  // @ManyToMany(() => EventTemplate, (event) => event.editors)\n  editorOfTemplate: EventTemplate[];\n\n  // @ManyToMany(() => EventTemplate, (event) => event.viewers)\n  viewerOfTemplate: EventTemplate[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User-1.html":{"url":"entities/User-1.html","title":"entity - User-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/data/src/entities/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in original/xxx/data/src/entities/user/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in original/xxx/data/src/entities/user/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in original/xxx/data/src/entities/user/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in original/xxx/data/src/entities/user/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column()\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPreferences.html":{"url":"classes/UserPreferences.html","title":"class - UserPreferences","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPreferences\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                metadata\n                            \n                            \n                                phone\n                            \n                            \n                                preferences\n                            \n                            \n                                smsProvider\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/notification/src/schemas/user.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in apps/notification/src/schemas/user.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/notification/src/schemas/user.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preferences\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in apps/notification/src/schemas/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        smsProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/notification/src/schemas/user.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/notification/src/schemas/user.schema.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        enum NotificationFrequency {\n  DAILY = 'DAILY',\n  WEEKLY = 'WEEKLY',\n  OCCASIONALLY = 'OCCASIONALLY',\n}\n\ninterface NotificationServiceOptions {\n  enabled: boolean;\n  frequency: NotificationFrequency;\n  filters: NotificationFilter;\n}\n\ninterface NotificationFilter {\n  channel: string;\n  enabled: boolean;\n  frequency: NotificationFrequency;\n}\n\ninterface NotificationMetadata {\n  lastNotified: Date;\n  userInteracted: boolean;\n}\n\nexport class UserPreferences {\n  // Primary Key (matches user service id)\n  userId: string;\n\n  // Contact info\n  phone: string;\n  email: string;\n  smsProvider: string;\n\n  // Preferences\n  preferences: {\n    email: NotificationServiceOptions;\n    sms: NotificationServiceOptions;\n    push: NotificationServiceOptions;\n    inApp: NotificationServiceOptions;\n  };\n\n  // Metadata\n  metadata: {\n    email: NotificationMetadata;\n    sms: NotificationMetadata;\n    push: NotificationMetadata;\n    inApp: NotificationMetadata;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserSession.html":{"url":"entities/UserSession.html","title":"entity - UserSession","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/entities/session.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                account\n                            \n                            \n                                    \n                                expiresAt\n                            \n                            \n                                    \n                                sessionToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthAccount\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, account => account.sessions)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/session.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/session.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sessionToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/entities/session.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ManyToOne } from 'typeorm';\nimport { AuthAccount } from './account.entity';\nimport { AuthMetadata } from './common.entity';\n\n@Entity()\nexport class UserSession extends AuthMetadata {\n  @ManyToOne(() => AuthAccount, (account) => account.sessions)\n  account: AuthAccount;\n\n  @Column({ unique: true })\n  sessionToken: string;\n\n  @Column()\n  expiresAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsernameLoginDto.html":{"url":"classes/UsernameLoginDto.html","title":"class - UsernameLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsernameLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/dto/login.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PasswordLogin\n            \n\n            \n                Implements\n            \n            \n                            LoginBase\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                username\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginType.USERNAME\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/dto/login.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/dto/login.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PasswordLogin\n\n                            \n                        \n                    \n                        \n                                Defined in         PasswordLogin:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { exampleUser } from '@app/data/examples/user.example';\n\nexport enum LoginType {\n  USERNAME = 'USERNAME',\n  EMAIL = 'EMAIL',\n  GOOGLE = 'GOOGLE',\n}\n\ninterface LoginBase {\n  type: LoginType;\n}\n\nabstract class PasswordLogin {\n  @ApiProperty({ example: 'password' })\n  password: string;\n}\n\nexport class UsernameLoginDto extends PasswordLogin implements LoginBase {\n  @ApiProperty({ example: LoginType.USERNAME })\n  type: LoginType.USERNAME;\n\n  @ApiProperty({ example: exampleUser.username })\n  username: string;\n}\n\nexport class EmailLoginDto extends PasswordLogin {\n  @ApiProperty({ example: LoginType.EMAIL })\n  type: LoginType.EMAIL;\n\n  @ApiProperty({ example: exampleUser.username })\n  email: string;\n}\n\nexport class GoogleLoginDto implements LoginBase {\n  @ApiProperty({ example: LoginType.GOOGLE })\n  type: LoginType.GOOGLE;\n\n  @ApiProperty()\n  clientId: string;\n\n  @ApiProperty()\n  clientSecret: string;\n}\n\nexport type LoginDto = UsernameLoginDto | EmailLoginDto | GoogleLoginDto;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/core/user/src/users.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/core/user/src/users.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { UsersService } from './users.service';\n\n@Controller()\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get()\n  getHello(): string {\n    return this.usersService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController-1.html":{"url":"controllers/UsersController-1.html","title":"controller - UsersController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/gateways/rest/src/controllers/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/users.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/users.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/users.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/users.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/users.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\n\n@Controller('users')\nexport class UsersController {\n  constructor() {}\n\n  @Post()\n  create(@Body() createUserDto: any) {\n    return `This creates a User with shape: ${createUserDto}`;\n  }\n\n  @Get()\n  findAll() {\n    return 'This finds all Users';\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return `This finds a single User with id: ${id}`;\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: any) {\n    return `This updates a single User with id: ${id}, and data: ${updateUserDto}`;\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return `This deletes User with id: ${id}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/resources/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport {\n  User,\n  OrganizerUser,\n  PerformerUser,\n  PublicUser,\n  VenueUser,\n  AssociateUser,\n} from '@app/data/entities/user';\nimport { MESSAGE_BROKER } from '@app/constants';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: MESSAGE_BROKER,\n        transport: Transport.TCP,\n      },\n    ]),\n    TypeOrmModule.forFeature([\n      User,\n      AssociateUser,\n      PerformerUser,\n      VenueUser,\n      OrganizerUser,\n      PublicUser,\n    ]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/resources/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findAllPerformerUsers\n                            \n                            \n                                findAllPublicUsers\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneByUsername\n                            \n                            \n                                getPassword\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageBroker: ClientProxy, usersRepository: Repository, publicUsersRepository: Repository, performerUsersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/resources/users/users.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageBroker\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publicUsersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        performerUsersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/users/users.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/users/users.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllPerformerUsers\n                        \n                    \n                \n            \n            \n                \nfindAllPerformerUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/users/users.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllPublicUsers\n                        \n                    \n                \n            \n            \n                \nfindAllPublicUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/users/users.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/users/users.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \nfindOneByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/users/users.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPassword\n                        \n                    \n                \n            \n            \n                \ngetPassword(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/users/users.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/users/users.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/users/users.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { Repository } from 'typeorm';\nimport { User, PerformerUser, PublicUser } from '@app/data/entities/user';\n\nimport { CreateUserDto, UpdateUserDto } from '@app/data/dto';\nimport { MESSAGE_BROKER } from '@app/constants';\nimport { UserRole } from '@app/data/enums';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @Inject(MESSAGE_BROKER)\n    private readonly messageBroker: ClientProxy,\n\n    @InjectRepository(User)\n    private usersRepository: Repository,\n\n    @InjectRepository(PublicUser)\n    private publicUsersRepository: Repository,\n\n    @InjectRepository(PerformerUser)\n    private performerUsersRepository: Repository,\n  ) {}\n\n  async create(createUserDto: CreateUserDto): Promise {\n    const newUser = this.usersRepository.create({\n      ...createUserDto,\n      role: UserRole.PERFORMER,\n    });\n    const user = await this.usersRepository.save(newUser);\n    this.messageBroker.emit('user-created', user);\n    delete user.password;\n    return user;\n  }\n\n  findAll(): Promise {\n    return this.usersRepository.find();\n  }\n\n  findAllPublicUsers(): Promise {\n    return this.publicUsersRepository.find();\n  }\n  findAllPerformerUsers(): Promise {\n    return this.performerUsersRepository.find();\n  }\n\n  findOne(id: string): Promise {\n    return this.usersRepository.findOneBy({ id });\n  }\n\n  findOneByUsername(username: string): Promise {\n    return this.usersRepository.findOneBy({ username });\n  }\n\n  async update(id: string, updateUserDto: UpdateUserDto): Promise {\n    const result = await this.usersRepository.update(id, updateUserDto);\n    if (result) return true;\n    return false;\n  }\n\n  remove(id: string) {\n    return this.usersRepository.delete(id);\n  }\n\n  getPassword(username: string) {\n    return this.usersRepository.findOne({\n      where: { username },\n      select: { id: true, password: true },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService-1.html":{"url":"injectables/UsersService-1.html","title":"injectable - UsersService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/core/user/src/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/apps/core/user/src/users.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in original/xxx/apps/core/user/src/users.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      userId: 1,\n      username: 'john',\n      password: 'changeme',\n    },\n    {\n      userId: 2,\n      username: 'maria',\n      password: 'guess',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in original/xxx/apps/core/user/src/users.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nexport type User = {\n  userId: number;\n  username: string;\n  password: string;\n};\n\n@Injectable()\nexport class UsersService {\n  private readonly users = [\n    {\n      userId: 1,\n      username: 'john',\n      password: 'changeme',\n    },\n    {\n      userId: 2,\n      username: 'maria',\n      password: 'guess',\n    },\n  ];\n\n  async findOne(username: string): Promise {\n    return this.users.find((user) => user.username === username);\n  }\n\n  async findAll(): Promise {\n    return this.users;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Venue.html":{"url":"entities/Venue.html","title":"entity - Venue","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Venue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/account/venue.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                account\n                            \n                            \n                                    \n                                ageRestriction\n                            \n                            \n                                    \n                                capacity\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                minimumAge\n                            \n                            \n                                    \n                                privateAccess\n                            \n                            \n                                    \n                                requiresReservation\n                            \n                            \n                                    \n                                    Optional\n                                reservationLink\n                            \n                            \n                                    \n                                servesAlcohol\n                            \n                            \n                                    \n                                servesFood\n                            \n                            \n                                    \n                                stages\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, account => account.venue)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/venue.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ageRestriction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/venue.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/venue.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/venue.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        minimumAge\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/venue.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        privateAccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/venue.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        requiresReservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/venue.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reservationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/venue.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        servesAlcohol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/venue.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        servesFood\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/venue.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, stage => stage.venue)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/venue.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VenueType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: VenueType, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/venue.entity.ts:38\n                        \n                    \n\n            \n                \n                    VENUE DETAILS\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Relation,\n  Column,\n  OneToOne,\n  OneToMany,\n  JoinTable,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n// import { ApiProperty } from '@nestjs/swagger';\n\nimport { VenueAccount } from './base/account.entity';\nimport { Business } from './base/business.class';\nimport { Stage } from './stage.entity';\nimport { VenueType } from '../../enums/venue-type.enum';\nimport { PhysicalSpace } from '../../interfaces/physical-space.interface';\n\n@Entity()\nexport class Venue extends Business implements PhysicalSpace {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @OneToOne(() => VenueAccount, (account) => account.venue)\n  @JoinTable()\n  account: Relation;\n\n  @OneToMany(() => Stage, (stage) => stage.venue)\n  stages: Relation[];\n\n  /**\n   * VENUE DETAILS\n   */\n  @Column({\n    type: 'enum',\n    enum: VenueType,\n    default: VenueType.VENUE,\n  })\n  type: VenueType;\n\n  @Column()\n  capacity: number;\n\n  @Column()\n  servesAlcohol: boolean;\n\n  @Column()\n  servesFood: boolean;\n\n  @Column()\n  ageRestriction: boolean;\n\n  @Column()\n  minimumAge?: number;\n\n  @Column()\n  requiresReservation: boolean;\n\n  @Column()\n  reservationLink?: string;\n\n  @Column()\n  privateAccess: boolean;\n\n  // keywords: VenueKeyword[]\n}\n\n// **Venue Schema:**\n\n// * **name (string):** Name of the venue.\n// * **description (string, optional):** Brief description of the venue's atmosphere and offerings.\n// * **images (array of strings):** URLs or file paths for multiple venue images.\n// * **location (object):**\n//     * **address (string):** Full address of the venue.\n//     * **city (string):** City where the venue is located.\n//     * **state (string):** State where the venue is located.\n//     * **zipCode (string):** Zip code of the venue.\n//     * **latitude (number):** Geographical latitude coordinate.\n//     * **longitude (number):** Geographical longitude coordinate.\n// * **contact (object, optional):**\n//     * **phone (string):** Phone number of the venue.\n//     * **website (string):** Website URL of the venue.\n// * **socialMedia (object, optional):**\n//     * **facebook (string):** Link to the venue's Facebook page.\n//     * **twitter (string):** Link to the venue's Twitter page.\n//     * **instagram (string):** Link to the venue's Instagram page.\n// * **capacity (integer):** Maximum occupancy of the venue.\n// * **typicalShowLength (integer, optional):** Average duration of events at the venue.\n// * **parking (string, optional):** Description of parking options (e.g., valet, lot, street parking).\n// * **publicTransportation (string, optional):** Description of public transportation access near the venue.\n// * **paymentMethods (array of strings):** Accepted payment methods (e.g., credit card, cash).\n// * **accessibility (object, optional):**\n//     * **accessibleParking (boolean):** Indicates availability of accessible parking.\n//     * **restroomAccessibility (boolean):** Indicates availability of accessible restrooms.\n//     * **otherAccessibilityFeatures (string, optional):** Text field for listing additional accessibility features.\n// * **dressCode (string, optional):** Description of the typical dress code.\n// * **amenities (array of strings, optional):** Amenities offered by the venue (e.g., Wi-Fi, outdoor seating).\n// * **ageRestriction (boolean):** Indicates if there's an age restriction for entry.\n// * **minimumAge (integer, optional):** Minimum age requirement for entry (if applicable).\n// * **coverCharge (object, optional):**\n//     * **enabled (boolean):** Indicates if cover charge applies.\n//     * **amount (number, optional):**  Amount of the cover charge (if applicable).\n//     * **frequency (string, optional):** Frequency of cover charge (e.g., daily, specific nights).\n// * **drinkMinimum (object, optional):**\n//     * **enabled (boolean):** Indicates if drink minimum applies.\n//     * **amount (number, optional):**  Amount of the drink minimum (if applicable).\n// * **ticketing (object, optional):**\n//     * **enabled (boolean):** Indicates if the venue uses ticketing for events.\n//     * **link (string, optional):** Link to the venue's ticketing platform (if applicable).\n// * **backline (object, optional):**\n//     * **drums (array of strings, optional):** List of available drum kits or components.\n//     * **guitars (array of strings, optional):** List of available guitars or amplifiers.\n//     * **basses (array of strings, optional):** List of available bass guitars or amplifiers.\n//     * **keyboards (array of strings, optional):** List of available keyboards or synthesizers.\n//     * **other (string, optional):** Text field for listing any other backline equipment.\n// * **paSystem (object, optional):**\n//     * **description (string, optional):** Description of the PA system (e.g., size, capacity).\n//     * **monitors (string, optional):** Description of available stage monitors.\n//     * **mics (array of strings, optional):** List of available microphones.\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenueAccount.html":{"url":"classes/VenueAccount.html","title":"class - VenueAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenueAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/account/base/account.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                managedBy\n                            \n                            \n                                    \n                                venue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        managedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.managedAccounts)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:156\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        venue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Relation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, venue => venue.account)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/account/base/account.entity.ts:159\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  OneToOne,\n  Relation,\n  TableInheritance,\n  ChildEntity,\n  ManyToOne,\n  ManyToMany,\n  JoinTable,\n  // ManyToOne,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { VersionedResource } from '../../common/resource.entity';\nimport { AccountType } from '../../../enums/account-type.enum';\nimport { Band } from '../band.entity';\nimport { Venue } from '../venue.entity';\nimport { Musician } from '../musician.entity';\nimport { Organizer } from '../organizer.entity';\nimport { Genre } from '../../tags/genre.entity';\nimport { PerformerUser } from '../../user';\n\n@Entity()\n@TableInheritance({ column: 'type' })\nexport class Account extends VersionedResource {\n  /**\n   * DISCRIMINATOR\n   */\n  @Column({\n    type: 'enum',\n    enum: AccountType,\n  })\n  type: AccountType;\n\n  /**\n   * METADATA\n   */\n  @Column({ default: true })\n  @ApiProperty({ example: true })\n  isActive: boolean;\n\n  @Column()\n  deactivatedAt: Date;\n\n  /**\n   * BASIC INFO\n   */\n  @Column()\n  @ApiProperty({\n    description: 'Account name.',\n    example: 'Account',\n  })\n  name: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'About account.',\n    example: 'About',\n  })\n  about?: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'Account avatar url.',\n    example: 'https://example.com/image.png',\n  })\n  avatarUrl?: string;\n\n  @Column()\n  @ApiProperty({\n    description: 'Account thumbnail image url.',\n    example: 'https://example.com/image.png',\n  })\n  imageUrl?: string;\n\n  @ManyToMany(() => Genre, (genre) => genre.accounts)\n  @JoinTable({ name: 'account_genres' })\n  @ApiProperty()\n  genres?: Relation[];\n\n  /**\n   * SOCIAL ACCOUNTS\n   */\n  @Column()\n  @ApiProperty()\n  websiteUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  youtubeUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  facebookUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  twitterUrl?: string;\n\n  @Column()\n  @ApiProperty()\n  instagramUrl?: string;\n\n  /**\n   * CONTACT\n   */\n  @Column()\n  @ApiProperty()\n  canEmail: boolean;\n\n  @Column()\n  @ApiProperty()\n  canText: boolean;\n\n  @Column()\n  @ApiProperty()\n  canCall: boolean;\n\n  /**\n   * AFFILIATES\n   */\n  // @ManyToMany(() => Musician)\n  // affiliatedMusicians: Relation;\n\n  // @ManyToMany(() => Band)\n  // affiliatedBands: Relation;\n\n  // @ManyToMany(() => Organizer)\n  // affiliatedOrganizers: Relation;\n\n  // @ManyToMany(() => Venue)\n  // affiliatedVenues: Relation;\n}\n\n@ChildEntity(AccountType.MUSICIAN)\nexport class MusicianAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Musician, (musician) => musician.account)\n  musician: Relation;\n}\n\n@ChildEntity(AccountType.BAND)\nexport class BandAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Band, (band) => band.account)\n  band: Relation;\n}\n\n@ChildEntity(AccountType.VENUE)\nexport class VenueAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Venue, (venue) => venue.account)\n  venue: Relation;\n}\n\n@ChildEntity(AccountType.ORGANIZER)\nexport class OrganizerAccount extends Account {\n  @ManyToOne(() => PerformerUser, (user) => user.managedAccounts)\n  managedBy: Relation;\n\n  @OneToOne(() => Organizer, (organizer) => organizer.account)\n  organizer: Relation;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenueKeyword.html":{"url":"classes/VenueKeyword.html","title":"class - VenueKeyword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenueKeyword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/common.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Resource {\n  id: string;\n  createdAt: Date;\n  lastUpdatedAt: Date;\n}\n\nexport abstract class VersionedResource extends Resource {\n  version: number;\n}\n\nexport abstract class Tag {\n  id: string;\n  displayName: string;\n  description?: string;\n}\n\nexport class Genre {}\nexport class EventKeyword {}\nexport class VenueKeyword {}\n\nexport class Instrument {}\n\nexport interface PhysicalSpace {\n  capacity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenueReview.html":{"url":"classes/VenueReview.html","title":"class - VenueReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenueReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/content.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Review\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                reviewType\n                            \n                            \n                                venue\n                            \n                            \n                                agrees\n                            \n                            \n                                disagrees\n                            \n                            \n                                author\n                            \n                            \n                                comments\n                            \n                            \n                                content\n                            \n                            \n                                likes\n                            \n                            \n                                shares\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        reviewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReviewType\n\n                    \n                \n                \n                    \n                        Default value : ReviewType.VENUE\n                    \n                \n                        \n                            \n                                Inherited from         Review\n\n                            \n                        \n                    \n                        \n                                Defined in         Review:88\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        venue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Venue\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/content.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agrees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Opinion\n\n                            \n                        \n                    \n                        \n                                Defined in         Opinion:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disagrees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Opinion\n\n                            \n                        \n                    \n                        \n                                Defined in         Opinion:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                        \n                            \n                                Inherited from         Post\n\n                            \n                        \n                    \n                        \n                                Defined in         Post:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         VersionedResource\n\n                            \n                        \n                    \n                        \n                                Defined in         VersionedResource:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account, Organizer, Venue } from './account';\nimport { VersionedResource } from './common';\nimport { User, UserRole } from './user';\nimport { Event } from './event';\nimport { PartialType } from '@nestjs/mapped-types';\n\n/**\n * POST\n *\n *\n *\n */\nexport enum PostType {\n  STATEMENT,\n  OPINION,\n  REVIEW,\n  NEWSLETTER,\n  ANNOUNCEMENT,\n  BROADCAST,\n  BULLETIN,\n}\nexport class Post extends VersionedResource {\n  title: string;\n  author: User;\n  content: any;\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  type: PostType;\n}\n\n/**\n * COMMENT\n *\n *\n *\n */\nexport class Comment extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n  post: Post;\n}\n\n/**\n * POST - STATEMENT\n *\n *\n *\n */\nexport class Statement extends VersionedResource {\n  author: User;\n  content: string;\n  likes: number;\n}\n\n/**\n * POST - OPINION\n *\n *\n *\n */\nexport class Opinion extends Post {\n  agrees: number;\n  disagrees: number;\n}\n\n/**\n * POST - REVIEW\n *\n *\n *\n */\nexport enum ReviewType {\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  EVENT,\n}\nexport class Review extends Opinion {\n  reviewType: ReviewType;\n}\nexport class PerformerReview extends Review {\n  reviewType: ReviewType = ReviewType.PERFORMER;\n  performer: Account;\n}\nexport class VenueReview extends Review {\n  reviewType: ReviewType = ReviewType.VENUE;\n  venue: Venue;\n}\nexport class OrganizerReview extends Review {\n  reviewType: ReviewType = ReviewType.ORGANIZER;\n  organizer: Organizer;\n}\nexport class EventReview extends Review {\n  reviewType: ReviewType = ReviewType.EVENT;\n  event: Event;\n}\n\n/**\n * POST - NEWSLETTER\n *\n *\n *\n */\nexport class Newsletter extends Post {\n  account: Account;\n  accountType: Exclude;\n}\n\n/**\n * POST - ANNOUNCEMENT\n *\n *\n *\n */\nexport enum AnnouncementType {\n  PRESS_RELEASE,\n  MEDIA_RELEASE,\n  EVENT_UPDATE,\n  GENERAL,\n}\nexport class Announcement extends Post {\n  account: Account;\n  accountType: Exclude;\n  announcementType: AnnouncementType;\n}\n\n/**\n * POST - BULLETIN\n *\n *\n *\n */\nexport enum BroadcastType {\n  VENUE_SEEKING,\n  ORGANIZER_SEEKING,\n  PERFORMER_SEEKING,\n}\nexport enum BroadcastAudience {\n  VENUE,\n  ORGANIZER,\n  PERFORMER,\n}\n/**\n * POST - NETWORKING BROADCAST\n *\n *\n *\n */\nexport class Broadcast extends Post {\n  broadcastType: BroadcastType;\n  audience: BroadcastAudience;\n  producer: Account;\n  // Organizer seeking -- venue, performer\n  // Venue seeking -- organizer, performer\n  // Performer seeking -- organizer, venue, performer\n}\n\nexport class Bulletin extends Broadcast {\n  // more specific. Attached event, etc\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport abstract class Group extends VersionedResource {\n  name: string;\n  description: string;\n  members: User[];\n  lastInteractionAt: Date;\n  isActive: boolean;\n\n  // Content\n  statements: Statement[];\n  opinions: Opinion[];\n  broadcasts: Broadcast[];\n  bulletins: Bulletin[];\n}\n\n// Networks are publicly accessible segmentations based on location.\n// auto-controlled, no new networks added unless inside internal application\nexport class Network extends Group {\n  location: any; // reference to a state,region,city,neighborhood\n  parent: Network;\n  children: Network[];\n  threads: Thread[];\n  groups: PrivateGroup[];\n  // Content - made my public users, accessible to all, Only exists in a network\n  reviews: Review[];\n}\nexport class Thread {\n  name: string;\n  topic: string;\n  network: Network;\n}\nexport class PrivateGroup extends Group {\n  isPublic: boolean;\n  managedBy: User;\n  administrators: User[];\n  moderators: User[];\n}\n\nexport class NetworkBroadcast extends Broadcast {\n  network: Network;\n}\n\nexport class GroupBroadcast extends Broadcast {\n  group: Group;\n}\n\n/**\n *\n *\n *\n *\n *\n *\n */\nexport class SocialPost {\n  // DTO Style transfer object to help define posts for external platforms with internal content\n}\n\nexport class SocialPostDraft extends PartialType(SocialPost) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenueUser.html":{"url":"classes/VenueUser.html","title":"class - VenueUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenueUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/user.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Credentials } from './auth';\n\nexport class User {\n  /**\n   * METADATA\n   */\n  id: string;\n  createdAt: Date;\n  lastUpdatedAt: Date;\n  isActive: boolean;\n\n  /**\n   * CREDENTIALS\n   */\n  role: UserRole;\n  credentials: Credentials;\n\n  /**\n   * BASIC INFO\n   */\n  firstName: string;\n  lastName: string;\n}\n\nexport enum UserRole {\n  PUBLIC,\n  PERFORMER,\n  VENUE,\n  ORGANIZER,\n  ASSOCIATE,\n}\n\nexport class PublicUser {}\nexport class PerformerUser {}\nexport class VenueUser {}\nexport class OrganizerUser {}\nexport class AssociateUser {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenueUser-1.html":{"url":"classes/VenueUser-1.html","title":"class - VenueUser-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenueUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/user/venue.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                managedAccounts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        managedAccounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Relation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, account => account.managedBy)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/user/venue.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChildEntity, OneToMany, Relation } from 'typeorm';\nimport { User } from './base.entity';\nimport { UserRole } from '../../enums/user-role.enum';\nimport { VenueAccount } from '../account/base/account.entity';\n\n@ChildEntity(UserRole.VENUE)\nexport class VenueUser extends User {\n  @OneToMany(() => VenueAccount, (account) => account.managedBy)\n  managedAccounts: Relation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VenuesController.html":{"url":"controllers/VenuesController.html","title":"controller - VenuesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VenuesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            original/xxx/apps/gateways/rest/src/controllers/venues.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                venues\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createVenueDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/venues.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createVenueDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/venues.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/venues.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/venues.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateVenueDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in original/xxx/apps/gateways/rest/src/controllers/venues.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateVenueDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\n\n@Controller('venues')\nexport class VenuesController {\n  constructor() {}\n\n  @Post()\n  create(@Body() createVenueDto: any) {\n    return `This creates a venue with shape: ${createVenueDto}`;\n  }\n\n  @Get()\n  findAll() {\n    return 'This finds all venues';\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return `This finds a single venue with id: ${id}`;\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateVenueDto: any) {\n    return `This updates a single venue with id: ${id}, and data: ${updateVenueDto}`;\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return `This deletes venue with id: ${id}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VenuesModule.html":{"url":"modules/VenuesModule.html","title":"module - VenuesModule","body":"\n                   \n\n\n\n\n    Modules\n    VenuesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VenuesModule\n\n\n\ncluster_VenuesModule_providers\n\n\n\n\nVenuesService\n\nVenuesService\n\n\n\nVenuesModule\n\nVenuesModule\n\nVenuesModule -->\n\nVenuesService->VenuesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/resources/venues/venues.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VenuesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VenuesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VenuesService } from './venues.service';\nimport { VenuesController } from './venues.controller';\nimport { Stage, Venue } from '@app/data/entities/account';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Genre } from '@app/data/entities/common';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Genre, Venue, Stage])],\n  controllers: [VenuesController],\n  providers: [VenuesService],\n})\nexport class VenuesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VenuesService.html":{"url":"injectables/VenuesService.html","title":"injectable - VenuesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VenuesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/resources/venues/venues.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createVenueDto: CreateVenueDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/venues/venues.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createVenueDto\n                                            \n                                                            CreateVenueDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/venues/venues.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/venues/venues.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/venues/venues.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateVenueDto: UpdateVenueDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api/src/resources/venues/venues.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateVenueDto\n                                            \n                                                            UpdateVenueDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateVenueDto, UpdateVenueDto } from '@app/data/dto';\n\n@Injectable()\nexport class VenuesService {\n  create(createVenueDto: CreateVenueDto) {\n    console.log(createVenueDto);\n    return 'This action adds a new venue';\n  }\n\n  findAll() {\n    return `This action returns all venues`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} venue`;\n  }\n\n  update(id: number, updateVenueDto: UpdateVenueDto) {\n    console.log(updateVenueDto);\n    return `This action updates a #${id} venue`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} venue`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VersionedResource.html":{"url":"classes/VersionedResource.html","title":"class - VersionedResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VersionedResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/__tmp/common.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Resource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/data/__tmp/common.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Resource {\n  id: string;\n  createdAt: Date;\n  lastUpdatedAt: Date;\n}\n\nexport abstract class VersionedResource extends Resource {\n  version: number;\n}\n\nexport abstract class Tag {\n  id: string;\n  displayName: string;\n  description?: string;\n}\n\nexport class Genre {}\nexport class EventKeyword {}\nexport class VenueKeyword {}\n\nexport class Instrument {}\n\nexport interface PhysicalSpace {\n  capacity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VersionedResource-1.html":{"url":"classes/VersionedResource-1.html","title":"class - VersionedResource-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VersionedResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data/src/entities/common/resource.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Resource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                version\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                lastUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @VersionColumn()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/data/src/entities/common/resource.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Resource\n\n                            \n                        \n                    \n                        \n                                Defined in         Resource:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EXAMPLE_UUID } from '../../examples/uuid.example';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  Column,\n  CreateDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n  VersionColumn,\n} from 'typeorm';\n\nexport abstract class Resource {\n  @PrimaryGeneratedColumn('uuid')\n  @ApiProperty({\n    description: 'Unique identifier for resource.',\n    example: EXAMPLE_UUID,\n  })\n  id: string;\n\n  @Column({ unique: true })\n  @ApiProperty()\n  slug: string;\n\n  @CreateDateColumn()\n  @ApiProperty({\n    description: 'Resource created at.',\n    example: 'createdAt',\n  })\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  @ApiProperty({\n    description: 'Resource last updated at.',\n    example: 'lastUpdatedAt',\n  })\n  lastUpdatedAt: Date;\n}\n\nexport abstract class VersionedResource extends Resource {\n  @VersionColumn()\n  @ApiProperty()\n  version: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/WebsocketGuard.html":{"url":"guards/WebsocketGuard.html","title":"guard - WebsocketGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    WebsocketGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/auth/src/guards/websocket.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                extractTokenFromHandshake\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/guards/websocket.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/guards/websocket.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        extractTokenFromHandshake\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHandshake(handshake: Handshake)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/guards/websocket.guard.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handshake\n                                            \n                                                        Handshake\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  // UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n// import { Socket } from 'socket.io';\nimport { Handshake } from 'socket.io/dist/socket';\n\n@Injectable()\nexport class WebsocketGuard implements CanActivate {\n  constructor(private readonly jwtService: JwtService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    console.log(context.getType());\n    // Get connection to Web Socket service\n    // const socket = context.switchToWs().getClient();\n\n    // Get token from header\n    // const token = await this.extractTokenFromHandshake(socket.handshake);\n    // console.log('token');\n    // console.log(token);\n\n    // if (!token)\n    //   throw new UnauthorizedException(\n    //     'You must provide a valid Bearer token with your request.',\n    //   );\n\n    // // Verify token and attach payload to request\n    // try {\n    //   const payload = await this.jwtService.verifyAsync(token, {\n    //     secret: 'SECRET',\n    //   });\n    //   // 💡 We're assigning the payload to the request object here\n    //   // so that we can access it in our route handlers\n    //   // request['user'] = payload;\n    // } catch {\n    //   throw new UnauthorizedException('Invalid token provided.');\n    // }\n\n    // Return can activate\n    return true;\n  }\n\n  private async extractTokenFromHandshake(handshake: Handshake) {\n    console.log('handshake headers');\n    console.log(handshake.headers);\n    return handshake.auth.token;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebsocketModule.html":{"url":"modules/WebsocketModule.html","title":"module - WebsocketModule","body":"\n                   \n\n\n\n\n    Modules\n    WebsocketModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WebsocketModule\n\n\n\ncluster_WebsocketModule_imports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nWebsocketModule\n\nWebsocketModule\n\nWebsocketModule -->\n\nAdminModule->WebsocketModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nWebsocketModule -->\n\nEventsModule->WebsocketModule\n\n\n\n\n\nMessagingModule\n\nMessagingModule\n\nWebsocketModule -->\n\nMessagingModule->WebsocketModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ws/src/websocket.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            MessagingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AdminModule, EventsModule, MessagingModule } from './gateways';\n\n@Module({\n  imports: [MessagingModule, EventsModule, AdminModule],\n})\nexport class WebsocketModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.2\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^10.3.9\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-socket.io : ^10.3.9\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            @nestjs/websockets : ^10.3.9\n        \n            @types/passport-google-oauth20 : ^2.0.16\n        \n            bcrypt : ^5.1.1\n        \n            joi : ^17.13.1\n        \n            passport : ^0.7.0\n        \n            passport-facebook : ^3.0.0\n        \n            passport-google-oauth20 : ^2.0.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            passport-oauth2 : ^1.8.0\n        \n            passport-twitter : ^1.0.4\n        \n            pg : ^8.12.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            socket.io : ^4.7.5\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountType   (libs/.../enums.ts)\n                        \n                        \n                            AccountType   (libs/.../account-type.enum.ts)\n                        \n                        \n                            AnnouncementType   (libs/.../content.ts)\n                        \n                        \n                            BroadcastAudience   (libs/.../content.ts)\n                        \n                        \n                            BroadcastType   (libs/.../content.ts)\n                        \n                        \n                            CredentialsProvider   (apps/.../credentials.entity.ts)\n                        \n                        \n                            CredentialsType   (apps/.../credentials.entity.ts)\n                        \n                        \n                            EventStatus   (libs/.../event.ts)\n                        \n                        \n                            EventStatus   (libs/.../event-status.enum.ts)\n                        \n                        \n                            EventType   (libs/.../event.ts)\n                        \n                        \n                            FlagType   (libs/.../moderation.ts)\n                        \n                        \n                            LoginType   (apps/.../login.dto.ts)\n                        \n                        \n                            NotificationFrequency   (apps/.../user.schema.ts)\n                        \n                        \n                            NotificationService   (apps/.../channel.schema.ts)\n                        \n                        \n                            PostType   (libs/.../content.ts)\n                        \n                        \n                            ReviewType   (libs/.../content.ts)\n                        \n                        \n                            StageType   (libs/.../account.ts)\n                        \n                        \n                            StageType   (libs/.../stage.ts)\n                        \n                        \n                            StageType   (libs/.../stage-type.enum.ts)\n                        \n                        \n                            TokenType   (apps/.../credentials.entity.ts)\n                        \n                        \n                            UserRole   (libs/.../user.ts)\n                        \n                        \n                            UserRole   (libs/.../user-role.enum.ts)\n                        \n                        \n                            VenueType   (libs/.../account.ts)\n                        \n                        \n                            VenueType   (libs/.../venue-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/data/__tmp/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AccountType\n                    \n                \n                        \n                            \n                                 MUSICIAN\n                            \n                        \n                        \n                            \n                                 BAND\n                            \n                        \n                        \n                            \n                                 VENUE\n                            \n                        \n                        \n                            \n                                 ORGANIZER\n                            \n                        \n                        \n                            \n                                 COMMUNITY\n                            \n                        \n            \n        \n\n    libs/data/src/enums/account-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AccountType\n                    \n                \n                        \n                            \n                                 MUSICIAN\n                            \n                        \n                        \n                            \n                                Value : MUSICIAN\n                            \n                        \n                        \n                            \n                                 BAND\n                            \n                        \n                        \n                            \n                                Value : BAND\n                            \n                        \n                        \n                            \n                                 VENUE\n                            \n                        \n                        \n                            \n                                Value : VENUE\n                            \n                        \n                        \n                            \n                                 ORGANIZER\n                            \n                        \n                        \n                            \n                                Value : ORGANIZER\n                            \n                        \n            \n        \n\n    libs/data/__tmp/content.ts\n    \n        \n            \n                \n                    \n                        \n                        AnnouncementType\n                    \n                \n                    \n                        \n                            POST - ANNOUNCEMENT\n\n                        \n                    \n                        \n                            \n                                 PRESS_RELEASE\n                            \n                        \n                        \n                            \n                                 MEDIA_RELEASE\n                            \n                        \n                        \n                            \n                                 EVENT_UPDATE\n                            \n                        \n                        \n                            \n                                 GENERAL\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        BroadcastAudience\n                    \n                \n                        \n                            \n                                 VENUE\n                            \n                        \n                        \n                            \n                                 ORGANIZER\n                            \n                        \n                        \n                            \n                                 PERFORMER\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        BroadcastType\n                    \n                \n                    \n                        \n                            POST - BULLETIN\n\n                        \n                    \n                        \n                            \n                                 VENUE_SEEKING\n                            \n                        \n                        \n                            \n                                 ORGANIZER_SEEKING\n                            \n                        \n                        \n                            \n                                 PERFORMER_SEEKING\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PostType\n                    \n                \n                    \n                        \n                            POST\n\n                        \n                    \n                        \n                            \n                                 STATEMENT\n                            \n                        \n                        \n                            \n                                 OPINION\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                 NEWSLETTER\n                            \n                        \n                        \n                            \n                                 ANNOUNCEMENT\n                            \n                        \n                        \n                            \n                                 BROADCAST\n                            \n                        \n                        \n                            \n                                 BULLETIN\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ReviewType\n                    \n                \n                    \n                        \n                            POST - REVIEW\n\n                        \n                    \n                        \n                            \n                                 PERFORMER\n                            \n                        \n                        \n                            \n                                 VENUE\n                            \n                        \n                        \n                            \n                                 ORGANIZER\n                            \n                        \n                        \n                            \n                                 EVENT\n                            \n                        \n            \n        \n\n    apps/auth/src/entities/credentials.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        CredentialsProvider\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : PASSWORD\n                            \n                        \n                        \n                            \n                                 GOOGLE\n                            \n                        \n                        \n                            \n                                Value : GOOGLE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CredentialsType\n                    \n                \n                        \n                            \n                                 USERNAME\n                            \n                        \n                        \n                            \n                                Value : USERNAME\n                            \n                        \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : EMAIL\n                            \n                        \n                        \n                            \n                                 OIDC\n                            \n                        \n                        \n                            \n                                Value : OIDC\n                            \n                        \n                        \n                            \n                                 OAUTH\n                            \n                        \n                        \n                            \n                                Value : OAUTH\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 BEARER\n                            \n                        \n                        \n                            \n                                Value : BEARER\n                            \n                        \n            \n        \n\n    libs/data/__tmp/event.ts\n    \n        \n            \n                \n                    \n                        \n                        EventStatus\n                    \n                \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                 POSTPONED\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                 RESCHEDULED\n                            \n                        \n                        \n                            \n                                 UNSCHEDULED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EventType\n                    \n                \n                        \n                            \n                                 AMBIENT\n                            \n                        \n                        \n                            \n                                 OPEN_MIC\n                            \n                        \n                        \n                            \n                                 JAM_SESSION\n                            \n                        \n                        \n                            \n                                 MEETUP\n                            \n                        \n            \n        \n\n    libs/data/src/enums/event-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        EventStatus\n                    \n                \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : CANCELLED\n                            \n                        \n                        \n                            \n                                 POSTPONED\n                            \n                        \n                        \n                            \n                                Value : POSTPONED\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : SCHEDULED\n                            \n                        \n                        \n                            \n                                 RESCHEDULED\n                            \n                        \n                        \n                            \n                                Value : RESCHEDULED\n                            \n                        \n                        \n                            \n                                 UNSCHEDULED\n                            \n                        \n                        \n                            \n                                Value : UNSCHEDULED\n                            \n                        \n            \n        \n\n    libs/data/__tmp/moderation.ts\n    \n        \n            \n                \n                    \n                        \n                        FlagType\n                    \n                \n                        \n                            \n                                 HATE_SPEECH\n                            \n                        \n                        \n                            \n                                 DISCRIMINATION\n                            \n                        \n                        \n                            \n                                 HARASSMENT\n                            \n                        \n                        \n                            \n                                 THREATS\n                            \n                        \n                        \n                            \n                                 SPAM\n                            \n                        \n                        \n                            \n                                 MISINFORMATION\n                            \n                        \n                        \n                            \n                                 ILLEGAL_CONTENT\n                            \n                        \n                        \n                            \n                                 COPYRIGHT\n                            \n                        \n                        \n                            \n                                 SEXUAL\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n            \n        \n\n    apps/auth/src/dto/login.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        LoginType\n                    \n                \n                        \n                            \n                                 USERNAME\n                            \n                        \n                        \n                            \n                                Value : USERNAME\n                            \n                        \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : EMAIL\n                            \n                        \n                        \n                            \n                                 GOOGLE\n                            \n                        \n                        \n                            \n                                Value : GOOGLE\n                            \n                        \n            \n        \n\n    apps/notification/src/schemas/user.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationFrequency\n                    \n                \n                        \n                            \n                                 DAILY\n                            \n                        \n                        \n                            \n                                Value : DAILY\n                            \n                        \n                        \n                            \n                                 WEEKLY\n                            \n                        \n                        \n                            \n                                Value : WEEKLY\n                            \n                        \n                        \n                            \n                                 OCCASIONALLY\n                            \n                        \n                        \n                            \n                                Value : OCCASIONALLY\n                            \n                        \n            \n        \n\n    apps/notification/src/schemas/channel.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationService\n                    \n                \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : EMAIL\n                            \n                        \n                        \n                            \n                                 SMS\n                            \n                        \n                        \n                            \n                                Value : SMS\n                            \n                        \n                        \n                            \n                                 PUSH\n                            \n                        \n                        \n                            \n                                Value : PUSH\n                            \n                        \n                        \n                            \n                                 IN_APP\n                            \n                        \n                        \n                            \n                                Value : IN_APP\n                            \n                        \n            \n        \n\n    libs/data/__tmp/account.ts\n    \n        \n            \n                \n                    \n                        \n                        StageType\n                    \n                \n                        \n                            \n                                 STAGE\n                            \n                        \n                        \n                            \n                                 AREA\n                            \n                        \n                        \n                            \n                                 ROOM\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VenueType\n                    \n                \n                    \n                        \n                            VENUE\n\n                        \n                    \n                        \n                            \n                                 VENUE\n                            \n                        \n                        \n                            \n                                 RESTAURANT\n                            \n                        \n                        \n                            \n                                 CAFE\n                            \n                        \n                        \n                            \n                                 BAR\n                            \n                        \n                        \n                            \n                                 BREWERY\n                            \n                        \n                        \n                            \n                                 WINERY\n                            \n                        \n                        \n                            \n                                 DISTILLERY\n                            \n                        \n                        \n                            \n                                 CLUB\n                            \n                        \n                        \n                            \n                                 THEATER\n                            \n                        \n                        \n                            \n                                 GALLERY\n                            \n                        \n                        \n                            \n                                 AREA\n                            \n                        \n                        \n                            \n                                 CASINO\n                            \n                        \n                        \n                            \n                                 LOCATION\n                            \n                        \n                        \n                            \n                                 COMPLEX\n                            \n                        \n                        \n                            \n                                 STADIUM\n                            \n                        \n            \n        \n\n    libs/data/__tmp/stage.ts\n    \n        \n            \n                \n                    \n                        \n                        StageType\n                    \n                \n            \n        \n\n    libs/data/src/enums/stage-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StageType\n                    \n                \n                        \n                            \n                                 STAGE\n                            \n                        \n                        \n                            \n                                Value : STAGE\n                            \n                        \n                        \n                            \n                                 AREA\n                            \n                        \n                        \n                            \n                                Value : AREA\n                            \n                        \n                        \n                            \n                                 ROOM\n                            \n                        \n                        \n                            \n                                Value : ROOM\n                            \n                        \n            \n        \n\n    libs/data/__tmp/user.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                 PERFORMER\n                            \n                        \n                        \n                            \n                                 VENUE\n                            \n                        \n                        \n                            \n                                 ORGANIZER\n                            \n                        \n                        \n                            \n                                 ASSOCIATE\n                            \n                        \n            \n        \n\n    libs/data/src/enums/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : PUBLIC\n                            \n                        \n                        \n                            \n                                 PERFORMER\n                            \n                        \n                        \n                            \n                                Value : PERFORMER\n                            \n                        \n                        \n                            \n                                 VENUE\n                            \n                        \n                        \n                            \n                                Value : VENUE\n                            \n                        \n                        \n                            \n                                 ORGANIZER\n                            \n                        \n                        \n                            \n                                Value : ORGANIZER\n                            \n                        \n                        \n                            \n                                 ASSOCIATE\n                            \n                        \n                        \n                            \n                                Value : ASSOCIATE\n                            \n                        \n            \n        \n\n    libs/data/src/enums/venue-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        VenueType\n                    \n                \n                        \n                            \n                                 VENUE\n                            \n                        \n                        \n                            \n                                Value : VENUE\n                            \n                        \n                        \n                            \n                                 RESTAURANT\n                            \n                        \n                        \n                            \n                                Value : RESTAURANT\n                            \n                        \n                        \n                            \n                                 CAFE\n                            \n                        \n                        \n                            \n                                Value : CAFE\n                            \n                        \n                        \n                            \n                                 BAR\n                            \n                        \n                        \n                            \n                                Value : BAR\n                            \n                        \n                        \n                            \n                                 BREWERY\n                            \n                        \n                        \n                            \n                                Value : BREWERY\n                            \n                        \n                        \n                            \n                                 WINERY\n                            \n                        \n                        \n                            \n                                Value : WINERY\n                            \n                        \n                        \n                            \n                                 DISTILLERY\n                            \n                        \n                        \n                            \n                                Value : DISTILLERY\n                            \n                        \n                        \n                            \n                                 CLUB\n                            \n                        \n                        \n                            \n                                Value : CLUB\n                            \n                        \n                        \n                            \n                                 THEATER\n                            \n                        \n                        \n                            \n                                Value : THEATER\n                            \n                        \n                        \n                            \n                                 GALLERY\n                            \n                        \n                        \n                            \n                                Value : GALLERY\n                            \n                        \n                        \n                            \n                                 AREA\n                            \n                        \n                        \n                            \n                                Value : AREA\n                            \n                        \n                        \n                            \n                                 CASINO\n                            \n                        \n                        \n                            \n                                Value : CASINO\n                            \n                        \n                        \n                            \n                                 LOCATION\n                            \n                        \n                        \n                            \n                                Value : LOCATION\n                            \n                        \n                        \n                            \n                                 COMPLEX\n                            \n                        \n                        \n                            \n                                Value : COMPLEX\n                            \n                        \n                        \n                            \n                                 STADIUM\n                            \n                        \n                        \n                            \n                                Value : STADIUM\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Auth   (libs/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (original/.../main.ts)\n                        \n                        \n                            bootstrap   (original/.../main.ts)\n                        \n                        \n                            bootstrap   (original/.../main.ts)\n                        \n                        \n                            bootstrap   (original/.../main.ts)\n                        \n                        \n                            bootstrap   (original/.../main.ts)\n                        \n                        \n                            bootstrap   (original/.../main.ts)\n                        \n                        \n                            bootstrap   (original/.../main.ts)\n                        \n                        \n                            bootstrap   (original/.../main.ts)\n                        \n                        \n                            bootstrap   (original/.../main.ts)\n                        \n                        \n                            bootstrap   (original/.../main.ts)\n                        \n                        \n                            FindAll   (libs/.../find-all.decorator.ts)\n                        \n                        \n                            FindOne   (libs/.../find-one.decorator.ts)\n                        \n                        \n                            matchRoles   (original/.../roles.guard.ts)\n                        \n                        \n                            RestController   (libs/.../controller.decorator.ts)\n                        \n                        \n                            stringOrNull   (original/.../shared.ts)\n                        \n                        \n                            Update   (libs/.../update.decorator.ts)\n                        \n                        \n                            validateRequest   (original/.../auth.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/decorators/src/auth/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n            \n                \nAuth(options?: AuthOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            AuthOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        Bootstrap\n\n\n                \n            \n        \n    \n    apps/auth/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/content/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/media/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/notification/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/ws/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    original/xxx/apps/auth/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    original/xxx/apps/advanced/chat/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    original/xxx/apps/advanced/notification/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    original/xxx/apps/advanced/presence/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    original/xxx/apps/core/event/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    original/xxx/apps/core/location/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    original/xxx/apps/core/media/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    original/xxx/apps/core/user/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    original/xxx/apps/gateways/graphql/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    original/xxx/apps/gateways/rest/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    libs/decorators/src/resource/find-all.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FindAll\n                        \n                    \n                \n            \n            \n                \nFindAll(__namedParameters: {path: FindAllOptions, ...apiMetadata: any[]})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            FindAllOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                apiMetadata\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/decorators/src/resource/find-one.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FindOne\n                        \n                    \n                \n            \n            \n                \nFindOne(__namedParameters: {path: FindOneOptions, ...apiMetadata: any[]})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            FindOneOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ':id'\n                                            \n\n                                        \n                                        \n                                                apiMetadata\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    original/xxx/auth/src/guards/roles.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        matchRoles\n                        \n                    \n                \n            \n            \n                \nmatchRoles(roles, userRoles)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roles\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userRoles\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/decorators/src/controller.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RestController\n                        \n                    \n                \n            \n            \n                \nRestController(options)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    original/schema/accounts/shared.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        stringOrNull\n                        \n                    \n                \n            \n            \n                \nstringOrNull(val)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/decorators/src/resource/update.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Update\n                        \n                    \n                \n            \n            \n                \nUpdate(__namedParameters: {path: PatchOptions, ...apiMetadata: any[]})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            PatchOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ':id'\n                                            \n\n                                        \n                                        \n                                                apiMetadata\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    original/xxx/auth/src/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateRequest\n                        \n                    \n                \n            \n            \n                \nvalidateRequest(request: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMusic Networking Platform: A Microservices-Based App for Live Events (NestJS, Docker, RabbitMQ, WebSockets)\nIn Progress: A Scalable Live Music Connection Platform\nThis repository is under active development and serves as the foundation for a robust music networking platform designed to connect musicians, venues, and music enthusiasts for live entertainment experiences beyond traditional stage shows (restaurants, wineries, etc.). Built on a microservices architecture with NestJS, Docker, RabbitMQ, and WebSockets, this application aims to foster vibrant musical communities through a scalable and performant architecture.\nTechnical Overview:\n\nMicroservices Architecture: The application is divided into independent, well-defined microservices, each responsible for a specific functionality (e.g., User Management, Event Management, Content Management). This promotes modularity, scalability, and easier maintenance.\nNestJS Framework: Leverages NestJS, a popular TypeScript framework for building efficient and scalable Node.js applications.\nDocker Containerization: Employs Docker containers to package and isolate microservices, facilitating deployment across different environments.\nRabbitMQ for Communication: Utilizes RabbitMQ as a message broker for asynchronous communication between microservices, ensuring loose coupling and fault tolerance.\nWebSockets for Real-Time: Implements WebSockets to enable real-time features like chat functionalities within the platform.\nREST & GraphQL API Gateways: Exposes well-defined RESTful and GraphQL APIs through API gateways, allowing client applications to interact with the platform's functionalities.\n\nGetting Started (Development Environment Setup):\nPrerequisites:\n\nNode.js and npm (or yarn): Ensure you have Node.js (version 16 or later) and npm (or yarn) installed on your development machine.\nDocker: Install and configure Docker according to the official documentation (https://docs.docker.com/):\nCode Editor or IDE: Choose a preferred code editor or IDE (Visual Studio Code, WebStorm, etc.)\n\nSetting Up Your Development Environment:\n\nClone the repository:\nExample :git clone https://github.com/your-username/music-networking-platform.git\nInstall dependencies:\nExample :cd music-networking-platform\nnpm install  # or yarn install\nConfigure environment variables:\nCreate a .env file in the root directory and define essential environment variables for your database connection, authentication services, notification channels, and other configurations. You can use a sample .env.example file as a reference and populate it with your specific values.\nExample (.env.example):\nExample :DATABASE_URL=postgres://user:password@host:port/database\nJWT_SECRET=your_secret_key\nNOTIFICATION_GATEWAY_URL=...\n# ... other environment variables\nRun database migrations:\nExample :npm run migrate  # or yarn migrateThis command creates or updates database tables based on your models.\n\nStart the application:\nExample :npm run start:dev  # or yarn start:devThis will start all microservices in development mode, allowing you to interact with the platform through the API gateways.\n\n\nDevelopment Workflow:\n\nEach microservice resides in its own subdirectory with its own package.json and tsconfig.json files.\nUse NestJS command-line tools for development tasks within each microservice directory:\nnpm run build (or yarn build) to build the microservice for production.\nnpm run start (or yarn start) to start the microservice in development mode.\nnpm run test (or yarn test) to run unit and integration tests for the microservice.\n\n\nUtilize Docker for containerization and easier deployment. Docker Compose configuration files (.docker-compose.yml) are provided to manage starting multiple microservices simultaneously. You can run docker-compose up -d to start all services in the background.\n\nTesting:\nUnit and integration tests are encouraged for each microservice to ensure code quality and functionality. Utilize testing frameworks like Jest or Mocha for comprehensive coverage.\nContributing (Future):\nThis repository is currently under active development. We plan to open contributions in the future. Stay tuned for further updates!\nDisclaimer:\nThis application is a work in progress. While the core functionalities are being actively developed, certain features might be under construction or not fully implemented.\nLicense:\nThis project is licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BandsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChatModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConnectionModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConnectionModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConnectionModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphqlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GuardsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MusiciansModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NetworksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganizersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PresenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StrategyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VenuesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WebsocketModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BandsModule\n\n\n\ncluster_BandsModule_providers\n\n\n\ncluster_ChatModule\n\n\n\ncluster_ChatModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ConnectionModule\n\n\n\ncluster_ConnectionModule_providers\n\n\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_providers\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_providers\n\n\n\ncluster_GraphqlModule\n\n\n\ncluster_GraphqlModule_providers\n\n\n\ncluster_LocationsModule\n\n\n\ncluster_LocationsModule_providers\n\n\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_providers\n\n\n\ncluster_MessagingModule\n\n\n\ncluster_MessagingModule_exports\n\n\n\ncluster_MessagingModule_providers\n\n\n\ncluster_MusiciansModule\n\n\n\ncluster_MusiciansModule_providers\n\n\n\ncluster_NetworksModule\n\n\n\ncluster_NetworksModule_providers\n\n\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_OrganizersModule\n\n\n\ncluster_OrganizersModule_providers\n\n\n\ncluster_PresenceModule\n\n\n\ncluster_PresenceModule_providers\n\n\n\ncluster_StrategyModule\n\n\n\ncluster_StrategyModule_exports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_VenuesModule\n\n\n\ncluster_VenuesModule_providers\n\n\n\ncluster_WebsocketModule\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nWebsocketModule\n\nWebsocketModule\n\nWebsocketModule -->\n\nAdminModule->WebsocketModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nAuthModule->ApiModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nBandsModule\n\nBandsModule\n\nApiModule -->\n\nBandsModule->ApiModule\n\n\n\n\n\nConnectionModule\n\nConnectionModule\n\nApiModule -->\n\nConnectionModule->ApiModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConnectionModule->AppModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nApiModule -->\n\nEventsModule->ApiModule\n\n\n\nWebsocketModule -->\n\nEventsModule->WebsocketModule\n\n\n\n\n\nLocationsModule\n\nLocationsModule\n\nApiModule -->\n\nLocationsModule->ApiModule\n\n\n\n\n\nMusiciansModule\n\nMusiciansModule\n\nApiModule -->\n\nMusiciansModule->ApiModule\n\n\n\n\n\nNetworksModule\n\nNetworksModule\n\nApiModule -->\n\nNetworksModule->ApiModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nApiModule -->\n\nNotificationModule->ApiModule\n\n\n\n\n\nOrganizersModule\n\nOrganizersModule\n\nApiModule -->\n\nOrganizersModule->ApiModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nApiModule -->\n\nUsersModule->ApiModule\n\n\n\n\n\nVenuesModule\n\nVenuesModule\n\nApiModule -->\n\nVenuesModule->ApiModule\n\n\n\n\n\nAccountService\n\nAccountService\n\nAuthModule -->\n\nAccountService->AuthModule\n\n\n\n\n\nCoreAuthService\n\nCoreAuthService\n\nAuthModule -->\n\nCoreAuthService->AuthModule\n\n\n\n\n\nCredentialsService\n\nCredentialsService\n\nAuthModule -->\n\nCredentialsService->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nStrategyModule\n\nStrategyModule\n\nStrategyModule -->\n\nLocalStrategy->StrategyModule\n\n\n\n\n\nSessionsService\n\nSessionsService\n\nAuthModule -->\n\nSessionsService->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBandsService\n\nBandsService\n\nBandsModule -->\n\nBandsService->BandsModule\n\n\n\n\n\nChatService\n\nChatService\n\n\n\nChatModule\n\nChatModule\n\nChatModule -->\n\nChatService->ChatModule\n\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nConnectionService\n\nConnectionService\n\nConnectionModule -->\n\nConnectionService->ConnectionModule\n\n\n\n\n\nContentService\n\nContentService\n\n\n\nContentModule\n\nContentModule\n\nContentModule -->\n\nContentService->ContentModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nEventsModule -->\n\nEventsService->EventsModule\n\n\n\nEventsModule -->\n\nEventsService->EventsModule\n\n\n\nEventsModule -->\n\nEventsService->EventsModule\n\n\n\n\n\nGraphqlService\n\nGraphqlService\n\n\n\nGraphqlModule\n\nGraphqlModule\n\nGraphqlModule -->\n\nGraphqlService->GraphqlModule\n\n\n\n\n\nLocationsService\n\nLocationsService\n\nLocationsModule -->\n\nLocationsService->LocationsModule\n\n\n\nLocationsModule -->\n\nLocationsService->LocationsModule\n\n\n\n\n\nMediaService\n\nMediaService\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\nMessagingService \n\nMessagingService \n\n\n\nMessagingModule\n\nMessagingModule\n\nMessagingService  -->\n\nMessagingModule->MessagingService \n\n\n\nWebsocketModule -->\n\nMessagingModule->WebsocketModule\n\n\n\n\n\nMessagingService\n\nMessagingService\n\nMessagingModule -->\n\nMessagingService->MessagingModule\n\n\n\nMessagingModule -->\n\nMessagingService->MessagingModule\n\n\n\n\n\nMusiciansService\n\nMusiciansService\n\nMusiciansModule -->\n\nMusiciansService->MusiciansModule\n\n\n\n\n\nNetworksService\n\nNetworksService\n\nNetworksModule -->\n\nNetworksService->NetworksModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nOrganizersService\n\nOrganizersService\n\nOrganizersModule -->\n\nOrganizersService->OrganizersModule\n\n\n\n\n\nPresenceService\n\nPresenceService\n\n\n\nPresenceModule\n\nPresenceModule\n\nPresenceModule -->\n\nPresenceService->PresenceModule\n\n\n\n\n\nLocalStrategy \n\nLocalStrategy \n\nLocalStrategy  -->\n\nStrategyModule->LocalStrategy \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nVenuesService\n\nVenuesService\n\nVenuesModule -->\n\nVenuesService->VenuesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        35 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    17 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    41 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    125 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.5.0\n        \n            Description : A NestJS microservice app for managing live music events and facilitating musician/venue/organizer networking\n        \n            Keywords : live-music, events, management, networking, nestjs, microservices\n        \n            License : UNLICENSED\n        \n            Author : Michael Weitzenhoffer \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODO.md - User Authentication Microservice\nThis file outlines the development roadmap for the User Authentication Microservice.\nHigh-level Goals\n\nImplement a secure and scalable user authentication system.\nSeparate authentication logic from the main application for a microservices architecture.\nSupport various authentication methods (username/password, potentially social logins in the future).\nIssue and manage tokens (JWTs) for authorization (optional).\n\nUser Stories\n\nAs a user, I want to register for an account using a username and password.\nAs a user, I want to login using my username and password.\nAs a user, I want to be able to reset my password if I forget it. (Optional)\nAs a user (admin), I want to be able to manage user accounts (CRUD operations). (Optional)\n\nNote: These are just some basic user stories. You can expand on them based on your specific requirements.\nDatabase/Datastore\n\nDecide on the data storage solution for the auth service (e.g., relational database like PostgreSQL, NoSQL database like Redis). Consider factors like data persistence needs, scalability, and performance requirements.\nDefine the data schema for the user authentication service, including tables for:\nAccounts (foreign key reference to user ID from the user service, potentially additional auth-specific information)\nCredentials (username/password, tokens for social logins, foreign key to the Accounts table)\nSessions (optional, for managing user sessions, includes session token, expiration time, foreign key to the Accounts table)\n\n\n\nAuthentication Methods\n\nImplement username/password authentication with secure password hashing and storage.\nConsider integration with social login providers (OIDC, OAuth) in the future. (Optional)\n\nToken Management (Optional)\n\nImplement JWT (JSON Web Token) generation and validation for authorization purposes.\nDefine strategies for token storage, expiration, and refresh mechanisms.\n\nSecurity Considerations\n\nPrioritize secure password storage using hashing algorithms (e.g., bcrypt).\nImplement mechanisms for account lockout after failed login attempts.\nEnforce secure communication channels (HTTPS) for API calls within the microservices architecture.\nConsider additional security measures like rate limiting and CSRF protection.\n\nAPI Definition\n\nDefine a clear and well-documented API for the auth service, including endpoints for user registration, login, password reset (optional), and potentially user management (CRUD) for admin users (optional).\n\nTesting\n\nImplement unit and integration tests to ensure the functionality and security of the auth service.\nConsider security testing to identify and address potential vulnerabilities.\n\nDeployment\n\nDefine a deployment strategy for the auth service within your microservices architecture.\nConsider containerization and orchestration tools like Docker and Kubernetes for easier deployment and management.\n\nNext Steps\n\nPrioritize and break down the tasks listed above into smaller, manageable steps.\nEstimate development effort and timeline for each task.\nStart implementing the core functionalities of the user authentication service.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllGenres   (original/.../index.ts)\n                        \n                        \n                            AllGroups   (original/.../groups.ts)\n                        \n                        \n                            AllMusicians   (original/.../musicians.ts)\n                        \n                        \n                            AllOrganizers   (original/.../organizers.ts)\n                        \n                        \n                            AllPerformers   (original/.../performers.ts)\n                        \n                        \n                            AllVenues   (original/.../venues.ts)\n                        \n                        \n                            AppRouter   (original/.../index.ts)\n                        \n                        \n                            EventDetails   (original/.../main.ts)\n                        \n                        \n                            EventsInputs   (original/.../main.ts)\n                        \n                        \n                            EventsOutputs   (original/.../main.ts)\n                        \n                        \n                            FavoriteEvents   (original/.../main.ts)\n                        \n                        \n                            FavoriteGroups   (original/.../groups.ts)\n                        \n                        \n                            FavoriteMusicians   (original/.../musicians.ts)\n                        \n                        \n                            FavoriteOrganizers   (original/.../organizers.ts)\n                        \n                        \n                            FavoritePerformers   (original/.../performers.ts)\n                        \n                        \n                            FavoriteVenues   (original/.../venues.ts)\n                        \n                        \n                            GetAllGroupsInput   (original/.../groups.ts)\n                        \n                        \n                            GetAllMusiciansInput   (original/.../musicians.ts)\n                        \n                        \n                            GetAllOrganizersInput   (original/.../organizers.ts)\n                        \n                        \n                            GetAllPerformersInput   (original/.../performers.ts)\n                        \n                        \n                            GetAllVenuesInput   (original/.../venues.ts)\n                        \n                        \n                            GetUpcomingEventsInput   (original/.../main.ts)\n                        \n                        \n                            GetUsersFavoriteEventsInput   (original/.../main.ts)\n                        \n                        \n                            GetUsersFavoriteGroupsInput   (original/.../groups.ts)\n                        \n                        \n                            GetUsersFavoriteMusiciansInput   (original/.../musicians.ts)\n                        \n                        \n                            GetUsersFavoritePerformersInput   (original/.../performers.ts)\n                        \n                        \n                            GetUsersFavoriteVenuesInput   (original/.../venues.ts)\n                        \n                        \n                            GroupDetails   (original/.../groups.ts)\n                        \n                        \n                            GroupsInputs   (original/.../groups.ts)\n                        \n                        \n                            GroupsOutputs   (original/.../groups.ts)\n                        \n                        \n                            LoginDto   (apps/.../login.dto.ts)\n                        \n                        \n                            MusiciansInputs   (original/.../musicians.ts)\n                        \n                        \n                            MusiciansOutputs   (original/.../musicians.ts)\n                        \n                        \n                            OrganizersInputs   (original/.../organizers.ts)\n                        \n                        \n                            OrganizersOutputs   (original/.../organizers.ts)\n                        \n                        \n                            PerformersInputs   (original/.../performers.ts)\n                        \n                        \n                            PerformersOutputs   (original/.../performers.ts)\n                        \n                        \n                            QuickViewEvents   (original/.../main.ts)\n                        \n                        \n                            QuickViewOrganizers   (original/.../organizers.ts)\n                        \n                        \n                            QuickViewPerformers   (original/.../performers.ts)\n                        \n                        \n                            QuickViewVenues   (original/.../venues.ts)\n                        \n                        \n                            UpcomingEvents   (original/.../main.ts)\n                        \n                        \n                            User   (original/.../users.service.ts)\n                        \n                        \n                            VenueDetails   (original/.../venues.ts)\n                        \n                        \n                            VenuesInputs   (original/.../venues.ts)\n                        \n                        \n                            VenuesOutputs   (original/.../venues.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    original/trpc/general/index.ts\n    \n    \n        \n            \n                \n                    \n                    AllGenres\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    original/trpc/accounts/groups.ts\n    \n    \n        \n            \n                \n                    \n                    AllGroups\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FavoriteGroups\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GetAllGroupsInput\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GetUsersFavoriteGroupsInput\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GroupDetails\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GroupsInputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GroupsOutputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    original/trpc/accounts/musicians.ts\n    \n    \n        \n            \n                \n                    \n                    AllMusicians\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FavoriteMusicians\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GetAllMusiciansInput\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GetUsersFavoriteMusiciansInput\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MusiciansInputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MusiciansOutputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    original/trpc/accounts/organizers.ts\n    \n    \n        \n            \n                \n                    \n                    AllOrganizers\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FavoriteOrganizers\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GetAllOrganizersInput\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrganizersInputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrganizersOutputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QuickViewOrganizers\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    original/trpc/accounts/performers.ts\n    \n    \n        \n            \n                \n                    \n                    AllPerformers\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FavoritePerformers\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GetAllPerformersInput\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GetUsersFavoritePerformersInput\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PerformersInputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PerformersOutputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QuickViewPerformers\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    original/trpc/accounts/venues.ts\n    \n    \n        \n            \n                \n                    \n                    AllVenues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FavoriteVenues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GetAllVenuesInput\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GetUsersFavoriteVenuesInput\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QuickViewVenues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VenueDetails\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VenuesInputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VenuesOutputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    original/trpc/index.ts\n    \n    \n        \n            \n                \n                    \n                    AppRouter\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    original/trpc/events/main.ts\n    \n    \n        \n            \n                \n                    \n                    EventDetails\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventsInputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventsOutputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FavoriteEvents\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GetUpcomingEventsInput\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GetUsersFavoriteEventsInput\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QuickViewEvents\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpcomingEvents\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/auth/src/dto/login.dto.ts\n    \n    \n        \n            \n                \n                    \n                    LoginDto\n                \n            \n            \n                \n                        UsernameLoginDto | EmailLoginDto | GoogleLoginDto\n\n                \n            \n        \n    \n    original/xxx/apps/core/user/src/users.service.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
